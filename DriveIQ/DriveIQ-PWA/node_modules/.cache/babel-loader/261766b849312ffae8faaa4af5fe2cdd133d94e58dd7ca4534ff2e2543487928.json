{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anush\\\\OneDrive\\\\Desktop\\\\minor project\\\\DriveIQ\\\\DriveIQ\\\\DriveIQ-PWA\\\\src\\\\components\\\\Dashboard\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Polyline } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { Line } from 'react-chartjs-2';\nimport axios from 'axios';\nimport DailyScorePopup from '../DailyScorePopup/DailyScorePopup';\nimport { FaTachometerAlt, FaBolt, FaCarCrash, FaMapMarkerAlt } from 'react-icons/fa';\nimport './Dashboard.scss';\n\n// Importing necessary Chart.js components\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst Dashboard = () => {\n  _s();\n  const [gpsData, setGpsData] = useState([]);\n  const [route, setRoute] = useState([]);\n  const [performanceData, setPerformanceData] = useState({\n    speed: [],\n    acceleration: [],\n    jerk: []\n  });\n  const [driverId, setDriverId] = useState(null);\n  const [error, setError] = useState('');\n  const [isMockMode, setIsMockMode] = useState(true); // Mock GPS for testing\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://localhost:5000/api/user-data', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setDriverId(response.data.driver_id);\n      } catch (err) {\n        setError('Error fetching user data');\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (driverId) {\n      const interval = setInterval(() => {\n        if (isMockMode) {\n          simulateSmartDriving(); // Smart mock GPS simulation\n        } else {\n          getRealGpsData(); // Real GPS for mobile devices\n        }\n      }, 5000); // Every 5 seconds\n\n      return () => clearInterval(interval); // Cleanup interval\n    }\n  }, [driverId, isMockMode]);\n\n  // Simulate realistic trips for the entire day\n  const simulateSmartDriving = async () => {\n    const trips = generateMockTrips();\n    for (const trip of trips) {\n      sendGpsDataToBackend(trip.gps_data);\n      await new Promise(resolve => setTimeout(resolve, 2000)); // Delay between batches\n    }\n  };\n\n  // Generate mock GPS trips with realistic driving behavior\n  const generateMockTrips = () => {\n    return [\n    // Trip 1: 10:00 AM - 11:00 AM\n    generateTripBatch('10:00 AM', '11:00 AM', [0, 5, 40, 50, 20, 0]),\n    // Trip 2: 11:15 AM - 11:30 AM\n    generateTripBatch('11:15 AM', '11:30 AM', [0, 10, 35, 45, 25, 0]),\n    // Trip 3: 2:00 PM - 3:00 PM\n    generateTripBatch('2:00 PM', '3:00 PM', [0, 5, 30, 40, 20, 0])];\n  };\n\n  // Generate a mock trip with varying speed and timestamp data\n  const generateTripBatch = (start_time, end_time, speedArray) => {\n    const mockGpsData = [];\n    const lat = 51.505;\n    const lng = -0.09;\n    const interval = 60 * 60 * 1000 / speedArray.length; // Time interval for each point in milliseconds\n\n    for (let i = 0; i < speedArray.length; i++) {\n      mockGpsData.push({\n        lat: lat + i * 0.001,\n        // Simulate movement by changing latitude slightly\n        lng: lng + i * 0.001,\n        // Simulate movement by changing longitude slightly\n        timestamp: Date.now() + i * interval,\n        // Progress the timestamp\n        speed: speedArray[i] // Varying speed for this trip\n      });\n    }\n    return {\n      gps_data: mockGpsData\n    };\n  };\n\n  // Send the batched GPS data to the backend\n  const sendGpsDataToBackend = async gpsDataBatch => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post('http://localhost:5000/api/record-telematics', {\n        driver_id: driverId,\n        gps_data: gpsDataBatch\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const gps = response.data.gps_data;\n      const performance = response.data.performance;\n      setGpsData(gps);\n      setRoute(gps.map(point => [point.lat, point.lng]));\n      setPerformanceData({\n        speed: performance.speed,\n        acceleration: performance.acceleration,\n        jerk: performance.jerk\n      });\n    } catch (err) {\n      setError('Error sending GPS data');\n    }\n  };\n\n  // Get real GPS data (mobile use case)\n  const getRealGpsData = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.watchPosition(async position => {\n        const realGpsData = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n          timestamp: Date.now(),\n          speed: position.coords.speed ? position.coords.speed * 3.6 : 0 // Convert to km/h\n        };\n        if (realGpsData.speed > 5) {\n          sendGpsDataToBackend([realGpsData]);\n        }\n      }, err => setError('Error getting real GPS data: ' + err.message), {\n        enableHighAccuracy: true\n      });\n    } else {\n      setError('Geolocation is not supported by this browser.');\n    }\n  };\n  const chartData = {\n    labels: gpsData.map((_, index) => `T${index}`),\n    datasets: [{\n      label: 'Speed (m/s)',\n      data: performanceData.speed,\n      borderColor: 'rgba(75,192,192,1)'\n    }, {\n      label: 'Acceleration (m/s²)',\n      data: performanceData.acceleration,\n      borderColor: '#FF6384'\n    }, {\n      label: 'Jerk (m/s³)',\n      data: performanceData.jerk,\n      borderColor: '#36A2EB'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Driver Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-section\",\n        children: /*#__PURE__*/_jsxDEV(MapContainer, {\n          center: [51.505, -0.09],\n          zoom: 13,\n          className: \"map\",\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n            positions: route,\n            color: \"blue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-section\",\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icon-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-item\",\n        children: [/*#__PURE__*/_jsxDEV(FaTachometerAlt, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), \" Speed: \", performanceData.speed.slice(-1), \" m/s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-item\",\n        children: [/*#__PURE__*/_jsxDEV(FaBolt, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), \" Acceleration: \", performanceData.acceleration.slice(-1), \" m/s\\xB2\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-item\",\n        children: [/*#__PURE__*/_jsxDEV(FaCarCrash, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), \" Jerk: \", performanceData.jerk.slice(-1), \" m/s\\xB3\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-item\",\n        children: [/*#__PURE__*/_jsxDEV(FaMapMarkerAlt, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), \" Total Route Points: \", route.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DailyScorePopup, {\n      driverId: driverId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"DhSJarjBX1WZHDdIDibriq/jK8A=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Polyline","Line","axios","DailyScorePopup","FaTachometerAlt","FaBolt","FaCarCrash","FaMapMarkerAlt","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Dashboard","_s","gpsData","setGpsData","route","setRoute","performanceData","setPerformanceData","speed","acceleration","jerk","driverId","setDriverId","error","setError","isMockMode","setIsMockMode","fetchData","token","localStorage","getItem","response","get","headers","Authorization","data","driver_id","err","interval","setInterval","simulateSmartDriving","getRealGpsData","clearInterval","trips","generateMockTrips","trip","sendGpsDataToBackend","gps_data","Promise","resolve","setTimeout","generateTripBatch","start_time","end_time","speedArray","mockGpsData","lat","lng","length","i","push","timestamp","Date","now","gpsDataBatch","post","gps","performance","map","point","navigator","geolocation","watchPosition","position","realGpsData","coords","latitude","longitude","message","enableHighAccuracy","chartData","labels","_","index","datasets","label","borderColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","url","positions","color","slice","_c","$RefreshReg$"],"sources":["C:/Users/anush/OneDrive/Desktop/minor project/DriveIQ/DriveIQ/DriveIQ-PWA/src/components/Dashboard/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { MapContainer, TileLayer, Polyline } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { Line } from 'react-chartjs-2';\r\nimport axios from 'axios';\r\nimport DailyScorePopup from '../DailyScorePopup/DailyScorePopup';\r\nimport { FaTachometerAlt, FaBolt, FaCarCrash, FaMapMarkerAlt } from 'react-icons/fa';\r\nimport './Dashboard.scss';\r\n\r\n// Importing necessary Chart.js components\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst Dashboard = () => {\r\n  const [gpsData, setGpsData] = useState([]);\r\n  const [route, setRoute] = useState([]);\r\n  const [performanceData, setPerformanceData] = useState({\r\n    speed: [],\r\n    acceleration: [],\r\n    jerk: [],\r\n  });\r\n  const [driverId, setDriverId] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const [isMockMode, setIsMockMode] = useState(true); // Mock GPS for testing\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.get('http://localhost:5000/api/user-data', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        setDriverId(response.data.driver_id);\r\n      } catch (err) {\r\n        setError('Error fetching user data');\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (driverId) {\r\n      const interval = setInterval(() => {\r\n        if (isMockMode) {\r\n          simulateSmartDriving(); // Smart mock GPS simulation\r\n        } else {\r\n          getRealGpsData(); // Real GPS for mobile devices\r\n        }\r\n      }, 5000); // Every 5 seconds\r\n\r\n      return () => clearInterval(interval); // Cleanup interval\r\n    }\r\n  }, [driverId, isMockMode]);\r\n\r\n  // Simulate realistic trips for the entire day\r\n  const simulateSmartDriving = async () => {\r\n    const trips = generateMockTrips();\r\n\r\n    for (const trip of trips) {\r\n      sendGpsDataToBackend(trip.gps_data);\r\n      await new Promise(resolve => setTimeout(resolve, 2000)); // Delay between batches\r\n    }\r\n  };\r\n\r\n  // Generate mock GPS trips with realistic driving behavior\r\n  const generateMockTrips = () => {\r\n    return [\r\n      // Trip 1: 10:00 AM - 11:00 AM\r\n      generateTripBatch('10:00 AM', '11:00 AM', [0, 5, 40, 50, 20, 0]),\r\n      \r\n      // Trip 2: 11:15 AM - 11:30 AM\r\n      generateTripBatch('11:15 AM', '11:30 AM', [0, 10, 35, 45, 25, 0]),\r\n\r\n      // Trip 3: 2:00 PM - 3:00 PM\r\n      generateTripBatch('2:00 PM', '3:00 PM', [0, 5, 30, 40, 20, 0]),\r\n    ];\r\n  };\r\n\r\n  // Generate a mock trip with varying speed and timestamp data\r\n  const generateTripBatch = (start_time, end_time, speedArray) => {\r\n    const mockGpsData = [];\r\n    const lat = 51.505;\r\n    const lng = -0.09;\r\n\r\n    const interval = (60 * 60 * 1000) / speedArray.length; // Time interval for each point in milliseconds\r\n\r\n    for (let i = 0; i < speedArray.length; i++) {\r\n      mockGpsData.push({\r\n        lat: lat + (i * 0.001), // Simulate movement by changing latitude slightly\r\n        lng: lng + (i * 0.001), // Simulate movement by changing longitude slightly\r\n        timestamp: Date.now() + (i * interval), // Progress the timestamp\r\n        speed: speedArray[i], // Varying speed for this trip\r\n      });\r\n    }\r\n\r\n    return { gps_data: mockGpsData };\r\n  };\r\n\r\n  // Send the batched GPS data to the backend\r\n  const sendGpsDataToBackend = async (gpsDataBatch) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.post(\r\n        'http://localhost:5000/api/record-telematics',\r\n        {\r\n          driver_id: driverId,\r\n          gps_data: gpsDataBatch,\r\n        },\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n\r\n      const gps = response.data.gps_data;\r\n      const performance = response.data.performance;\r\n\r\n      setGpsData(gps);\r\n      setRoute(gps.map((point) => [point.lat, point.lng]));\r\n      setPerformanceData({\r\n        speed: performance.speed,\r\n        acceleration: performance.acceleration,\r\n        jerk: performance.jerk,\r\n      });\r\n    } catch (err) {\r\n      setError('Error sending GPS data');\r\n    }\r\n  };\r\n\r\n  // Get real GPS data (mobile use case)\r\n  const getRealGpsData = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.watchPosition(\r\n        async (position) => {\r\n          const realGpsData = {\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude,\r\n            timestamp: Date.now(),\r\n            speed: position.coords.speed ? position.coords.speed * 3.6 : 0, // Convert to km/h\r\n          };\r\n          if (realGpsData.speed > 5) {\r\n            sendGpsDataToBackend([realGpsData]);\r\n          }\r\n        },\r\n        (err) => setError('Error getting real GPS data: ' + err.message),\r\n        { enableHighAccuracy: true }\r\n      );\r\n    } else {\r\n      setError('Geolocation is not supported by this browser.');\r\n    }\r\n  };\r\n\r\n  const chartData = {\r\n    labels: gpsData.map((_, index) => `T${index}`),\r\n    datasets: [\r\n      { label: 'Speed (m/s)', data: performanceData.speed, borderColor: 'rgba(75,192,192,1)' },\r\n      { label: 'Acceleration (m/s²)', data: performanceData.acceleration, borderColor: '#FF6384' },\r\n      { label: 'Jerk (m/s³)', data: performanceData.jerk, borderColor: '#36A2EB' },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Driver Dashboard</h2>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      <div className=\"dashboard-content\">\r\n        <div className=\"map-section\">\r\n          <MapContainer center={[51.505, -0.09]} zoom={13} className=\"map\">\r\n            <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n            <Polyline positions={route} color=\"blue\" />\r\n          </MapContainer>\r\n        </div>\r\n        <div className=\"graph-section\">\r\n          <Line data={chartData} />\r\n        </div>\r\n      </div>\r\n      <div className=\"icon-section\">\r\n        <div className=\"icon-item\">\r\n          <FaTachometerAlt /> Speed: {performanceData.speed.slice(-1)} m/s\r\n        </div>\r\n        <div className=\"icon-item\">\r\n          <FaBolt /> Acceleration: {performanceData.acceleration.slice(-1)} m/s²\r\n        </div>\r\n        <div className=\"icon-item\">\r\n          <FaCarCrash /> Jerk: {performanceData.jerk.slice(-1)} m/s³\r\n        </div>\r\n        <div className=\"icon-item\">\r\n          <FaMapMarkerAlt /> Total Route Points: {route.length}\r\n        </div>\r\n      </div>\r\n      <DailyScorePopup driverId={driverId} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}