{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anush\\\\OneDrive\\\\Desktop\\\\minor project\\\\DriveIQ\\\\DriveIQ\\\\DriveIQ-PWA\\\\src\\\\components\\\\Dashboard\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\n// src/components/Dashboard/Dashboard.jsx\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Polyline } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { Line } from 'react-chartjs-2';\nimport axios from 'axios';\nimport DailyScorePopup from '../DailyScorePopup/DailyScorePopup';\nimport { FaTachometerAlt, FaBolt, FaCarCrash, FaMapMarkerAlt } from 'react-icons/fa';\nimport './Dashboard.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [gpsData, setGpsData] = useState([]);\n  const [route, setRoute] = useState([]);\n  const [performanceData, setPerformanceData] = useState({\n    speed: [],\n    acceleration: [],\n    jerk: []\n  });\n  const [driverId, setDriverId] = useState(null);\n  const [error, setError] = useState('');\n  const [isMockMode, setIsMockMode] = useState(true); // Toggle between mock GPS and real GPS\n\n  useEffect(() => {\n    // Fetch driver data and get the driver_id\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://localhost:5000/api/user-data', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setDriverId(response.data.driver_id);\n      } catch (err) {\n        setError('Error fetching user data');\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (driverId) {\n      const interval = setInterval(() => {\n        if (isMockMode) {\n          sendMockGpsData();\n        } else {\n          getRealGpsData();\n        }\n      }, 5000); // Every 5 seconds\n\n      return () => clearInterval(interval); // Clean up interval\n    }\n  }, [driverId, isMockMode]);\n\n  // Send mock GPS data to the backend\n  const sendMockGpsData = async () => {\n    const mockGpsData = generateMockGpsData();\n    sendGpsDataToBackend(mockGpsData);\n  };\n\n  // Send real GPS data to the backend\n  const getRealGpsData = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async position => {\n        const realGpsData = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n          timestamp: Date.now() // Numeric timestamp in milliseconds\n        };\n        sendGpsDataToBackend(realGpsData);\n      });\n    } else {\n      setError('Geolocation is not supported on this device.');\n    }\n  };\n\n  // Send GPS data to the backend\n  const sendGpsDataToBackend = async gpsDataPoint => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post('http://localhost:5000/api/record-telematics', {\n        driver_id: driverId,\n        gps_data: [gpsDataPoint] // Send as array of one object\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // Process the response\n      const gps = response.data.gps_data;\n      const performance = response.data.performance;\n      setGpsData(gps);\n      setRoute(gps.map(point => [point.lat, point.lng]));\n      setPerformanceData({\n        speed: performance.speed,\n        acceleration: performance.acceleration,\n        jerk: performance.jerk\n      });\n    } catch (err) {\n      setError('Error sending GPS data');\n    }\n  };\n\n  // Generate mock GPS data for testing purposes\n  const generateMockGpsData = () => {\n    const mockRoute = [{\n      lat: 51.505,\n      lng: -0.09,\n      timestamp: Date.now()\n    }, {\n      lat: 51.506,\n      lng: -0.08,\n      timestamp: Date.now() + 5000\n    }, {\n      lat: 51.507,\n      lng: -0.07,\n      timestamp: Date.now() + 10000\n    }];\n    return mockRoute[Math.floor(Math.random() * mockRoute.length)];\n  };\n  const chartData = {\n    labels: gpsData.map((_, index) => `T${index}`),\n    datasets: [{\n      label: 'Speed (m/s)',\n      data: performanceData.speed,\n      borderColor: 'rgba(75,192,192,1)'\n    }, {\n      label: 'Acceleration (m/s²)',\n      data: performanceData.acceleration,\n      borderColor: '#FF6384'\n    }, {\n      label: 'Jerk (m/s³)',\n      data: performanceData.jerk,\n      borderColor: '#36A2EB'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Driver Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-section\",\n        children: /*#__PURE__*/_jsxDEV(MapContainer, {\n          center: [51.505, -0.09],\n          zoom: 13,\n          className: \"map\",\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n            positions: route,\n            color: \"blue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-section\",\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icon-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-item\",\n        children: [/*#__PURE__*/_jsxDEV(FaTachometerAlt, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), \" Speed: \", performanceData.speed.slice(-1), \" m/s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-item\",\n        children: [/*#__PURE__*/_jsxDEV(FaBolt, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), \" Acceleration: \", performanceData.acceleration.slice(-1), \" m/s\\xB2\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-item\",\n        children: [/*#__PURE__*/_jsxDEV(FaCarCrash, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), \" Jerk: \", performanceData.jerk.slice(-1), \" m/s\\xB3\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-item\",\n        children: [/*#__PURE__*/_jsxDEV(FaMapMarkerAlt, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), \" Total Route Points: \", route.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DailyScorePopup, {\n      driverId: driverId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"iW9cmboEwH2zi6aK9NMQDgAJF5U=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Polyline","Line","axios","DailyScorePopup","FaTachometerAlt","FaBolt","FaCarCrash","FaMapMarkerAlt","jsxDEV","_jsxDEV","Dashboard","_s","gpsData","setGpsData","route","setRoute","performanceData","setPerformanceData","speed","acceleration","jerk","driverId","setDriverId","error","setError","isMockMode","setIsMockMode","fetchData","token","localStorage","getItem","response","get","headers","Authorization","data","driver_id","err","interval","setInterval","sendMockGpsData","getRealGpsData","clearInterval","mockGpsData","generateMockGpsData","sendGpsDataToBackend","navigator","geolocation","getCurrentPosition","position","realGpsData","lat","coords","latitude","lng","longitude","timestamp","Date","now","gpsDataPoint","post","gps_data","gps","performance","map","point","mockRoute","Math","floor","random","length","chartData","labels","_","index","datasets","label","borderColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","url","positions","color","slice","_c","$RefreshReg$"],"sources":["C:/Users/anush/OneDrive/Desktop/minor project/DriveIQ/DriveIQ/DriveIQ-PWA/src/components/Dashboard/Dashboard.jsx"],"sourcesContent":["// src/components/Dashboard/Dashboard.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { MapContainer, TileLayer, Polyline } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { Line } from 'react-chartjs-2';\r\nimport axios from 'axios';\r\nimport DailyScorePopup from '../DailyScorePopup/DailyScorePopup';\r\nimport { FaTachometerAlt, FaBolt, FaCarCrash, FaMapMarkerAlt } from 'react-icons/fa';\r\nimport './Dashboard.scss';\r\n\r\nconst Dashboard = () => {\r\n  const [gpsData, setGpsData] = useState([]);\r\n  const [route, setRoute] = useState([]);\r\n  const [performanceData, setPerformanceData] = useState({ speed: [], acceleration: [], jerk: [] });\r\n  const [driverId, setDriverId] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const [isMockMode, setIsMockMode] = useState(true);  // Toggle between mock GPS and real GPS\r\n\r\n  useEffect(() => {\r\n    // Fetch driver data and get the driver_id\r\n    const fetchData = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.get('http://localhost:5000/api/user-data', {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        setDriverId(response.data.driver_id);\r\n      } catch (err) {\r\n        setError('Error fetching user data');\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (driverId) {\r\n      const interval = setInterval(() => {\r\n        if (isMockMode) {\r\n          sendMockGpsData();\r\n        } else {\r\n          getRealGpsData();\r\n        }\r\n      }, 5000); // Every 5 seconds\r\n\r\n      return () => clearInterval(interval); // Clean up interval\r\n    }\r\n  }, [driverId, isMockMode]);\r\n\r\n  // Send mock GPS data to the backend\r\n  const sendMockGpsData = async () => {\r\n    const mockGpsData = generateMockGpsData();\r\n    sendGpsDataToBackend(mockGpsData);\r\n  };\r\n\r\n  // Send real GPS data to the backend\r\n  const getRealGpsData = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(async (position) => {\r\n        const realGpsData = {\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude,\r\n          timestamp: Date.now()  // Numeric timestamp in milliseconds\r\n        };\r\n        sendGpsDataToBackend(realGpsData);\r\n      });\r\n    } else {\r\n      setError('Geolocation is not supported on this device.');\r\n    }\r\n  };\r\n\r\n  // Send GPS data to the backend\r\n  const sendGpsDataToBackend = async (gpsDataPoint) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.post('http://localhost:5000/api/record-telematics', {\r\n        driver_id: driverId,\r\n        gps_data: [gpsDataPoint],  // Send as array of one object\r\n      }, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n\r\n      // Process the response\r\n      const gps = response.data.gps_data;\r\n      const performance = response.data.performance;\r\n      setGpsData(gps);\r\n      setRoute(gps.map((point) => [point.lat, point.lng]));\r\n      setPerformanceData({\r\n        speed: performance.speed,\r\n        acceleration: performance.acceleration,\r\n        jerk: performance.jerk,\r\n      });\r\n    } catch (err) {\r\n      setError('Error sending GPS data');\r\n    }\r\n  };\r\n\r\n  // Generate mock GPS data for testing purposes\r\n  const generateMockGpsData = () => {\r\n    const mockRoute = [\r\n      { lat: 51.505, lng: -0.09, timestamp: Date.now() },\r\n      { lat: 51.506, lng: -0.08, timestamp: Date.now() + 5000 },\r\n      { lat: 51.507, lng: -0.07, timestamp: Date.now() + 10000 },\r\n    ];\r\n    return mockRoute[Math.floor(Math.random() * mockRoute.length)];\r\n  };\r\n\r\n  const chartData = {\r\n    labels: gpsData.map((_, index) => `T${index}`),\r\n    datasets: [\r\n      { label: 'Speed (m/s)', data: performanceData.speed, borderColor: 'rgba(75,192,192,1)' },\r\n      { label: 'Acceleration (m/s²)', data: performanceData.acceleration, borderColor: '#FF6384' },\r\n      { label: 'Jerk (m/s³)', data: performanceData.jerk, borderColor: '#36A2EB' },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Driver Dashboard</h2>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      <div className=\"dashboard-content\">\r\n        <div className=\"map-section\">\r\n          <MapContainer center={[51.505, -0.09]} zoom={13} className=\"map\">\r\n            <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n            <Polyline positions={route} color=\"blue\" />\r\n          </MapContainer>\r\n        </div>\r\n        <div className=\"graph-section\">\r\n          <Line data={chartData} />\r\n        </div>\r\n      </div>\r\n      <div className=\"icon-section\">\r\n        <div className=\"icon-item\">\r\n          <FaTachometerAlt /> Speed: {performanceData.speed.slice(-1)} m/s\r\n        </div>\r\n        <div className=\"icon-item\">\r\n          <FaBolt /> Acceleration: {performanceData.acceleration.slice(-1)} m/s²\r\n        </div>\r\n        <div className=\"icon-item\">\r\n          <FaCarCrash /> Jerk: {performanceData.jerk.slice(-1)} m/s³\r\n        </div>\r\n        <div className=\"icon-item\">\r\n          <FaMapMarkerAlt /> Total Route Points: {route.length}\r\n        </div>\r\n      </div>\r\n      <DailyScorePopup driverId={driverId} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,eAAe;AACjE,OAAO,0BAA0B;AACjC,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,eAAe,MAAM,oCAAoC;AAChE,SAASC,eAAe,EAAEC,MAAM,EAAEC,UAAU,EAAEC,cAAc,QAAQ,gBAAgB;AACpF,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACoB,eAAe,EAAEC,kBAAkB,CAAC,GAAGrB,QAAQ,CAAC;IAAEsB,KAAK,EAAE,EAAE;IAAEC,YAAY,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;EACjG,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAAC2B,KAAK,EAAEC,QAAQ,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC6B,UAAU,EAAEC,aAAa,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;;EAErDC,SAAS,CAAC,MAAM;IACd;IACA,MAAM8B,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMC,QAAQ,GAAG,MAAM7B,KAAK,CAAC8B,GAAG,CAAC,qCAAqC,EAAE;UACtEC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUN,KAAK;UAAG;QAC9C,CAAC,CAAC;QACFN,WAAW,CAACS,QAAQ,CAACI,IAAI,CAACC,SAAS,CAAC;MACtC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZb,QAAQ,CAAC,0BAA0B,CAAC;MACtC;IACF,CAAC;IACDG,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN9B,SAAS,CAAC,MAAM;IACd,IAAIwB,QAAQ,EAAE;MACZ,MAAMiB,QAAQ,GAAGC,WAAW,CAAC,MAAM;QACjC,IAAId,UAAU,EAAE;UACde,eAAe,CAAC,CAAC;QACnB,CAAC,MAAM;UACLC,cAAc,CAAC,CAAC;QAClB;MACF,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;MAEV,OAAO,MAAMC,aAAa,CAACJ,QAAQ,CAAC,CAAC,CAAC;IACxC;EACF,CAAC,EAAE,CAACjB,QAAQ,EAAEI,UAAU,CAAC,CAAC;;EAE1B;EACA,MAAMe,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,MAAMG,WAAW,GAAGC,mBAAmB,CAAC,CAAC;IACzCC,oBAAoB,CAACF,WAAW,CAAC;EACnC,CAAC;;EAED;EACA,MAAMF,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIK,SAAS,CAACC,WAAW,EAAE;MACzBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAC,MAAOC,QAAQ,IAAK;QAC3D,MAAMC,WAAW,GAAG;UAClBC,GAAG,EAAEF,QAAQ,CAACG,MAAM,CAACC,QAAQ;UAC7BC,GAAG,EAAEL,QAAQ,CAACG,MAAM,CAACG,SAAS;UAC9BC,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAE;QACzB,CAAC;QACDb,oBAAoB,CAACK,WAAW,CAAC;MACnC,CAAC,CAAC;IACJ,CAAC,MAAM;MACL1B,QAAQ,CAAC,8CAA8C,CAAC;IAC1D;EACF,CAAC;;EAED;EACA,MAAMqB,oBAAoB,GAAG,MAAOc,YAAY,IAAK;IACnD,IAAI;MACF,MAAM/B,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMC,QAAQ,GAAG,MAAM7B,KAAK,CAAC0D,IAAI,CAAC,6CAA6C,EAAE;QAC/ExB,SAAS,EAAEf,QAAQ;QACnBwC,QAAQ,EAAE,CAACF,YAAY,CAAC,CAAG;MAC7B,CAAC,EAAE;QACD1B,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUN,KAAK;QAAG;MAC9C,CAAC,CAAC;;MAEF;MACA,MAAMkC,GAAG,GAAG/B,QAAQ,CAACI,IAAI,CAAC0B,QAAQ;MAClC,MAAME,WAAW,GAAGhC,QAAQ,CAACI,IAAI,CAAC4B,WAAW;MAC7ClD,UAAU,CAACiD,GAAG,CAAC;MACf/C,QAAQ,CAAC+C,GAAG,CAACE,GAAG,CAAEC,KAAK,IAAK,CAACA,KAAK,CAACd,GAAG,EAAEc,KAAK,CAACX,GAAG,CAAC,CAAC,CAAC;MACpDrC,kBAAkB,CAAC;QACjBC,KAAK,EAAE6C,WAAW,CAAC7C,KAAK;QACxBC,YAAY,EAAE4C,WAAW,CAAC5C,YAAY;QACtCC,IAAI,EAAE2C,WAAW,CAAC3C;MACpB,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOiB,GAAG,EAAE;MACZb,QAAQ,CAAC,wBAAwB,CAAC;IACpC;EACF,CAAC;;EAED;EACA,MAAMoB,mBAAmB,GAAGA,CAAA,KAAM;IAChC,MAAMsB,SAAS,GAAG,CAChB;MAAEf,GAAG,EAAE,MAAM;MAAEG,GAAG,EAAE,CAAC,IAAI;MAAEE,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC;IAAE,CAAC,EAClD;MAAEP,GAAG,EAAE,MAAM;MAAEG,GAAG,EAAE,CAAC,IAAI;MAAEE,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG;IAAK,CAAC,EACzD;MAAEP,GAAG,EAAE,MAAM;MAAEG,GAAG,EAAE,CAAC,IAAI;MAAEE,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG;IAAM,CAAC,CAC3D;IACD,OAAOQ,SAAS,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGH,SAAS,CAACI,MAAM,CAAC,CAAC;EAChE,CAAC;EAED,MAAMC,SAAS,GAAG;IAChBC,MAAM,EAAE5D,OAAO,CAACoD,GAAG,CAAC,CAACS,CAAC,EAAEC,KAAK,KAAK,IAAIA,KAAK,EAAE,CAAC;IAC9CC,QAAQ,EAAE,CACR;MAAEC,KAAK,EAAE,aAAa;MAAEzC,IAAI,EAAEnB,eAAe,CAACE,KAAK;MAAE2D,WAAW,EAAE;IAAqB,CAAC,EACxF;MAAED,KAAK,EAAE,qBAAqB;MAAEzC,IAAI,EAAEnB,eAAe,CAACG,YAAY;MAAE0D,WAAW,EAAE;IAAU,CAAC,EAC5F;MAAED,KAAK,EAAE,aAAa;MAAEzC,IAAI,EAAEnB,eAAe,CAACI,IAAI;MAAEyD,WAAW,EAAE;IAAU,CAAC;EAEhF,CAAC;EAED,oBACEpE,OAAA;IAAKqE,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCtE,OAAA;MAAAsE,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxB5D,KAAK,iBAAId,OAAA;MAAGqE,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAExD;IAAK;MAAAyD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClD1E,OAAA;MAAKqE,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChCtE,OAAA;QAAKqE,SAAS,EAAC,aAAa;QAAAC,QAAA,eAC1BtE,OAAA,CAACX,YAAY;UAACsF,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,IAAI,CAAE;UAACC,IAAI,EAAE,EAAG;UAACP,SAAS,EAAC,KAAK;UAAAC,QAAA,gBAC9DtE,OAAA,CAACV,SAAS;YAACuF,GAAG,EAAC;UAAoD;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACtE1E,OAAA,CAACT,QAAQ;YAACuF,SAAS,EAAEzE,KAAM;YAAC0E,KAAK,EAAC;UAAM;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eACN1E,OAAA;QAAKqE,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC5BtE,OAAA,CAACR,IAAI;UAACkC,IAAI,EAAEoC;QAAU;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACN1E,OAAA;MAAKqE,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BtE,OAAA;QAAKqE,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxBtE,OAAA,CAACL,eAAe;UAAA4E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,YAAQ,EAACnE,eAAe,CAACE,KAAK,CAACuE,KAAK,CAAC,CAAC,CAAC,CAAC,EAAC,MAC9D;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACN1E,OAAA;QAAKqE,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxBtE,OAAA,CAACJ,MAAM;UAAA2E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,mBAAe,EAACnE,eAAe,CAACG,YAAY,CAACsE,KAAK,CAAC,CAAC,CAAC,CAAC,EAAC,UACnE;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACN1E,OAAA;QAAKqE,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxBtE,OAAA,CAACH,UAAU;UAAA0E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,WAAO,EAACnE,eAAe,CAACI,IAAI,CAACqE,KAAK,CAAC,CAAC,CAAC,CAAC,EAAC,UACvD;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACN1E,OAAA;QAAKqE,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxBtE,OAAA,CAACF,cAAc;UAAAyE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,yBAAqB,EAACrE,KAAK,CAACwD,MAAM;MAAA;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACN1E,OAAA,CAACN,eAAe;MAACkB,QAAQ,EAAEA;IAAS;MAAA2D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEV,CAAC;AAACxE,EAAA,CAzIID,SAAS;AAAAgF,EAAA,GAAThF,SAAS;AA2If,eAAeA,SAAS;AAAC,IAAAgF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}