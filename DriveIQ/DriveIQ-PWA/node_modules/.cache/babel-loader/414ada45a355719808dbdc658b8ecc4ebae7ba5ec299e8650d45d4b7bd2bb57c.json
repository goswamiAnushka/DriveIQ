{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anush\\\\OneDrive\\\\Desktop\\\\minor project\\\\DriveIQ\\\\DriveIQ\\\\DriveIQ-PWA\\\\src\\\\components\\\\Dashboard\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Polyline } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { Line } from 'react-chartjs-2';\nimport axios from 'axios';\nimport DailyScorePopup from '../DailyScorePopup/DailyScorePopup';\nimport { FaTachometerAlt, FaBolt, FaCarCrash, FaMapMarkerAlt } from 'react-icons/fa';\nimport './Dashboard.scss';\n\n// Importing necessary Chart.js components\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Register the Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst Dashboard = () => {\n  _s();\n  var _performanceData$spee, _performanceData$acce, _performanceData$jerk;\n  const [gpsData, setGpsData] = useState([]);\n  const [route, setRoute] = useState([]);\n  const [performanceData, setPerformanceData] = useState({\n    speed: [],\n    acceleration: [],\n    jerk: []\n  });\n  const [driverId, setDriverId] = useState(null);\n  const [error, setError] = useState('');\n  const [isMockMode, setIsMockMode] = useState(true); // Mock GPS for testing\n\n  // Fetch driver data (driver_id) from the backend using JWT token\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://localhost:5000/api/user-data', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setDriverId(response.data.driver_id);\n      } catch (err) {\n        setError('Error fetching user data');\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Use effect to handle real-time GPS tracking (mock or real) every 5 seconds\n  useEffect(() => {\n    if (driverId) {\n      const interval = setInterval(() => {\n        if (isMockMode) {\n          sendMockGpsData(); // Mock GPS data for testing\n        } else {\n          getRealGpsData(); // Real GPS for mobile devices\n        }\n      }, 5000); // Every 5 seconds\n\n      return () => clearInterval(interval); // Cleanup interval\n    }\n  }, [driverId, isMockMode]);\n\n  // Generate realistic mock GPS data based on your Postman example\n  const generateMockGpsData = () => {\n    const startLat = 40.712776; // New York City coordinates\n    const startLon = -74.005974;\n    const timeStepIncrement = 60; // Increment time step by 60 seconds\n    const distanceIncrement = 0.001; // Simulating movement ~100 meters per step\n\n    // Generate GPS data points simulating movement over 12 minutes\n    const mockData = [];\n    for (let i = 0; i < 12; i++) {\n      mockData.push({\n        Latitude: startLat + i * distanceIncrement,\n        Longitude: startLon + i * distanceIncrement,\n        Time_Step: 1 + i * timeStepIncrement\n      });\n    }\n    return mockData;\n  };\n\n  // Send mock GPS data to the backend\n  const sendMockGpsData = async () => {\n    const mockGpsData = generateMockGpsData();\n    sendGpsDataToBackend(mockGpsData);\n  };\n\n  // Get real GPS data and send to backend when speed > 5 km/h\n  const getRealGpsData = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.watchPosition(async position => {\n        const realGpsData = {\n          Latitude: position.coords.latitude,\n          Longitude: position.coords.longitude,\n          Time_Step: Date.now(),\n          // Numeric timestamp in milliseconds\n          speed: position.coords.speed ? position.coords.speed * 3.6 : 0 // Convert to km/h\n        };\n        if (realGpsData.speed > 5) {\n          sendGpsDataToBackend([realGpsData]);\n        }\n      }, err => setError('Error getting real GPS data: ' + err.message), {\n        enableHighAccuracy: true\n      });\n    } else {\n      setError('Geolocation is not supported by this browser.');\n    }\n  };\n\n  // Send the batched GPS data to the backend\n  const sendGpsDataToBackend = async gpsDataBatch => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post('http://localhost:5000/api/record-telematics', {\n        driver_id: driverId,\n        gps_data: gpsDataBatch\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // Ensure gps and performance exist in response\n      const gps = response.data.gps_data || [];\n      const performance = response.data.performance || {\n        speed: [],\n        acceleration: [],\n        jerk: []\n      };\n      setGpsData(gps);\n      setRoute(gps.map(point => [point.Latitude, point.Longitude]));\n      setPerformanceData({\n        speed: performance.speed,\n        acceleration: performance.acceleration,\n        jerk: performance.jerk\n      });\n    } catch (err) {\n      setError('Error sending GPS data');\n    }\n  };\n\n  // Schedule process-daily-data call at 12 AM every day\n  useEffect(() => {\n    const midnight = new Date();\n    midnight.setHours(24, 0, 0, 0); // Set time to 12 AM midnight\n\n    const delay = midnight.getTime() - Date.now(); // Time until next midnight\n    const timer = setTimeout(() => {\n      processDailyData();\n    }, delay);\n    return () => clearTimeout(timer); // Clean up timer\n  }, [driverId]);\n\n  // Process daily data at midnight by calling the backend\n  const processDailyData = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post('http://localhost:5000/api/process-daily-data', {\n        driver_id: driverId\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log('Daily data processed', response.data);\n    } catch (err) {\n      console.error('Error processing daily data', err);\n    }\n  };\n\n  // Safely handle gpsData and performanceData before using map()\n  const chartData = {\n    labels: (gpsData === null || gpsData === void 0 ? void 0 : gpsData.map((_, index) => `T${index}`)) || [],\n    datasets: [{\n      label: 'Speed (m/s)',\n      data: (performanceData === null || performanceData === void 0 ? void 0 : performanceData.speed) || [],\n      borderColor: 'rgba(75,192,192,1)'\n    }, {\n      label: 'Acceleration (m/s²)',\n      data: (performanceData === null || performanceData === void 0 ? void 0 : performanceData.acceleration) || [],\n      borderColor: '#FF6384'\n    }, {\n      label: 'Jerk (m/s³)',\n      data: (performanceData === null || performanceData === void 0 ? void 0 : performanceData.jerk) || [],\n      borderColor: '#36A2EB'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Driver Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-section\",\n        children: /*#__PURE__*/_jsxDEV(MapContainer, {\n          center: [40.712776, -74.005974],\n          zoom: 13,\n          className: \"map\",\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n            positions: route || [],\n            color: \"blue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-section\",\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icon-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-item\",\n        children: [/*#__PURE__*/_jsxDEV(FaTachometerAlt, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), \" Speed: \", performanceData === null || performanceData === void 0 ? void 0 : (_performanceData$spee = performanceData.speed) === null || _performanceData$spee === void 0 ? void 0 : _performanceData$spee.slice(-1), \" m/s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-item\",\n        children: [/*#__PURE__*/_jsxDEV(FaBolt, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), \" Acceleration: \", performanceData === null || performanceData === void 0 ? void 0 : (_performanceData$acce = performanceData.acceleration) === null || _performanceData$acce === void 0 ? void 0 : _performanceData$acce.slice(-1), \" m/s\\xB2\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-item\",\n        children: [/*#__PURE__*/_jsxDEV(FaCarCrash, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), \" Jerk: \", performanceData === null || performanceData === void 0 ? void 0 : (_performanceData$jerk = performanceData.jerk) === null || _performanceData$jerk === void 0 ? void 0 : _performanceData$jerk.slice(-1), \" m/s\\xB3\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-item\",\n        children: [/*#__PURE__*/_jsxDEV(FaMapMarkerAlt, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), \" Total Route Points: \", (route === null || route === void 0 ? void 0 : route.length) || 0]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DailyScorePopup, {\n      driverId: driverId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), \"  \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"CXWA1VbK16JwkzqkEC+jsZZfzqk=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Polyline","Line","axios","DailyScorePopup","FaTachometerAlt","FaBolt","FaCarCrash","FaMapMarkerAlt","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Dashboard","_s","_performanceData$spee","_performanceData$acce","_performanceData$jerk","gpsData","setGpsData","route","setRoute","performanceData","setPerformanceData","speed","acceleration","jerk","driverId","setDriverId","error","setError","isMockMode","setIsMockMode","fetchData","token","localStorage","getItem","response","get","headers","Authorization","data","driver_id","err","interval","setInterval","sendMockGpsData","getRealGpsData","clearInterval","generateMockGpsData","startLat","startLon","timeStepIncrement","distanceIncrement","mockData","i","push","Latitude","Longitude","Time_Step","mockGpsData","sendGpsDataToBackend","navigator","geolocation","watchPosition","position","realGpsData","coords","latitude","longitude","Date","now","message","enableHighAccuracy","gpsDataBatch","post","gps_data","gps","performance","map","point","midnight","setHours","delay","getTime","timer","setTimeout","processDailyData","clearTimeout","console","log","chartData","labels","_","index","datasets","label","borderColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","url","positions","color","slice","length","_c","$RefreshReg$"],"sources":["C:/Users/anush/OneDrive/Desktop/minor project/DriveIQ/DriveIQ/DriveIQ-PWA/src/components/Dashboard/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { MapContainer, TileLayer, Polyline } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { Line } from 'react-chartjs-2';\r\nimport axios from 'axios';\r\nimport DailyScorePopup from '../DailyScorePopup/DailyScorePopup';\r\nimport { FaTachometerAlt, FaBolt, FaCarCrash, FaMapMarkerAlt } from 'react-icons/fa';\r\nimport './Dashboard.scss';\r\n\r\n// Importing necessary Chart.js components\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\n// Register the Chart.js components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst Dashboard = () => {\r\n  const [gpsData, setGpsData] = useState([]);\r\n  const [route, setRoute] = useState([]);\r\n  const [performanceData, setPerformanceData] = useState({\r\n    speed: [],\r\n    acceleration: [],\r\n    jerk: [],\r\n  });\r\n  const [driverId, setDriverId] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const [isMockMode, setIsMockMode] = useState(true);  // Mock GPS for testing\r\n\r\n  // Fetch driver data (driver_id) from the backend using JWT token\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.get('http://localhost:5000/api/user-data', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        setDriverId(response.data.driver_id);\r\n      } catch (err) {\r\n        setError('Error fetching user data');\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Use effect to handle real-time GPS tracking (mock or real) every 5 seconds\r\n  useEffect(() => {\r\n    if (driverId) {\r\n      const interval = setInterval(() => {\r\n        if (isMockMode) {\r\n          sendMockGpsData();  // Mock GPS data for testing\r\n        } else {\r\n          getRealGpsData();  // Real GPS for mobile devices\r\n        }\r\n      }, 5000); // Every 5 seconds\r\n\r\n      return () => clearInterval(interval);  // Cleanup interval\r\n    }\r\n  }, [driverId, isMockMode]);\r\n\r\n  // Generate realistic mock GPS data based on your Postman example\r\n  const generateMockGpsData = () => {\r\n    const startLat = 40.712776; // New York City coordinates\r\n    const startLon = -74.005974;\r\n    const timeStepIncrement = 60; // Increment time step by 60 seconds\r\n    const distanceIncrement = 0.001; // Simulating movement ~100 meters per step\r\n\r\n    // Generate GPS data points simulating movement over 12 minutes\r\n    const mockData = [];\r\n    for (let i = 0; i < 12; i++) {\r\n      mockData.push({\r\n        Latitude: startLat + i * distanceIncrement,\r\n        Longitude: startLon + i * distanceIncrement,\r\n        Time_Step: 1 + i * timeStepIncrement,\r\n      });\r\n    }\r\n\r\n    return mockData;\r\n  };\r\n\r\n  // Send mock GPS data to the backend\r\n  const sendMockGpsData = async () => {\r\n    const mockGpsData = generateMockGpsData();\r\n    sendGpsDataToBackend(mockGpsData);\r\n  };\r\n\r\n  // Get real GPS data and send to backend when speed > 5 km/h\r\n  const getRealGpsData = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.watchPosition(\r\n        async (position) => {\r\n          const realGpsData = {\r\n            Latitude: position.coords.latitude,\r\n            Longitude: position.coords.longitude,\r\n            Time_Step: Date.now(),  // Numeric timestamp in milliseconds\r\n            speed: position.coords.speed ? position.coords.speed * 3.6 : 0,  // Convert to km/h\r\n          };\r\n          if (realGpsData.speed > 5) {\r\n            sendGpsDataToBackend([realGpsData]);\r\n          }\r\n        },\r\n        (err) => setError('Error getting real GPS data: ' + err.message),\r\n        { enableHighAccuracy: true }\r\n      );\r\n    } else {\r\n      setError('Geolocation is not supported by this browser.');\r\n    }\r\n  };\r\n\r\n  // Send the batched GPS data to the backend\r\n  const sendGpsDataToBackend = async (gpsDataBatch) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.post(\r\n        'http://localhost:5000/api/record-telematics',\r\n        {\r\n          driver_id: driverId,\r\n          gps_data: gpsDataBatch,\r\n        },\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n\r\n      // Ensure gps and performance exist in response\r\n      const gps = response.data.gps_data || [];\r\n      const performance = response.data.performance || { speed: [], acceleration: [], jerk: [] };\r\n\r\n      setGpsData(gps);\r\n      setRoute(gps.map((point) => [point.Latitude, point.Longitude]));\r\n      setPerformanceData({\r\n        speed: performance.speed,\r\n        acceleration: performance.acceleration,\r\n        jerk: performance.jerk,\r\n      });\r\n    } catch (err) {\r\n      setError('Error sending GPS data');\r\n    }\r\n  };\r\n\r\n  // Schedule process-daily-data call at 12 AM every day\r\n  useEffect(() => {\r\n    const midnight = new Date();\r\n    midnight.setHours(24, 0, 0, 0);  // Set time to 12 AM midnight\r\n\r\n    const delay = midnight.getTime() - Date.now();  // Time until next midnight\r\n    const timer = setTimeout(() => {\r\n      processDailyData();\r\n    }, delay);\r\n\r\n    return () => clearTimeout(timer);  // Clean up timer\r\n  }, [driverId]);\r\n\r\n  // Process daily data at midnight by calling the backend\r\n  const processDailyData = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.post(\r\n        'http://localhost:5000/api/process-daily-data',\r\n        {\r\n          driver_id: driverId,\r\n        },\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      console.log('Daily data processed', response.data);\r\n    } catch (err) {\r\n      console.error('Error processing daily data', err);\r\n    }\r\n  };\r\n\r\n  // Safely handle gpsData and performanceData before using map()\r\n  const chartData = {\r\n    labels: gpsData?.map((_, index) => `T${index}`) || [],\r\n    datasets: [\r\n      { label: 'Speed (m/s)', data: performanceData?.speed || [], borderColor: 'rgba(75,192,192,1)' },\r\n      { label: 'Acceleration (m/s²)', data: performanceData?.acceleration || [], borderColor: '#FF6384' },\r\n      { label: 'Jerk (m/s³)', data: performanceData?.jerk || [], borderColor: '#36A2EB' },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Driver Dashboard</h2>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      <div className=\"dashboard-content\">\r\n        <div className=\"map-section\">\r\n          <MapContainer center={[40.712776, -74.005974]} zoom={13} className=\"map\">\r\n            <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n            <Polyline positions={route || []} color=\"blue\" />\r\n          </MapContainer>\r\n        </div>\r\n        <div className=\"graph-section\">\r\n          <Line data={chartData} />\r\n        </div>\r\n      </div>\r\n      <div className=\"icon-section\">\r\n        <div className=\"icon-item\">\r\n          <FaTachometerAlt /> Speed: {performanceData?.speed?.slice(-1)} m/s\r\n        </div>\r\n        <div className=\"icon-item\">\r\n          <FaBolt /> Acceleration: {performanceData?.acceleration?.slice(-1)} m/s²\r\n        </div>\r\n        <div className=\"icon-item\">\r\n          <FaCarCrash /> Jerk: {performanceData?.jerk?.slice(-1)} m/s³\r\n        </div>\r\n        <div className=\"icon-item\">\r\n          <FaMapMarkerAlt /> Total Route Points: {route?.length || 0}\r\n        </div>\r\n      </div>\r\n      <DailyScorePopup driverId={driverId} />  {/* Display the Daily Score Popup */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}