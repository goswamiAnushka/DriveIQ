{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anush\\\\OneDrive\\\\Desktop\\\\minor project\\\\DriveIQ\\\\DriveIQ\\\\DriveIQ-PWA\\\\src\\\\components\\\\Dashboard\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet'; // Import Marker and Popup\nimport 'leaflet/dist/leaflet.css'; // Ensure this is here\nimport L from 'leaflet'; // Import Leaflet to customize marker icons\nimport api from '../../utils/api';\nimport { smartGpsTracking, generateSimulatedRoute } from '../../utils/geolocation';\nimport BatchProcessing from '../BatchProcessing/BatchProcessing';\nimport './Dashboard.scss';\n\n// Register Chart.js components\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\n// Define custom marker icon\nconst customIcon = new L.Icon({\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  iconSize: [25, 41],\n  // Size of the marker icon\n  iconAnchor: [12, 41],\n  // Position of the icon anchor relative to its size\n  popupAnchor: [1, -34] // Position of the popup relative to the icon\n});\nconst Dashboard = () => {\n  _s();\n  const [gpsData, setGpsData] = useState([]);\n  const [speedData, setSpeedData] = useState([]);\n  const [accelerationData, setAccelerationData] = useState([]);\n  const [jerkData, setJerkData] = useState([]);\n  const [brakingData, setBrakingData] = useState([]);\n  const [route, setRoute] = useState([]); // For route lines\n  const [markers, setMarkers] = useState([]); // For markers/pins on the map\n  const [isTracking, setIsTracking] = useState(false);\n  const [error, setError] = useState(null);\n\n  // States for daily data\n  const [dailyData, setDailyData] = useState(null);\n  const [isLoadingDailyData, setIsLoadingDailyData] = useState(false);\n  const [dailyError, setDailyError] = useState(null);\n\n  // Toggle GPS tracking\n  const toggleTracking = () => {\n    if (isTracking) {\n      setIsTracking(false);\n    } else {\n      setIsTracking(true);\n      startTracking();\n    }\n  };\n\n  // Start simulated GPS tracking\n  const startTracking = () => {\n    const simulatedBatches = generateSimulatedRoute(1, 5);\n    simulatedBatches.forEach((batch, index) => {\n      setTimeout(() => processBatch(batch), index * 5000);\n    });\n  };\n\n  // Process each GPS batch\n  const processBatch = async batch => {\n    const isMoving = smartGpsTracking(batch.gps_data, gpsData);\n    if (isMoving) {\n      try {\n        const driver_id = localStorage.getItem('driver_id');\n        const response = await api.post('/record-telematics', {\n          driver_id,\n          gps_data: batch.gps_data\n        });\n        const features = response.data.features;\n        if (features) {\n          var _features$SpeedMS, _features$Acceleratio, _features$JerkMS, _features$Braking_Int;\n          const speed = (_features$SpeedMS = features['Speed(m/s)']) !== null && _features$SpeedMS !== void 0 ? _features$SpeedMS : 0;\n          const acceleration = (_features$Acceleratio = features['Acceleration(m/s^2)']) !== null && _features$Acceleratio !== void 0 ? _features$Acceleratio : 0;\n          const jerk = (_features$JerkMS = features['Jerk(m/s^3)']) !== null && _features$JerkMS !== void 0 ? _features$JerkMS : 0;\n          const brakingIntensity = (_features$Braking_Int = features['Braking_Intensity']) !== null && _features$Braking_Int !== void 0 ? _features$Braking_Int : 0;\n          setSpeedData(prevData => [...prevData, speed]);\n          setAccelerationData(prevData => [...prevData, acceleration]);\n          setJerkData(prevData => [...prevData, jerk]);\n          setBrakingData(prevData => [...prevData, brakingIntensity]);\n          setGpsData(prevData => [...prevData, ...batch.gps_data]);\n          const lastPoint = batch.gps_data[batch.gps_data.length - 1];\n          setMarkers(prevMarkers => [...prevMarkers, {\n            lat: lastPoint.Latitude,\n            lng: lastPoint.Longitude\n          }]);\n          setRoute(prevRoute => [...prevRoute, ...batch.gps_data.map(point => [point.Latitude, point.Longitude])]);\n        }\n      } catch (error) {\n        console.error('Error recording telematics data:', error);\n        setError('Error processing GPS data. Please try again.');\n      }\n    }\n  };\n  const processDailyData = async () => {\n    const driver_id = localStorage.getItem('driver_id');\n    setIsLoadingDailyData(true); // Start loading state\n\n    try {\n      const response = await api.post('/process-daily-data', {\n        driver_id\n      });\n      console.log('Daily Data API Response:', response.data);\n\n      // Check if the response contains 'aggregated_data'\n      if (response.data && response.data.aggregated_data) {\n        // Even if some fields in 'aggregated_data' contain NaN, we consider it valid.\n        setDailyData(response.data); // Save the daily data into state\n        setDailyError(null); // Clear any previous errors\n      } else {\n        // If the structure of the response is invalid or missing 'aggregated_data'\n        setDailyError('No aggregated data found in the response');\n        setDailyData(null); // Reset the data if invalid\n      }\n    } catch (error) {\n      console.error('Error processing daily data:', error);\n      setDailyError('Error processing daily data');\n      setDailyData(null); // Reset the data if error\n    } finally {\n      setIsLoadingDailyData(false); // Stop loading state\n    }\n  };\n\n  // Automatically fetch daily data at 11:55 PM\n  useEffect(() => {\n    const checkTime = () => {\n      const now = new Date();\n      if (now.getHours() === 23 && now.getMinutes() === 55) {\n        processDailyData();\n      }\n    };\n    const interval = setInterval(checkTime, 60000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Render daily data in a clean format\n  const renderDailyData = () => {\n    if (dailyData) {\n      const {\n        aggregated_data,\n        driving_score,\n        driving_category,\n        total_distance_covered_km,\n        total_trips\n      } = dailyData;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"daily-data-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Daily Driving Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Driving Score:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 12\n          }, this), \" \", driving_score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Driving Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 12\n          }, this), \" \", driving_category]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.entries(aggregated_data).map(([key, value], index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [key, \": \", isNaN(value) ? 0 : value, \" \"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Total Distance Covered (km):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 12\n          }, this), \" \", total_distance_covered_km]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Total Trips:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 12\n          }, this), \" \", total_trips]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No daily data available yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 10\n    }, this);\n  };\n  const renderChart = (label, data, borderColor) => {\n    const chartLabels = data.map((_, index) => `Batch ${index + 1}`);\n    return /*#__PURE__*/_jsxDEV(Line, {\n      data: {\n        labels: chartLabels,\n        datasets: [{\n          label: label,\n          data: data,\n          borderColor: borderColor,\n          fill: false\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Driver Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tracking-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleTracking,\n        children: isTracking ? 'Stop Tracking' : 'Start Tracking'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: processDailyData,\n        children: \"Process Daily Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daily-data-section\",\n      children: isLoadingDailyData ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading daily data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 31\n      }, this) : dailyError ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: dailyError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 75\n      }, this) : renderDailyData()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Route Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [26.6337, 92.7926],\n        zoom: 13,\n        scrollWheelZoom: false,\n        className: \"map-container\",\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 OpenStreetMap contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n          positions: route,\n          color: \"blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), markers.map((marker, idx) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: [marker.lat, marker.lng],\n          icon: customIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [\"Latitude: \", marker.lat, \", Longitude: \", marker.lng]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Driving Feature Fluctuations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [renderChart('Speed (m/s)', speedData, 'rgba(75, 192, 192, 1)'), renderChart('Acceleration (m/s²)', accelerationData, 'rgba(255, 99, 132, 1)'), renderChart('Jerk (m/s³)', jerkData, 'rgba(54, 162, 235, 1)'), renderChart('Braking Intensity', brakingData, 'rgba(153, 102, 255, 1)')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BatchProcessing, {\n      gpsData: gpsData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"/6tcTAEwqEz3FCfbvruaHcBDl0A=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Line","MapContainer","TileLayer","Marker","Popup","Polyline","L","api","smartGpsTracking","generateSimulatedRoute","BatchProcessing","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","customIcon","Icon","iconUrl","require","iconSize","iconAnchor","popupAnchor","Dashboard","_s","gpsData","setGpsData","speedData","setSpeedData","accelerationData","setAccelerationData","jerkData","setJerkData","brakingData","setBrakingData","route","setRoute","markers","setMarkers","isTracking","setIsTracking","error","setError","dailyData","setDailyData","isLoadingDailyData","setIsLoadingDailyData","dailyError","setDailyError","toggleTracking","startTracking","simulatedBatches","forEach","batch","index","setTimeout","processBatch","isMoving","gps_data","driver_id","localStorage","getItem","response","post","features","data","_features$SpeedMS","_features$Acceleratio","_features$JerkMS","_features$Braking_Int","speed","acceleration","jerk","brakingIntensity","prevData","lastPoint","length","prevMarkers","lat","Latitude","lng","Longitude","prevRoute","map","point","console","processDailyData","log","aggregated_data","checkTime","now","Date","getHours","getMinutes","interval","setInterval","clearInterval","renderDailyData","driving_score","driving_category","total_distance_covered_km","total_trips","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","key","value","isNaN","renderChart","label","borderColor","chartLabels","_","labels","datasets","fill","onClick","center","zoom","scrollWheelZoom","url","attribution","positions","color","marker","idx","position","icon","_c","$RefreshReg$"],"sources":["C:/Users/anush/OneDrive/Desktop/minor project/DriveIQ/DriveIQ/DriveIQ-PWA/src/components/Dashboard/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet'; // Import Marker and Popup\r\nimport 'leaflet/dist/leaflet.css'; // Ensure this is here\r\nimport L from 'leaflet'; // Import Leaflet to customize marker icons\r\nimport api from '../../utils/api';\r\nimport { smartGpsTracking, generateSimulatedRoute } from '../../utils/geolocation';\r\nimport BatchProcessing from '../BatchProcessing/BatchProcessing';\r\nimport './Dashboard.scss';\r\n\r\n// Register Chart.js components\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\r\n\r\n// Define custom marker icon\r\nconst customIcon = new L.Icon({\r\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n  iconSize: [25, 41], // Size of the marker icon\r\n  iconAnchor: [12, 41], // Position of the icon anchor relative to its size\r\n  popupAnchor: [1, -34], // Position of the popup relative to the icon\r\n});\r\n\r\nconst Dashboard = () => {\r\n  const [gpsData, setGpsData] = useState([]);\r\n  const [speedData, setSpeedData] = useState([]);\r\n  const [accelerationData, setAccelerationData] = useState([]);\r\n  const [jerkData, setJerkData] = useState([]);\r\n  const [brakingData, setBrakingData] = useState([]);\r\n  const [route, setRoute] = useState([]); // For route lines\r\n  const [markers, setMarkers] = useState([]); // For markers/pins on the map\r\n  const [isTracking, setIsTracking] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // States for daily data\r\n  const [dailyData, setDailyData] = useState(null);\r\n  const [isLoadingDailyData, setIsLoadingDailyData] = useState(false);\r\n  const [dailyError, setDailyError] = useState(null);\r\n\r\n  // Toggle GPS tracking\r\n  const toggleTracking = () => {\r\n    if (isTracking) {\r\n      setIsTracking(false);\r\n    } else {\r\n      setIsTracking(true);\r\n      startTracking();\r\n    }\r\n  };\r\n\r\n  // Start simulated GPS tracking\r\n  const startTracking = () => {\r\n    const simulatedBatches = generateSimulatedRoute(1, 5);\r\n    simulatedBatches.forEach((batch, index) => {\r\n      setTimeout(() => processBatch(batch), index * 5000);\r\n    });\r\n  };\r\n\r\n  // Process each GPS batch\r\n  const processBatch = async (batch) => {\r\n    const isMoving = smartGpsTracking(batch.gps_data, gpsData);\r\n    if (isMoving) {\r\n      try {\r\n        const driver_id = localStorage.getItem('driver_id');\r\n        const response = await api.post('/record-telematics', {\r\n          driver_id,\r\n          gps_data: batch.gps_data,\r\n        });\r\n\r\n        const features = response.data.features;\r\n\r\n        if (features) {\r\n          const speed = features['Speed(m/s)'] ?? 0;\r\n          const acceleration = features['Acceleration(m/s^2)'] ?? 0;\r\n          const jerk = features['Jerk(m/s^3)'] ?? 0;\r\n          const brakingIntensity = features['Braking_Intensity'] ?? 0;\r\n\r\n          setSpeedData((prevData) => [...prevData, speed]);\r\n          setAccelerationData((prevData) => [...prevData, acceleration]);\r\n          setJerkData((prevData) => [...prevData, jerk]);\r\n          setBrakingData((prevData) => [...prevData, brakingIntensity]);\r\n\r\n          setGpsData((prevData) => [...prevData, ...batch.gps_data]);\r\n\r\n          const lastPoint = batch.gps_data[batch.gps_data.length - 1];\r\n          setMarkers((prevMarkers) => [\r\n            ...prevMarkers,\r\n            { lat: lastPoint.Latitude, lng: lastPoint.Longitude },\r\n          ]);\r\n\r\n          setRoute((prevRoute) => [\r\n            ...prevRoute,\r\n            ...batch.gps_data.map((point) => [point.Latitude, point.Longitude]),\r\n          ]);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error recording telematics data:', error);\r\n        setError('Error processing GPS data. Please try again.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const processDailyData = async () => {\r\n    const driver_id = localStorage.getItem('driver_id');\r\n    setIsLoadingDailyData(true); // Start loading state\r\n  \r\n    try {\r\n      const response = await api.post('/process-daily-data', { driver_id });\r\n  \r\n      console.log('Daily Data API Response:', response.data);\r\n      \r\n      // Check if the response contains 'aggregated_data'\r\n      if (response.data && response.data.aggregated_data) {\r\n        // Even if some fields in 'aggregated_data' contain NaN, we consider it valid.\r\n        setDailyData(response.data); // Save the daily data into state\r\n        setDailyError(null); // Clear any previous errors\r\n      } else {\r\n        // If the structure of the response is invalid or missing 'aggregated_data'\r\n        setDailyError('No aggregated data found in the response');\r\n        setDailyData(null); // Reset the data if invalid\r\n      }\r\n    } catch (error) {\r\n      console.error('Error processing daily data:', error);\r\n      setDailyError('Error processing daily data');\r\n      setDailyData(null); // Reset the data if error\r\n    } finally {\r\n      setIsLoadingDailyData(false); // Stop loading state\r\n    }\r\n  };\r\n  \r\n\r\n  // Automatically fetch daily data at 11:55 PM\r\n  useEffect(() => {\r\n    const checkTime = () => {\r\n      const now = new Date();\r\n      if (now.getHours() === 23 && now.getMinutes() === 55) {\r\n        processDailyData();\r\n      }\r\n    };\r\n\r\n    const interval = setInterval(checkTime, 60000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Render daily data in a clean format\r\nconst renderDailyData = () => {\r\n  if (dailyData) {\r\n    const { aggregated_data, driving_score, driving_category, total_distance_covered_km, total_trips } = dailyData;\r\n    return (\r\n      <div className=\"daily-data-section\">\r\n        <h3>Daily Driving Data</h3>\r\n        <p><strong>Driving Score:</strong> {driving_score}</p>\r\n        <p><strong>Driving Category:</strong> {driving_category}</p>\r\n        <ul>\r\n          {Object.entries(aggregated_data).map(([key, value], index) => (\r\n            <li key={index}>\r\n              {key}: {isNaN(value) ? 0 : value} {/* Replace NaN with 0 */}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <p><strong>Total Distance Covered (km):</strong> {total_distance_covered_km}</p>\r\n        <p><strong>Total Trips:</strong> {total_trips}</p>\r\n      </div>\r\n    );\r\n  }\r\n  return <p>No daily data available yet.</p>;\r\n};\r\n\r\n  const renderChart = (label, data, borderColor) => {\r\n    const chartLabels = data.map((_, index) => `Batch ${index + 1}`);\r\n    return (\r\n      <Line\r\n        data={{\r\n          labels: chartLabels,\r\n          datasets: [\r\n            {\r\n              label: label,\r\n              data: data,\r\n              borderColor: borderColor,\r\n              fill: false,\r\n            },\r\n          ],\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Driver Dashboard</h2>\r\n\r\n      <div className=\"tracking-controls\">\r\n        <button onClick={toggleTracking}>\r\n          {isTracking ? 'Stop Tracking' : 'Start Tracking'}\r\n        </button>\r\n        <button onClick={processDailyData}>Process Daily Data</button>\r\n      </div>\r\n\r\n      {/* Daily Data Section */}\r\n      <div className=\"daily-data-section\">\r\n        {isLoadingDailyData ? <p>Loading daily data...</p> : dailyError ? <p>{dailyError}</p> : renderDailyData()}\r\n      </div>\r\n\r\n      {/* Map Section */}\r\n      <div className=\"map-section\">\r\n        <h3>Route Map</h3>\r\n        <MapContainer center={[26.6337, 92.7926]} zoom={13} scrollWheelZoom={false} className=\"map-container\">\r\n          <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" attribution=\"&copy; OpenStreetMap contributors\" />\r\n          <Polyline positions={route} color=\"blue\" />\r\n          {markers.map((marker, idx) => (\r\n            <Marker key={idx} position={[marker.lat, marker.lng]} icon={customIcon}>\r\n              <Popup>Latitude: {marker.lat}, Longitude: {marker.lng}</Popup>\r\n            </Marker>\r\n          ))}\r\n        </MapContainer>\r\n      </div>\r\n\r\n      {/* Charts Section */}\r\n      <div className=\"chart-section\">\r\n        <h3>Driving Feature Fluctuations</h3>\r\n        <div className=\"chart-container\">\r\n          {renderChart('Speed (m/s)', speedData, 'rgba(75, 192, 192, 1)')}\r\n          {renderChart('Acceleration (m/s²)', accelerationData, 'rgba(255, 99, 132, 1)')}\r\n          {renderChart('Jerk (m/s³)', jerkData, 'rgba(54, 162, 235, 1)')}\r\n          {renderChart('Braking Intensity', brakingData, 'rgba(153, 102, 255, 1)')}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Batch Processing Section */}\r\n      <BatchProcessing gpsData={gpsData} />\r\n\r\n      {/* Error Message */}\r\n      {error && <div className=\"error\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}