{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anush\\\\OneDrive\\\\Desktop\\\\minor project\\\\DriveIQ\\\\DriveIQ\\\\DriveIQ-PWA\\\\src\\\\components\\\\DailyScorePopup\\\\DailyScorePopup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from '../../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DailyScorePopup = ({\n  closePopup\n}) => {\n  _s();\n  const [dailyData, setDailyData] = useState(null); // Store the daily data\n  const [error, setError] = useState(null); // Handle any errors\n  const [loading, setLoading] = useState(true); // Handle loading state\n\n  // Function to call the /process-daily-data API\n  const fetchDailyData = async () => {\n    const driver_id = localStorage.getItem('driver_id'); // Fetch driver ID from localStorage\n    if (!driver_id) {\n      setError('Driver ID not found. Please log in.');\n      setLoading(false);\n      return;\n    }\n    try {\n      const response = await api.post('/process-daily-data', {\n        driver_id\n      }); // Call the API\n      setDailyData(response.data); // Store the API response in state\n      setError(null); // Clear any errors\n    } catch (err) {\n      console.error('Error fetching daily data:', err);\n      setError('Failed to fetch daily data. Please try again.');\n    } finally {\n      setLoading(false); // Set loading to false after the request is completed\n    }\n  };\n\n  // Fetch data when the component mounts\n  useEffect(() => {\n    fetchDailyData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"daily-score-popup\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"close-button\",\n      onClick: closePopup,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading daily data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), dailyData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Daily Driving Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(dailyData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(DailyScorePopup, \"4phnYUCPj8rDZvt0Ck+Lmn82p1E=\");\n_c = DailyScorePopup;\nexport default DailyScorePopup;\nvar _c;\n$RefreshReg$(_c, \"DailyScorePopup\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","DailyScorePopup","closePopup","_s","dailyData","setDailyData","error","setError","loading","setLoading","fetchDailyData","driver_id","localStorage","getItem","response","post","data","err","console","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/anush/OneDrive/Desktop/minor project/DriveIQ/DriveIQ/DriveIQ-PWA/src/components/DailyScorePopup/DailyScorePopup.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport api from '../../utils/api';\r\n\r\nconst DailyScorePopup = ({ closePopup }) => {\r\n  const [dailyData, setDailyData] = useState(null);  // Store the daily data\r\n  const [error, setError] = useState(null);          // Handle any errors\r\n  const [loading, setLoading] = useState(true);      // Handle loading state\r\n\r\n  // Function to call the /process-daily-data API\r\n  const fetchDailyData = async () => {\r\n    const driver_id = localStorage.getItem('driver_id');  // Fetch driver ID from localStorage\r\n    if (!driver_id) {\r\n      setError('Driver ID not found. Please log in.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await api.post('/process-daily-data', { driver_id });  // Call the API\r\n      setDailyData(response.data);  // Store the API response in state\r\n      setError(null);               // Clear any errors\r\n    } catch (err) {\r\n      console.error('Error fetching daily data:', err);\r\n      setError('Failed to fetch daily data. Please try again.');\r\n    } finally {\r\n      setLoading(false);  // Set loading to false after the request is completed\r\n    }\r\n  };\r\n\r\n  // Fetch data when the component mounts\r\n  useEffect(() => {\r\n    fetchDailyData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"daily-score-popup\">\r\n      <button className=\"close-button\" onClick={closePopup}>Close</button>\r\n\r\n      {/* Display loading state */}\r\n      {loading && <p>Loading daily data...</p>}\r\n\r\n      {/* Display error message */}\r\n      {error && <p className=\"error\">{error}</p>}\r\n\r\n      {/* Display daily data */}\r\n      {dailyData && (\r\n        <div>\r\n          <h3>Daily Driving Summary</h3>\r\n          <pre>{JSON.stringify(dailyData, null, 2)}</pre>  {/* Display raw JSON data */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DailyScorePopup;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;EACnD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAU;EACnD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAM;;EAEnD;EACA,MAAMc,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAE;IACtD,IAAI,CAACF,SAAS,EAAE;MACdJ,QAAQ,CAAC,qCAAqC,CAAC;MAC/CE,UAAU,CAAC,KAAK,CAAC;MACjB;IACF;IAEA,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMhB,GAAG,CAACiB,IAAI,CAAC,qBAAqB,EAAE;QAAEJ;MAAU,CAAC,CAAC,CAAC,CAAE;MACxEN,YAAY,CAACS,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAE;MAC9BT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAe;IAChC,CAAC,CAAC,OAAOU,GAAG,EAAE;MACZC,OAAO,CAACZ,KAAK,CAAC,4BAA4B,EAAEW,GAAG,CAAC;MAChDV,QAAQ,CAAC,+CAA+C,CAAC;IAC3D,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC,CAAC,CAAE;IACtB;EACF,CAAC;;EAED;EACAZ,SAAS,CAAC,MAAM;IACda,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA;IAAKmB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCpB,OAAA;MAAQmB,SAAS,EAAC,cAAc;MAACE,OAAO,EAAEnB,UAAW;MAAAkB,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAGnEjB,OAAO,iBAAIR,OAAA;MAAAoB,QAAA,EAAG;IAAqB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAGvCnB,KAAK,iBAAIN,OAAA;MAAGmB,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEd;IAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAGzCrB,SAAS,iBACRJ,OAAA;MAAAoB,QAAA,gBACEpB,OAAA;QAAAoB,QAAA,EAAI;MAAqB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9BzB,OAAA;QAAAoB,QAAA,EAAMM,IAAI,CAACC,SAAS,CAACvB,SAAS,EAAE,IAAI,EAAE,CAAC;MAAC;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,MAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtB,EAAA,CAlDIF,eAAe;AAAA2B,EAAA,GAAf3B,eAAe;AAoDrB,eAAeA,eAAe;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}