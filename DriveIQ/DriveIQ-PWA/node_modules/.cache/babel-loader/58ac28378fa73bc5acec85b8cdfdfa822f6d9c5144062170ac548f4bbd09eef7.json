{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anush\\\\OneDrive\\\\Desktop\\\\minor project\\\\DriveIQ\\\\DriveIQ\\\\DriveIQ-PWA\\\\src\\\\components\\\\Dashboard\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Polyline, Marker } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { Line } from 'react-chartjs-2';\nimport axios from 'axios';\nimport './Dashboard.scss';\n\n// Chart.js setup\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst Dashboard = () => {\n  _s();\n  const [gpsData, setGpsData] = useState([]);\n  const [route, setRoute] = useState([]);\n  const [performanceData, setPerformanceData] = useState({\n    speed: [],\n    acceleration: [],\n    jerk: []\n  });\n  const [isMoving, setIsMoving] = useState(false);\n  const [batch, setBatch] = useState([]);\n  const [lastPoint, setLastPoint] = useState(null);\n  const [totalTrips, setTotalTrips] = useState(0);\n  const [totalDistance, setTotalDistance] = useState(0);\n  const [drivingScore, setDrivingScore] = useState(null);\n  const [drivingCategory, setDrivingCategory] = useState('');\n  const [driverId, setDriverId] = useState(null);\n  const [error, setError] = useState('');\n\n  // Fetch driver data (e.g., driver ID) from backend\n  useEffect(() => {\n    const fetchDriverData = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://localhost:5000/api/user-data', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setDriverId(response.data.driver_id);\n      } catch (err) {\n        setError('Error fetching user data');\n      }\n    };\n    fetchDriverData();\n  }, []);\n\n  // Mock GPS data batch generator for laptop testing\n  const generateMockBatchData = () => {\n    const distanceIncrement = 0.002; // Increment for each step in latitude and longitude\n    const timeStepIncrement = 60; // seconds\n    let lastLat = (lastPoint === null || lastPoint === void 0 ? void 0 : lastPoint.Latitude) || 40.712776; // Default starting point in NYC\n    let lastLon = (lastPoint === null || lastPoint === void 0 ? void 0 : lastPoint.Longitude) || -74.005974;\n    const speedVariation = Math.random() * 0.01; // Simulate small speed variation\n\n    const mockBatch = [];\n    for (let i = 0; i < 10; i++) {\n      lastLat += distanceIncrement;\n      lastLon += distanceIncrement;\n      mockBatch.push({\n        Latitude: lastLat,\n        Longitude: lastLon,\n        Time_Step: Date.now() + i * timeStepIncrement * 1000,\n        Speed: 8.37 + speedVariation // Mock speed data in m/s\n      });\n    }\n    setLastPoint(mockBatch[mockBatch.length - 1]); // The last point in the batch\n    return mockBatch;\n  };\n\n  // Handle GPS data when a new point arrives\n  const handlePosition = (lat, lon, speed) => {\n    const newGpsPoint = {\n      Latitude: lat,\n      Longitude: lon,\n      Time_Step: Date.now(),\n      Speed: speed ? speed * 3.6 : 0 // Convert to km/h\n    };\n    if (newGpsPoint.Speed > 5) {\n      setIsMoving(true);\n      setBatch(prevBatch => [...prevBatch, newGpsPoint]);\n    } else if (isMoving) {\n      // Car has stopped, send the batch\n      setIsMoving(false);\n      sendBatchToBackend(batch);\n      setLastPoint(newGpsPoint); // Mark this as the last point of the batch\n      setBatch([]); // Reset the batch\n    }\n  };\n\n  // Send batch of GPS data to backend\n  const sendBatchToBackend = async gpsDataBatch => {\n    if (gpsDataBatch.length === 0) return;\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post('http://localhost:5000/api/record-telematics', {\n        driver_id: driverId,\n        gps_data: gpsDataBatch\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const gps = response.data.gps_data || [];\n      const performance = response.data.performance || {\n        speed: [],\n        acceleration: [],\n        jerk: []\n      };\n\n      // Map route and performance data\n      if (gpsDataBatch.length > 1) {\n        const batchStart = gpsDataBatch[0];\n        const batchEnd = gpsDataBatch[gpsDataBatch.length - 1];\n        setRoute(prevRoute => [...prevRoute, [batchStart.Latitude, batchStart.Longitude], [batchEnd.Latitude, batchEnd.Longitude]]);\n      }\n      setPerformanceData({\n        speed: performance.speed,\n        acceleration: performance.acceleration,\n        jerk: performance.jerk\n      });\n    } catch (err) {\n      console.error('Error sending GPS data:', err);\n      setError('Error sending GPS data');\n    }\n  };\n\n  // Real GPS tracking using Geolocation API (for mobile devices)\n  const trackPosition = position => {\n    const {\n      latitude,\n      longitude,\n      speed\n    } = position.coords;\n    handlePosition(latitude, longitude, speed);\n  };\n\n  // Enable real GPS tracking (for mobile use)\n  const enableRealGpsTracking = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.watchPosition(trackPosition, error => setError('Error retrieving geolocation data'), {\n        enableHighAccuracy: true\n      });\n    } else {\n      setError('Geolocation is not supported by this browser');\n    }\n  };\n\n  // Periodic GPS simulation for laptop testing\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const mockData = generateMockBatchData();\n      for (const point of mockData) {\n        handlePosition(point.Latitude, point.Longitude, point.Speed);\n      }\n    }, 10000); // Every 10 seconds for simulation\n\n    return () => clearInterval(interval);\n  }, [lastPoint]);\n\n  // Fetch daily report\n  useEffect(() => {\n    const fetchDailyReport = async () => {\n      if (!driverId) return;\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.post('http://localhost:5000/api/process-daily-data', {\n          driver_id: driverId\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const performance = response.data.aggregated_data || {\n          speed: [],\n          acceleration: [],\n          jerk: []\n        };\n        const trips = response.data.total_trips;\n        const distance = response.data.total_distance_covered_km;\n        const score = response.data.driving_score;\n        const category = response.data.driving_category;\n        setPerformanceData({\n          speed: performance['Speed(m/s)'],\n          acceleration: performance['Acceleration(m/s^2)'],\n          jerk: performance['Jerk(m/s³)']\n        });\n        setTotalTrips(trips);\n        setTotalDistance(distance);\n        setDrivingScore(score);\n        setDrivingCategory(category);\n      } catch (err) {\n        console.error('Error fetching daily report:', err);\n        setError('Error fetching daily report');\n      }\n    };\n    fetchDailyReport();\n  }, [driverId]);\n\n  // Setup chart data\n  const chartData = {\n    labels: performanceData.speed.map((_, index) => `T${index}`),\n    datasets: [{\n      label: 'Speed (m/s)',\n      data: performanceData.speed,\n      borderColor: 'rgba(75,192,192,1)',\n      fill: false\n    }, {\n      label: 'Acceleration (m/s²)',\n      data: performanceData.acceleration,\n      borderColor: '#FF6384',\n      fill: false\n    }, {\n      label: 'Jerk (m/s³)',\n      data: performanceData.jerk,\n      borderColor: '#36A2EB',\n      fill: false\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Driver Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Trips in Last 24 Hours: \", totalTrips]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Distance Covered: \", totalDistance, \" km\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Driving Score: \", drivingScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Driving Category: \", drivingCategory]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-section\",\n        children: /*#__PURE__*/_jsxDEV(MapContainer, {\n          center: [40.712776, -74.005974],\n          zoom: 13,\n          className: \"map\",\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n            positions: route,\n            color: \"blue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), route.length > 0 && /*#__PURE__*/_jsxDEV(Marker, {\n            position: route[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 34\n          }, this), route.length > 1 && /*#__PURE__*/_jsxDEV(Marker, {\n            position: route[route.length - 1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-section\",\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"b2jgUP/AN3rm6sI/A6G3ZQRQ06E=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Polyline","Marker","Line","axios","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Dashboard","_s","gpsData","setGpsData","route","setRoute","performanceData","setPerformanceData","speed","acceleration","jerk","isMoving","setIsMoving","batch","setBatch","lastPoint","setLastPoint","totalTrips","setTotalTrips","totalDistance","setTotalDistance","drivingScore","setDrivingScore","drivingCategory","setDrivingCategory","driverId","setDriverId","error","setError","fetchDriverData","token","localStorage","getItem","response","get","headers","Authorization","data","driver_id","err","generateMockBatchData","distanceIncrement","timeStepIncrement","lastLat","Latitude","lastLon","Longitude","speedVariation","Math","random","mockBatch","i","push","Time_Step","Date","now","Speed","length","handlePosition","lat","lon","newGpsPoint","prevBatch","sendBatchToBackend","gpsDataBatch","post","gps_data","gps","performance","batchStart","batchEnd","prevRoute","console","trackPosition","position","latitude","longitude","coords","enableRealGpsTracking","navigator","geolocation","watchPosition","enableHighAccuracy","interval","setInterval","mockData","point","clearInterval","fetchDailyReport","aggregated_data","trips","total_trips","distance","total_distance_covered_km","score","driving_score","category","driving_category","chartData","labels","map","_","index","datasets","label","borderColor","fill","className","children","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","url","positions","color","_c","$RefreshReg$"],"sources":["C:/Users/anush/OneDrive/Desktop/minor project/DriveIQ/DriveIQ/DriveIQ-PWA/src/components/Dashboard/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { MapContainer, TileLayer, Polyline, Marker } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { Line } from 'react-chartjs-2';\r\nimport axios from 'axios';\r\nimport './Dashboard.scss';\r\n\r\n// Chart.js setup\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\r\n\r\nconst Dashboard = () => {\r\n  const [gpsData, setGpsData] = useState([]);\r\n  const [route, setRoute] = useState([]);\r\n  const [performanceData, setPerformanceData] = useState({\r\n    speed: [],\r\n    acceleration: [],\r\n    jerk: [],\r\n  });\r\n  const [isMoving, setIsMoving] = useState(false);\r\n  const [batch, setBatch] = useState([]);\r\n  const [lastPoint, setLastPoint] = useState(null);\r\n  const [totalTrips, setTotalTrips] = useState(0);\r\n  const [totalDistance, setTotalDistance] = useState(0);\r\n  const [drivingScore, setDrivingScore] = useState(null);\r\n  const [drivingCategory, setDrivingCategory] = useState('');\r\n  const [driverId, setDriverId] = useState(null);\r\n  const [error, setError] = useState('');\r\n\r\n  // Fetch driver data (e.g., driver ID) from backend\r\n  useEffect(() => {\r\n    const fetchDriverData = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.get('http://localhost:5000/api/user-data', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        setDriverId(response.data.driver_id);\r\n      } catch (err) {\r\n        setError('Error fetching user data');\r\n      }\r\n    };\r\n    fetchDriverData();\r\n  }, []);\r\n\r\n  // Mock GPS data batch generator for laptop testing\r\n  const generateMockBatchData = () => {\r\n    const distanceIncrement = 0.002; // Increment for each step in latitude and longitude\r\n    const timeStepIncrement = 60; // seconds\r\n    let lastLat = lastPoint?.Latitude || 40.712776; // Default starting point in NYC\r\n    let lastLon = lastPoint?.Longitude || -74.005974;\r\n    const speedVariation = Math.random() * 0.01; // Simulate small speed variation\r\n\r\n    const mockBatch = [];\r\n    for (let i = 0; i < 10; i++) {\r\n      lastLat += distanceIncrement;\r\n      lastLon += distanceIncrement;\r\n      mockBatch.push({\r\n        Latitude: lastLat,\r\n        Longitude: lastLon,\r\n        Time_Step: Date.now() + i * timeStepIncrement * 1000,\r\n        Speed: 8.37 + speedVariation, // Mock speed data in m/s\r\n      });\r\n    }\r\n\r\n    setLastPoint(mockBatch[mockBatch.length - 1]); // The last point in the batch\r\n    return mockBatch;\r\n  };\r\n\r\n  // Handle GPS data when a new point arrives\r\n  const handlePosition = (lat, lon, speed) => {\r\n    const newGpsPoint = {\r\n      Latitude: lat,\r\n      Longitude: lon,\r\n      Time_Step: Date.now(),\r\n      Speed: speed ? speed * 3.6 : 0, // Convert to km/h\r\n    };\r\n\r\n    if (newGpsPoint.Speed > 5) {\r\n      setIsMoving(true);\r\n      setBatch((prevBatch) => [...prevBatch, newGpsPoint]);\r\n    } else if (isMoving) {\r\n      // Car has stopped, send the batch\r\n      setIsMoving(false);\r\n      sendBatchToBackend(batch);\r\n      setLastPoint(newGpsPoint); // Mark this as the last point of the batch\r\n      setBatch([]); // Reset the batch\r\n    }\r\n  };\r\n\r\n  // Send batch of GPS data to backend\r\n  const sendBatchToBackend = async (gpsDataBatch) => {\r\n    if (gpsDataBatch.length === 0) return;\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.post(\r\n        'http://localhost:5000/api/record-telematics',\r\n        { driver_id: driverId, gps_data: gpsDataBatch },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n\r\n      const gps = response.data.gps_data || [];\r\n      const performance = response.data.performance || { speed: [], acceleration: [], jerk: [] };\r\n\r\n      // Map route and performance data\r\n      if (gpsDataBatch.length > 1) {\r\n        const batchStart = gpsDataBatch[0];\r\n        const batchEnd = gpsDataBatch[gpsDataBatch.length - 1];\r\n        setRoute((prevRoute) => [\r\n          ...prevRoute,\r\n          [batchStart.Latitude, batchStart.Longitude],\r\n          [batchEnd.Latitude, batchEnd.Longitude],\r\n        ]);\r\n      }\r\n\r\n      setPerformanceData({\r\n        speed: performance.speed,\r\n        acceleration: performance.acceleration,\r\n        jerk: performance.jerk,\r\n      });\r\n    } catch (err) {\r\n      console.error('Error sending GPS data:', err);\r\n      setError('Error sending GPS data');\r\n    }\r\n  };\r\n\r\n  // Real GPS tracking using Geolocation API (for mobile devices)\r\n  const trackPosition = (position) => {\r\n    const { latitude, longitude, speed } = position.coords;\r\n    handlePosition(latitude, longitude, speed);\r\n  };\r\n\r\n  // Enable real GPS tracking (for mobile use)\r\n  const enableRealGpsTracking = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.watchPosition(\r\n        trackPosition,\r\n        (error) => setError('Error retrieving geolocation data'),\r\n        { enableHighAccuracy: true }\r\n      );\r\n    } else {\r\n      setError('Geolocation is not supported by this browser');\r\n    }\r\n  };\r\n\r\n  // Periodic GPS simulation for laptop testing\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const mockData = generateMockBatchData();\r\n      for (const point of mockData) {\r\n        handlePosition(point.Latitude, point.Longitude, point.Speed);\r\n      }\r\n    }, 10000); // Every 10 seconds for simulation\r\n\r\n    return () => clearInterval(interval);\r\n  }, [lastPoint]);\r\n\r\n  // Fetch daily report\r\n  useEffect(() => {\r\n    const fetchDailyReport = async () => {\r\n      if (!driverId) return;\r\n\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.post(\r\n          'http://localhost:5000/api/process-daily-data',\r\n          { driver_id: driverId },\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n\r\n        const performance = response.data.aggregated_data || {\r\n          speed: [],\r\n          acceleration: [],\r\n          jerk: [],\r\n        };\r\n        const trips = response.data.total_trips;\r\n        const distance = response.data.total_distance_covered_km;\r\n        const score = response.data.driving_score;\r\n        const category = response.data.driving_category;\r\n\r\n        setPerformanceData({\r\n          speed: performance['Speed(m/s)'],\r\n          acceleration: performance['Acceleration(m/s^2)'],\r\n          jerk: performance['Jerk(m/s³)'],\r\n        });\r\n        setTotalTrips(trips);\r\n        setTotalDistance(distance);\r\n        setDrivingScore(score);\r\n        setDrivingCategory(category);\r\n      } catch (err) {\r\n        console.error('Error fetching daily report:', err);\r\n        setError('Error fetching daily report');\r\n      }\r\n    };\r\n    fetchDailyReport();\r\n  }, [driverId]);\r\n\r\n  // Setup chart data\r\n  const chartData = {\r\n    labels: performanceData.speed.map((_, index) => `T${index}`),\r\n    datasets: [\r\n      { label: 'Speed (m/s)', data: performanceData.speed, borderColor: 'rgba(75,192,192,1)', fill: false },\r\n      { label: 'Acceleration (m/s²)', data: performanceData.acceleration, borderColor: '#FF6384', fill: false },\r\n      { label: 'Jerk (m/s³)', data: performanceData.jerk, borderColor: '#36A2EB', fill: false },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Driver Dashboard</h2>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      <div className=\"dashboard-summary\">\r\n        <p>Total Trips in Last 24 Hours: {totalTrips}</p>\r\n        <p>Total Distance Covered: {totalDistance} km</p>\r\n        <p>Driving Score: {drivingScore}</p>\r\n        <p>Driving Category: {drivingCategory}</p>\r\n      </div>\r\n      <div className=\"dashboard-content\">\r\n        <div className=\"map-section\">\r\n          <MapContainer center={[40.712776, -74.005974]} zoom={13} className=\"map\">\r\n            <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n            <Polyline positions={route} color=\"blue\" />\r\n            {route.length > 0 && <Marker position={route[0]} />}\r\n            {route.length > 1 && <Marker position={route[route.length - 1]} />}\r\n          </MapContainer>\r\n        </div>\r\n        <div className=\"graph-section\">\r\n          <Line data={chartData} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}