{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anush\\\\OneDrive\\\\Desktop\\\\minor project\\\\DriveIQ\\\\DriveIQ\\\\DriveIQ-PWA\\\\src\\\\components\\\\PerformanceGraph\\\\PerformanceGraph.jsx\",\n  _s = $RefreshSig$();\n// src/components/PerformanceGraph/PerformanceGraph.jsx\nimport React, { useEffect, useRef } from 'react';\nimport { Chart, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport 'chart.js/auto';\nimport './PerformanceGraph.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst PerformanceGraph = ({\n  gpsData\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  let chartInstance = null;\n  const renderChart = () => {\n    const ctx = chartRef.current.getContext('2d');\n    if (chartInstance !== null) {\n      chartInstance.destroy();\n    }\n    const labels = gpsData.map((data, index) => `T-${index + 1}`);\n    const speedData = gpsData.map(data => data.Speed);\n    chartInstance = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels,\n        datasets: [{\n          label: 'Speed over Time',\n          data: speedData,\n          borderColor: 'rgba(75, 192, 192, 1)',\n          borderWidth: 2\n        }]\n      },\n      options: {\n        scales: {\n          x: {\n            type: 'category'\n          },\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  };\n  useEffect(() => {\n    renderChart();\n    return () => {\n      if (chartInstance) chartInstance.destroy();\n    };\n  }, [gpsData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"performance-graph\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(PerformanceGraph, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = PerformanceGraph;\nexport default PerformanceGraph;\nvar _c;\n$RefreshReg$(_c, \"PerformanceGraph\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","PerformanceGraph","gpsData","_s","chartRef","chartInstance","renderChart","ctx","current","getContext","destroy","labels","map","data","index","speedData","Speed","type","datasets","label","borderColor","borderWidth","options","scales","x","y","beginAtZero","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/anush/OneDrive/Desktop/minor project/DriveIQ/DriveIQ/DriveIQ-PWA/src/components/PerformanceGraph/PerformanceGraph.jsx"],"sourcesContent":["// src/components/PerformanceGraph/PerformanceGraph.jsx\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { Chart, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\r\nimport 'chart.js/auto';\r\nimport './PerformanceGraph.scss';\r\n\r\nChart.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\r\n\r\nconst PerformanceGraph = ({ gpsData }) => {\r\n  const chartRef = useRef(null);\r\n  let chartInstance = null;\r\n\r\n  const renderChart = () => {\r\n    const ctx = chartRef.current.getContext('2d');\r\n\r\n    if (chartInstance !== null) {\r\n      chartInstance.destroy();\r\n    }\r\n\r\n    const labels = gpsData.map((data, index) => `T-${index + 1}`);\r\n    const speedData = gpsData.map(data => data.Speed);\r\n\r\n    chartInstance = new Chart(ctx, {\r\n      type: 'line',\r\n      data: {\r\n        labels,\r\n        datasets: [{\r\n          label: 'Speed over Time',\r\n          data: speedData,\r\n          borderColor: 'rgba(75, 192, 192, 1)',\r\n          borderWidth: 2,\r\n        }],\r\n      },\r\n      options: {\r\n        scales: {\r\n          x: {\r\n            type: 'category',\r\n          },\r\n          y: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    renderChart();\r\n    return () => {\r\n      if (chartInstance) chartInstance.destroy();\r\n    };\r\n  }, [gpsData]);\r\n\r\n  return (\r\n    <div className=\"performance-graph\">\r\n      <canvas ref={chartRef}></canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PerformanceGraph;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,KAAK,EAAEC,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAC/G,OAAO,eAAe;AACtB,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjCT,KAAK,CAACU,QAAQ,CAACT,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAE7F,MAAMI,gBAAgB,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAMC,QAAQ,GAAGf,MAAM,CAAC,IAAI,CAAC;EAC7B,IAAIgB,aAAa,GAAG,IAAI;EAExB,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,GAAG,GAAGH,QAAQ,CAACI,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC;IAE7C,IAAIJ,aAAa,KAAK,IAAI,EAAE;MAC1BA,aAAa,CAACK,OAAO,CAAC,CAAC;IACzB;IAEA,MAAMC,MAAM,GAAGT,OAAO,CAACU,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK,KAAKA,KAAK,GAAG,CAAC,EAAE,CAAC;IAC7D,MAAMC,SAAS,GAAGb,OAAO,CAACU,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACG,KAAK,CAAC;IAEjDX,aAAa,GAAG,IAAIf,KAAK,CAACiB,GAAG,EAAE;MAC7BU,IAAI,EAAE,MAAM;MACZJ,IAAI,EAAE;QACJF,MAAM;QACNO,QAAQ,EAAE,CAAC;UACTC,KAAK,EAAE,iBAAiB;UACxBN,IAAI,EAAEE,SAAS;UACfK,WAAW,EAAE,uBAAuB;UACpCC,WAAW,EAAE;QACf,CAAC;MACH,CAAC;MACDC,OAAO,EAAE;QACPC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDP,IAAI,EAAE;UACR,CAAC;UACDQ,CAAC,EAAE;YACDC,WAAW,EAAE;UACf;QACF;MACF;IACF,CAAC,CAAC;EACJ,CAAC;EAEDtC,SAAS,CAAC,MAAM;IACdkB,WAAW,CAAC,CAAC;IACb,OAAO,MAAM;MACX,IAAID,aAAa,EAAEA,aAAa,CAACK,OAAO,CAAC,CAAC;IAC5C,CAAC;EACH,CAAC,EAAE,CAACR,OAAO,CAAC,CAAC;EAEb,oBACEH,OAAA;IAAK4B,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAChC7B,OAAA;MAAQ8B,GAAG,EAAEzB;IAAS;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAlDIF,gBAAgB;AAAAiC,EAAA,GAAhBjC,gBAAgB;AAoDtB,eAAeA,gBAAgB;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}