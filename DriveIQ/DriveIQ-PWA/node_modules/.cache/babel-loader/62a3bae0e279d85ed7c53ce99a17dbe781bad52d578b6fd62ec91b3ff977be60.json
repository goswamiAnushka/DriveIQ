{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anush\\\\OneDrive\\\\Desktop\\\\minor project\\\\DriveIQ\\\\DriveIQ\\\\DriveIQ-PWA\\\\src\\\\components\\\\MapView\\\\MapView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Polyline, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './MapView.scss';\n\n// Custom marker icon (you can modify it further for advanced icons)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst createCustomMarker = iconUrl => {\n  return new L.Icon({\n    iconUrl,\n    iconSize: [30, 40],\n    iconAnchor: [15, 40],\n    popupAnchor: [0, -40]\n  });\n};\nconst MapView = ({\n  routeBatches\n}) => {\n  _s();\n  const [selectedBatch, setSelectedBatch] = useState(null);\n  const defaultPosition = [40.712776, -74.005974]; // Default: New York City\n\n  // A utility to dynamically assign colors based on the batch index\n  const generateRouteColor = batchIndex => {\n    const colors = ['#1f78b4', '#33a02c', '#e31a1c', '#ff7f00', '#6a3d9a'];\n    return colors[batchIndex % colors.length]; // Cycle through color array\n  };\n\n  // Handling marker click to focus on specific batch\n  const handleMarkerClick = batchIndex => {\n    setSelectedBatch(batchIndex);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-view\",\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: defaultPosition,\n      zoom: 13,\n      className: \"map\",\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), routeBatches === null || routeBatches === void 0 ? void 0 : routeBatches.map((batch, batchIndex) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Polyline, {\n          positions: batch.route,\n          color: generateRouteColor(batchIndex),\n          weight: 5 // Line thickness\n          ,\n          opacity: batchIndex === selectedBatch ? 1 : 0.7 // Highlight selected batch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), batch.route.length > 0 && /*#__PURE__*/_jsxDEV(Marker, {\n          position: batch.route[0],\n          icon: createCustomMarker('/path/to/start-icon.png'),\n          eventHandlers: {\n            click: () => handleMarkerClick(batchIndex) // On marker click, select batch\n          },\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: [\"Start of Batch \", batchIndex + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 57\n            }, this), \"Lat: \", batch.route[0][0], \", Lon: \", batch.route[0][1], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 69\n            }, this), \"Time: \", batch.startTime]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), batch.route.length > 1 && /*#__PURE__*/_jsxDEV(Marker, {\n          position: batch.route[batch.route.length - 1],\n          icon: createCustomMarker('/path/to/end-icon.png'),\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: [\"End of Batch \", batchIndex + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 55\n            }, this), \"Lat: \", batch.route[batch.route.length - 1][0], \", Lon: \", batch.route[batch.route.length - 1][1], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 111\n            }, this), \"Time: \", batch.endTime]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)]\n      }, batchIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(MapView, \"q3lA0zUZ/A1a7kkhrkthcDvSbZE=\");\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Polyline","Marker","Popup","L","jsxDEV","_jsxDEV","createCustomMarker","iconUrl","Icon","iconSize","iconAnchor","popupAnchor","MapView","routeBatches","_s","selectedBatch","setSelectedBatch","defaultPosition","generateRouteColor","batchIndex","colors","length","handleMarkerClick","className","children","center","zoom","url","fileName","_jsxFileName","lineNumber","columnNumber","map","batch","Fragment","positions","route","color","weight","opacity","position","icon","eventHandlers","click","startTime","endTime","_c","$RefreshReg$"],"sources":["C:/Users/anush/OneDrive/Desktop/minor project/DriveIQ/DriveIQ/DriveIQ-PWA/src/components/MapView/MapView.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { MapContainer, TileLayer, Polyline, Marker, Popup } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport './MapView.scss';\r\n\r\n// Custom marker icon (you can modify it further for advanced icons)\r\nconst createCustomMarker = (iconUrl) => {\r\n  return new L.Icon({\r\n    iconUrl,\r\n    iconSize: [30, 40],\r\n    iconAnchor: [15, 40],\r\n    popupAnchor: [0, -40],\r\n  });\r\n};\r\n\r\nconst MapView = ({ routeBatches }) => {\r\n  const [selectedBatch, setSelectedBatch] = useState(null);\r\n  const defaultPosition = [40.712776, -74.005974]; // Default: New York City\r\n\r\n  // A utility to dynamically assign colors based on the batch index\r\n  const generateRouteColor = (batchIndex) => {\r\n    const colors = ['#1f78b4', '#33a02c', '#e31a1c', '#ff7f00', '#6a3d9a'];\r\n    return colors[batchIndex % colors.length]; // Cycle through color array\r\n  };\r\n\r\n  // Handling marker click to focus on specific batch\r\n  const handleMarkerClick = (batchIndex) => {\r\n    setSelectedBatch(batchIndex);\r\n  };\r\n\r\n  return (\r\n    <div className=\"map-view\">\r\n      <MapContainer center={defaultPosition} zoom={13} className=\"map\">\r\n        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n        \r\n        {/* Loop through routeBatches (multiple trips in a day) */}\r\n        {routeBatches?.map((batch, batchIndex) => (\r\n          <React.Fragment key={batchIndex}>\r\n            {/* Render Polyline for each batch with dynamic color */}\r\n            <Polyline \r\n              positions={batch.route}\r\n              color={generateRouteColor(batchIndex)}\r\n              weight={5} // Line thickness\r\n              opacity={batchIndex === selectedBatch ? 1 : 0.7} // Highlight selected batch\r\n            />\r\n\r\n            {/* Start Marker */}\r\n            {batch.route.length > 0 && (\r\n              <Marker\r\n                position={batch.route[0]}\r\n                icon={createCustomMarker('/path/to/start-icon.png')}\r\n                eventHandlers={{\r\n                  click: () => handleMarkerClick(batchIndex), // On marker click, select batch\r\n                }}\r\n              >\r\n                <Popup>\r\n                  <b>Start of Batch {batchIndex + 1}</b><br />\r\n                  Lat: {batch.route[0][0]}, Lon: {batch.route[0][1]}<br />\r\n                  Time: {batch.startTime}\r\n                </Popup>\r\n              </Marker>\r\n            )}\r\n\r\n            {/* End Marker */}\r\n            {batch.route.length > 1 && (\r\n              <Marker\r\n                position={batch.route[batch.route.length - 1]}\r\n                icon={createCustomMarker('/path/to/end-icon.png')}\r\n              >\r\n                <Popup>\r\n                  <b>End of Batch {batchIndex + 1}</b><br />\r\n                  Lat: {batch.route[batch.route.length - 1][0]}, Lon: {batch.route[batch.route.length - 1][1]}<br />\r\n                  Time: {batch.endTime}\r\n                </Popup>\r\n              </Marker>\r\n            )}\r\n          </React.Fragment>\r\n        ))}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}