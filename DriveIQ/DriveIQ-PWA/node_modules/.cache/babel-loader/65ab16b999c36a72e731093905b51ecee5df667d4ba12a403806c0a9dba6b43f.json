{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anush\\\\OneDrive\\\\Desktop\\\\minor project\\\\DriveIQ\\\\DriveIQ\\\\DriveIQ-PWA\\\\src\\\\components\\\\Dashboard\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport api from '../../utils/api';\nimport { smartGpsTracking, generateSimulatedRoute } from '../../utils/geolocation';\nimport BatchProcessing from '../BatchProcessing/BatchProcessing';\nimport './Dashboard.scss';\n\n// Register Chart.js components\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, PointElement, LineElement } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, PointElement, LineElement, Title, Tooltip, Legend);\nconst customIcon = new L.Icon({\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34]\n});\nconst Dashboard = () => {\n  _s();\n  const [gpsData, setGpsData] = useState([]);\n  const [speedData, setSpeedData] = useState([]); // Speed data for tracking\n  const [accelerationData, setAccelerationData] = useState([]); // Acceleration data for tracking\n  const [jerkData, setJerkData] = useState([]); // Jerk data for tracking\n  const [brakingData, setBrakingData] = useState([]); // Braking data for tracking\n  const [route, setRoute] = useState([]); // Route lines for the map\n  const [markers, setMarkers] = useState([]); // Markers for the map\n  const [dailyData, setDailyData] = useState(null); // Daily data from process-daily-data API\n  const [error, setError] = useState(null);\n\n  // Function to manually call processDailyData API\n  const processDailyData = async () => {\n    try {\n      const driver_id = localStorage.getItem('driver_id');\n      if (!driver_id) {\n        setError('Driver ID is missing.');\n        return;\n      }\n      const response = await api.post('/process-daily-data', {\n        driver_id\n      });\n      if (response.status === 200 && response.data) {\n        console.log('Full API response:', response.data); // Log the full API response\n\n        const parsedData = response.data;\n\n        // Ensure that the API response contains the expected fields\n        if (parsedData.aggregated_data && parsedData.driving_score !== undefined) {\n          setDailyData(parsedData); // Set state with the received data\n        } else {\n          setError('Incomplete data received from the API.');\n        }\n      } else {\n        setError(`Failed to process daily data. Status code: ${response.status}`);\n      }\n    } catch (error) {\n      console.error('Error fetching daily data:', error.message || error);\n      setError('Error processing daily data. Please try again.');\n    }\n  };\n\n  // Function to start GPS tracking simulation\n  const startTracking = () => {\n    const simulatedBatches = generateSimulatedRoute(1, 5); // Generate 5 GPS batches\n    simulatedBatches.forEach((batch, index) => {\n      setTimeout(() => processBatch(batch), index * 5000); // Process each batch after 5 seconds\n    });\n  };\n\n  // Function to process GPS batches and record telematics data\n  const processBatch = async batch => {\n    const isMoving = smartGpsTracking(batch.gps_data, gpsData);\n    if (isMoving) {\n      try {\n        const driver_id = localStorage.getItem('driver_id');\n        const response = await api.post('/record-telematics', {\n          driver_id,\n          gps_data: batch.gps_data // Send GPS data for processing\n        });\n        const features = response.data.features;\n        if (features) {\n          var _features$SpeedMS, _features$Acceleratio, _features$JerkMS, _features$Braking_Int;\n          const speed = (_features$SpeedMS = features['Speed(m/s)']) !== null && _features$SpeedMS !== void 0 ? _features$SpeedMS : 0;\n          const acceleration = (_features$Acceleratio = features['Acceleration(m/s^2)']) !== null && _features$Acceleratio !== void 0 ? _features$Acceleratio : 0;\n          const jerk = (_features$JerkMS = features['Jerk(m/s^3)']) !== null && _features$JerkMS !== void 0 ? _features$JerkMS : 0;\n          const brakingIntensity = (_features$Braking_Int = features['Braking_Intensity']) !== null && _features$Braking_Int !== void 0 ? _features$Braking_Int : 0;\n\n          // Update data for each chart\n          setSpeedData(prevData => [...prevData, speed]);\n          setAccelerationData(prevData => [...prevData, acceleration]);\n          setJerkData(prevData => [...prevData, jerk]);\n          setBrakingData(prevData => [...prevData, brakingIntensity]);\n\n          // Update GPS data and route points\n          setGpsData(prevData => [...prevData, ...batch.gps_data]);\n\n          // Add only the last point of each batch as a marker\n          const lastPoint = batch.gps_data[batch.gps_data.length - 1];\n          setMarkers(prevMarkers => [...prevMarkers, {\n            lat: lastPoint.Latitude,\n            lng: lastPoint.Longitude\n          }]);\n          setRoute(prevRoute => [...prevRoute, ...batch.gps_data.map(point => [point.Latitude, point.Longitude])]);\n        }\n      } catch (error) {\n        console.error('Error processing GPS data:', error);\n        setError('Error processing GPS data. Please try again.');\n      }\n    }\n  };\n\n  // Function to render tracking charts\n  const renderTrackingChart = (label, data, borderColor) => {\n    const chartLabels = data.map((_, index) => `Batch ${index + 1}`);\n    return /*#__PURE__*/_jsxDEV(Line, {\n      data: {\n        labels: chartLabels,\n        datasets: [{\n          label: label,\n          data: data,\n          borderColor: borderColor,\n          fill: false\n        }]\n      },\n      options: {\n        elements: {\n          line: {\n            tension: 0.4 // Smoother lines for graph\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true // Start Y axis at zero for clearer data\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Display summary of daily data with enhanced visualization\n  const renderDailyData = () => {\n    var _dailyData$total_trip, _dailyData$driving_sc, _dailyData$driving_ca;\n    if (!dailyData) return null;\n    const totalTrips = (_dailyData$total_trip = dailyData === null || dailyData === void 0 ? void 0 : dailyData.total_trips) !== null && _dailyData$total_trip !== void 0 ? _dailyData$total_trip : 'N/A';\n    const totalDistanceCovered = dailyData !== null && dailyData !== void 0 && dailyData.total_distance_covered_km ? dailyData.total_distance_covered_km.toFixed(2) + ' km' : 'N/A';\n    const drivingScore = (_dailyData$driving_sc = dailyData === null || dailyData === void 0 ? void 0 : dailyData.driving_score) !== null && _dailyData$driving_sc !== void 0 ? _dailyData$driving_sc : 'N/A';\n    const drivingCategory = (_dailyData$driving_ca = dailyData === null || dailyData === void 0 ? void 0 : dailyData.driving_category) !== null && _dailyData$driving_ca !== void 0 ? _dailyData$driving_ca : 'N/A';\n    const safeJerk = isNaN(dailyData.aggregated_data['Jerk(m/s^3)']) ? 'N/A' : dailyData.aggregated_data['Jerk(m/s^3)'].toFixed(2);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daily-summary-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Daily Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Total Trips:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: totalTrips\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Total Distance Covered:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: totalDistanceCovered\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Driving Score:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: drivingScore\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `summary-item driving-category ${drivingCategory.toLowerCase()}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Driving Category:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: drivingCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Jerk (m/s\\xB3):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: safeJerk\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Driver Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tracking-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startTracking,\n        children: \"Start Tracking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: processDailyData,\n        children: \"Process Daily Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }, this), dailyData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daily-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Daily Performance Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this), renderDailyData(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: renderAggregatedDataChart()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Route Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [26.6337, 92.7926],\n        zoom: 13,\n        scrollWheelZoom: false,\n        className: \"map-container\",\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 OpenStreetMap contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n          positions: route,\n          color: \"blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), markers.map((marker, idx) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: [marker.lat, marker.lng],\n          icon: customIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [\"Latitude: \", marker.lat, \", Longitude: \", marker.lng]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Driving Feature Fluctuations (Tracking)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [renderTrackingChart('Speed (m/s)', speedData, 'rgba(75, 192, 192, 1)'), renderTrackingChart('Acceleration (m/s²)', accelerationData, 'rgba(255, 99, 132, 1)'), renderTrackingChart('Jerk (m/s³)', jerkData, 'rgba(54, 162, 235, 1)'), renderTrackingChart('Braking Intensity', brakingData, 'rgba(153, 102, 255, 1)')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BatchProcessing, {\n      gpsData: gpsData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"XeZN7kYGJDghU3CjQVj49vSc3OY=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Line","Bar","MapContainer","TileLayer","Marker","Popup","Polyline","L","api","smartGpsTracking","generateSimulatedRoute","BatchProcessing","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","PointElement","LineElement","jsxDEV","_jsxDEV","register","customIcon","Icon","iconUrl","require","iconSize","iconAnchor","popupAnchor","Dashboard","_s","gpsData","setGpsData","speedData","setSpeedData","accelerationData","setAccelerationData","jerkData","setJerkData","brakingData","setBrakingData","route","setRoute","markers","setMarkers","dailyData","setDailyData","error","setError","processDailyData","driver_id","localStorage","getItem","response","post","status","data","console","log","parsedData","aggregated_data","driving_score","undefined","message","startTracking","simulatedBatches","forEach","batch","index","setTimeout","processBatch","isMoving","gps_data","features","_features$SpeedMS","_features$Acceleratio","_features$JerkMS","_features$Braking_Int","speed","acceleration","jerk","brakingIntensity","prevData","lastPoint","length","prevMarkers","lat","Latitude","lng","Longitude","prevRoute","map","point","renderTrackingChart","label","borderColor","chartLabels","_","labels","datasets","fill","options","elements","line","tension","scales","y","beginAtZero","fileName","_jsxFileName","lineNumber","columnNumber","renderDailyData","_dailyData$total_trip","_dailyData$driving_sc","_dailyData$driving_ca","totalTrips","total_trips","totalDistanceCovered","total_distance_covered_km","toFixed","drivingScore","drivingCategory","driving_category","safeJerk","isNaN","className","children","toLowerCase","onClick","style","color","renderAggregatedDataChart","center","zoom","scrollWheelZoom","url","attribution","positions","marker","idx","position","icon","_c","$RefreshReg$"],"sources":["C:/Users/anush/OneDrive/Desktop/minor project/DriveIQ/DriveIQ/DriveIQ-PWA/src/components/Dashboard/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\nimport api from '../../utils/api';\r\nimport { smartGpsTracking, generateSimulatedRoute } from '../../utils/geolocation';\r\nimport BatchProcessing from '../BatchProcessing/BatchProcessing';\r\nimport './Dashboard.scss';\r\n\r\n// Register Chart.js components\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, PointElement, LineElement } from 'chart.js';\r\nChartJS.register(CategoryScale, LinearScale, BarElement, PointElement, LineElement, Title, Tooltip, Legend);\r\n\r\nconst customIcon = new L.Icon({\r\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n  iconSize: [25, 41],\r\n  iconAnchor: [12, 41],\r\n  popupAnchor: [1, -34],\r\n});\r\n\r\nconst Dashboard = () => {\r\n  const [gpsData, setGpsData] = useState([]);\r\n  const [speedData, setSpeedData] = useState([]); // Speed data for tracking\r\n  const [accelerationData, setAccelerationData] = useState([]); // Acceleration data for tracking\r\n  const [jerkData, setJerkData] = useState([]); // Jerk data for tracking\r\n  const [brakingData, setBrakingData] = useState([]); // Braking data for tracking\r\n  const [route, setRoute] = useState([]); // Route lines for the map\r\n  const [markers, setMarkers] = useState([]); // Markers for the map\r\n  const [dailyData, setDailyData] = useState(null); // Daily data from process-daily-data API\r\n  const [error, setError] = useState(null);\r\n\r\n  // Function to manually call processDailyData API\r\n  const processDailyData = async () => {\r\n    try {\r\n      const driver_id = localStorage.getItem('driver_id');\r\n  \r\n      if (!driver_id) {\r\n        setError('Driver ID is missing.');\r\n        return;\r\n      }\r\n  \r\n      const response = await api.post('/process-daily-data', { driver_id });\r\n\r\n      if (response.status === 200 && response.data) {\r\n        console.log('Full API response:', response.data); // Log the full API response\r\n\r\n        const parsedData = response.data;\r\n\r\n        // Ensure that the API response contains the expected fields\r\n        if (parsedData.aggregated_data && parsedData.driving_score !== undefined) {\r\n          setDailyData(parsedData); // Set state with the received data\r\n        } else {\r\n          setError('Incomplete data received from the API.');\r\n        }\r\n      } else {\r\n        setError(`Failed to process daily data. Status code: ${response.status}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching daily data:', error.message || error);\r\n      setError('Error processing daily data. Please try again.');\r\n    }\r\n  };\r\n\r\n  \r\n  // Function to start GPS tracking simulation\r\n  const startTracking = () => {\r\n    const simulatedBatches = generateSimulatedRoute(1, 5); // Generate 5 GPS batches\r\n    simulatedBatches.forEach((batch, index) => {\r\n      setTimeout(() => processBatch(batch), index * 5000); // Process each batch after 5 seconds\r\n    });\r\n  };\r\n\r\n  // Function to process GPS batches and record telematics data\r\n  const processBatch = async (batch) => {\r\n    const isMoving = smartGpsTracking(batch.gps_data, gpsData);\r\n    if (isMoving) {\r\n      try {\r\n        const driver_id = localStorage.getItem('driver_id');\r\n        const response = await api.post('/record-telematics', {\r\n          driver_id,\r\n          gps_data: batch.gps_data, // Send GPS data for processing\r\n        });\r\n\r\n        const features = response.data.features;\r\n\r\n        if (features) {\r\n          const speed = features['Speed(m/s)'] ?? 0;\r\n          const acceleration = features['Acceleration(m/s^2)'] ?? 0;\r\n          const jerk = features['Jerk(m/s^3)'] ?? 0;\r\n          const brakingIntensity = features['Braking_Intensity'] ?? 0;\r\n\r\n          // Update data for each chart\r\n          setSpeedData((prevData) => [...prevData, speed]);\r\n          setAccelerationData((prevData) => [...prevData, acceleration]);\r\n          setJerkData((prevData) => [...prevData, jerk]);\r\n          setBrakingData((prevData) => [...prevData, brakingIntensity]);\r\n\r\n          // Update GPS data and route points\r\n          setGpsData((prevData) => [...prevData, ...batch.gps_data]);\r\n\r\n          // Add only the last point of each batch as a marker\r\n          const lastPoint = batch.gps_data[batch.gps_data.length - 1];\r\n          setMarkers((prevMarkers) => [\r\n            ...prevMarkers,\r\n            { lat: lastPoint.Latitude, lng: lastPoint.Longitude },\r\n          ]);\r\n\r\n          setRoute((prevRoute) => [\r\n            ...prevRoute,\r\n            ...batch.gps_data.map((point) => [point.Latitude, point.Longitude]),\r\n          ]);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error processing GPS data:', error);\r\n        setError('Error processing GPS data. Please try again.');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Function to render tracking charts\r\n  const renderTrackingChart = (label, data, borderColor) => {\r\n    const chartLabels = data.map((_, index) => `Batch ${index + 1}`);\r\n    return (\r\n      <Line\r\n        data={{\r\n          labels: chartLabels,\r\n          datasets: [\r\n            {\r\n              label: label,\r\n              data: data,\r\n              borderColor: borderColor,\r\n              fill: false,\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          elements: {\r\n            line: {\r\n              tension: 0.4, // Smoother lines for graph\r\n            },\r\n          },\r\n          scales: {\r\n            y: {\r\n              beginAtZero: true, // Start Y axis at zero for clearer data\r\n            },\r\n          },\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  \r\n  // Display summary of daily data with enhanced visualization\r\n  const renderDailyData = () => {\r\n    if (!dailyData) return null;\r\n\r\n    const totalTrips = dailyData?.total_trips ?? 'N/A';\r\n    const totalDistanceCovered = dailyData?.total_distance_covered_km\r\n      ? dailyData.total_distance_covered_km.toFixed(2) + ' km'\r\n      : 'N/A';\r\n    const drivingScore = dailyData?.driving_score ?? 'N/A';\r\n    const drivingCategory = dailyData?.driving_category ?? 'N/A';\r\n    const safeJerk = isNaN(dailyData.aggregated_data['Jerk(m/s^3)']) ? 'N/A' : dailyData.aggregated_data['Jerk(m/s^3)'].toFixed(2);\r\n\r\n    return (\r\n      <div className=\"daily-summary-data\">\r\n        <h4>Daily Summary</h4>\r\n        <div className=\"summary-item\">\r\n          <span>Total Trips:</span>\r\n          <span>{totalTrips}</span>\r\n        </div>\r\n        <div className=\"summary-item\">\r\n          <span>Total Distance Covered:</span>\r\n          <span>{totalDistanceCovered}</span>\r\n        </div>\r\n        <div className=\"summary-item\">\r\n          <span>Driving Score:</span>\r\n          <span>{drivingScore}</span>\r\n        </div>\r\n        <div className={`summary-item driving-category ${drivingCategory.toLowerCase()}`}>\r\n          <span>Driving Category:</span>\r\n          <span>{drivingCategory}</span>\r\n        </div>\r\n        <div className=\"summary-item\">\r\n          <span>Jerk (m/s³):</span>\r\n          <span>{safeJerk}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Driver Dashboard</h2>\r\n\r\n      <div className=\"tracking-controls\">\r\n        <button onClick={startTracking}>Start Tracking</button>\r\n        <button onClick={processDailyData}>Process Daily Data</button>\r\n      </div>\r\n\r\n      {/* Error Message Section */}\r\n      {error && <div className=\"error-message\" style={{ color: 'red' }}>{error}</div>}\r\n\r\n      {/* Daily Data Section */}\r\n      {dailyData && (\r\n        <div className=\"daily-summary\">\r\n          <h3>Daily Performance Summary</h3>\r\n\r\n          {/* Display summary data */}\r\n          {renderDailyData()}\r\n\r\n          {/* Render the aggregated data chart */}\r\n          <div className=\"chart-container\">\r\n            {renderAggregatedDataChart()}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Map Section */}\r\n      <div className=\"map-section\">\r\n        <h3>Route Map</h3>\r\n        <MapContainer center={[26.6337, 92.7926]} zoom={13} scrollWheelZoom={false} className=\"map-container\">\r\n          <TileLayer\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            attribution=\"&copy; OpenStreetMap contributors\"\r\n          />\r\n          {/* Display the polyline for the route */}\r\n          <Polyline positions={route} color=\"blue\" />\r\n\r\n          {/* Add only the last marker of each batch */}\r\n          {markers.map((marker, idx) => (\r\n            <Marker key={idx} position={[marker.lat, marker.lng]} icon={customIcon}>\r\n              <Popup>\r\n                Latitude: {marker.lat}, Longitude: {marker.lng}\r\n              </Popup>\r\n            </Marker>\r\n          ))}\r\n        </MapContainer>\r\n      </div>\r\n\r\n      {/* Tracking Data Charts */}\r\n      <div className=\"chart-section\">\r\n        <h3>Driving Feature Fluctuations (Tracking)</h3>\r\n        <div className=\"chart-container\">\r\n          {/* Speed Chart */}\r\n          {renderTrackingChart('Speed (m/s)', speedData, 'rgba(75, 192, 192, 1)')}\r\n\r\n          {/* Acceleration Chart */}\r\n          {renderTrackingChart('Acceleration (m/s²)', accelerationData, 'rgba(255, 99, 132, 1)')}\r\n\r\n          {/* Jerk Chart */}\r\n          {renderTrackingChart('Jerk (m/s³)', jerkData, 'rgba(54, 162, 235, 1)')}\r\n\r\n          {/* Braking Intensity Chart */}\r\n          {renderTrackingChart('Braking Intensity', brakingData, 'rgba(153, 102, 255, 1)')}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Batch Processing Section */}\r\n      <BatchProcessing gpsData={gpsData} /> {/* Pass the GPS data to BatchProcessing */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}