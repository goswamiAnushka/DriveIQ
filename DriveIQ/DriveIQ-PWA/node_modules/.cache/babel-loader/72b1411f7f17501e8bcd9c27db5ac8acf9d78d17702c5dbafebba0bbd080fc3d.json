{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anush\\\\OneDrive\\\\Desktop\\\\minor project\\\\DriveIQ\\\\DriveIQ\\\\DriveIQ-PWA\\\\src\\\\components\\\\DailyScorePopup\\\\DailyScorePopup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from '../../utils/api';\nimport './DailyScorePopup.scss'; // Ensure your styles are imported\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DailyScorePopup = ({\n  closePopup\n}) => {\n  _s();\n  const [dailyData, setDailyData] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Function to call the /process-daily-data API\n  const fetchDailyData = async () => {\n    const driver_id = localStorage.getItem('driver_id');\n    if (!driver_id) {\n      setError('Driver ID not found. Please log in.');\n      setLoading(false);\n      return;\n    }\n    try {\n      const response = await api.post('/process-daily-data', {\n        driver_id\n      });\n      setDailyData(response.data); // Store the API response in state\n      setError(null);\n    } catch (err) {\n      console.error('Error fetching daily data:', err);\n      setError('Failed to fetch daily data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch data when the component mounts\n  useEffect(() => {\n    fetchDailyData();\n  }, []);\n\n  // Function to format the JSON data as a text format\n  const formatDataAsText = data => {\n    if (!data) return 'No data available.';\n    const {\n      driving_score,\n      driving_category,\n      total_distance_covered_km,\n      total_trips,\n      aggregated_data\n    } = data;\n    return `\n      Driving Score: ${driving_score || 'N/A'} / 100\n      Driving Category: ${driving_category || 'N/A'}\n      Total Distance Covered: ${total_distance_covered_km || 'N/A'} km\n      Total Trips: ${total_trips || 'N/A'}\n\n      Aggregated Data:\n      - Acceleration: ${(aggregated_data === null || aggregated_data === void 0 ? void 0 : aggregated_data['Acceleration(m/s^2)']) || 'N/A'} m/s²\n      - Braking Intensity: ${(aggregated_data === null || aggregated_data === void 0 ? void 0 : aggregated_data['Braking_Intensity']) || 'N/A'}\n      - Heading Change: ${(aggregated_data === null || aggregated_data === void 0 ? void 0 : aggregated_data['Heading_Change(degrees)']) || 'N/A'} degrees\n      - Jerk: ${(aggregated_data === null || aggregated_data === void 0 ? void 0 : aggregated_data['Jerk(m/s^3)']) || 'N/A'} m/s³\n      - SASV: ${(aggregated_data === null || aggregated_data === void 0 ? void 0 : aggregated_data['SASV']) || 'N/A'}\n      - Speed (km/h): ${(aggregated_data === null || aggregated_data === void 0 ? void 0 : aggregated_data['Speed(km/h)']) || 'N/A'} km/h\n      - Speed Violation: ${(aggregated_data === null || aggregated_data === void 0 ? void 0 : aggregated_data['Speed_Violation']) || 'N/A'}\n    `;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"daily-score-popup\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"close-button\",\n      onClick: closePopup,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading daily data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this), dailyData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Daily Driving Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: formatDataAsText(dailyData)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(DailyScorePopup, \"4phnYUCPj8rDZvt0Ck+Lmn82p1E=\");\n_c = DailyScorePopup;\nexport default DailyScorePopup;\nvar _c;\n$RefreshReg$(_c, \"DailyScorePopup\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","DailyScorePopup","closePopup","_s","dailyData","setDailyData","error","setError","loading","setLoading","fetchDailyData","driver_id","localStorage","getItem","response","post","data","err","console","formatDataAsText","driving_score","driving_category","total_distance_covered_km","total_trips","aggregated_data","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/anush/OneDrive/Desktop/minor project/DriveIQ/DriveIQ/DriveIQ-PWA/src/components/DailyScorePopup/DailyScorePopup.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport api from '../../utils/api';\r\nimport './DailyScorePopup.scss';  // Ensure your styles are imported\r\n\r\nconst DailyScorePopup = ({ closePopup }) => {\r\n  const [dailyData, setDailyData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Function to call the /process-daily-data API\r\n  const fetchDailyData = async () => {\r\n    const driver_id = localStorage.getItem('driver_id');\r\n    if (!driver_id) {\r\n      setError('Driver ID not found. Please log in.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await api.post('/process-daily-data', { driver_id });\r\n      setDailyData(response.data);  // Store the API response in state\r\n      setError(null);\r\n    } catch (err) {\r\n      console.error('Error fetching daily data:', err);\r\n      setError('Failed to fetch daily data. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch data when the component mounts\r\n  useEffect(() => {\r\n    fetchDailyData();\r\n  }, []);\r\n\r\n  // Function to format the JSON data as a text format\r\n  const formatDataAsText = (data) => {\r\n    if (!data) return 'No data available.';\r\n\r\n    const { driving_score, driving_category, total_distance_covered_km, total_trips, aggregated_data } = data;\r\n\r\n    return `\r\n      Driving Score: ${driving_score || 'N/A'} / 100\r\n      Driving Category: ${driving_category || 'N/A'}\r\n      Total Distance Covered: ${total_distance_covered_km || 'N/A'} km\r\n      Total Trips: ${total_trips || 'N/A'}\r\n\r\n      Aggregated Data:\r\n      - Acceleration: ${aggregated_data?.['Acceleration(m/s^2)'] || 'N/A'} m/s²\r\n      - Braking Intensity: ${aggregated_data?.['Braking_Intensity'] || 'N/A'}\r\n      - Heading Change: ${aggregated_data?.['Heading_Change(degrees)'] || 'N/A'} degrees\r\n      - Jerk: ${aggregated_data?.['Jerk(m/s^3)'] || 'N/A'} m/s³\r\n      - SASV: ${aggregated_data?.['SASV'] || 'N/A'}\r\n      - Speed (km/h): ${aggregated_data?.['Speed(km/h)'] || 'N/A'} km/h\r\n      - Speed Violation: ${aggregated_data?.['Speed_Violation'] || 'N/A'}\r\n    `;\r\n  };\r\n\r\n  return (\r\n    <div className=\"daily-score-popup\">\r\n      <button className=\"close-button\" onClick={closePopup}>Close</button>\r\n\r\n      {/* Display loading state */}\r\n      {loading && <p>Loading daily data...</p>}\r\n\r\n      {/* Display error message */}\r\n      {error && <p className=\"error\">{error}</p>}\r\n\r\n      {/* Display daily data in text format */}\r\n      {dailyData && (\r\n        <div>\r\n          <h3>Daily Driving Summary</h3>\r\n          <pre>{formatDataAsText(dailyData)}</pre> {/* Display formatted data as text */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DailyScorePopup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}