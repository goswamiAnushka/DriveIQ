{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anush\\\\OneDrive\\\\Desktop\\\\minor project\\\\DriveIQ\\\\DriveIQ\\\\DriveIQ-PWA\\\\src\\\\components\\\\Dashboard\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2'; // Import Bar for distribution chart\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport api from '../../utils/api';\nimport { smartGpsTracking, generateSimulatedRoute } from '../../utils/geolocation';\nimport BatchProcessing from '../BatchProcessing/BatchProcessing';\nimport './Dashboard.scss';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend);\n\n// Define custom marker icon\nconst customIcon = new L.Icon({\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34]\n});\nconst Dashboard = () => {\n  _s();\n  const [gpsData, setGpsData] = useState([]);\n  const [speedData, setSpeedData] = useState([]);\n  const [accelerationData, setAccelerationData] = useState([]);\n  const [jerkData, setJerkData] = useState([]);\n  const [brakingData, setBrakingData] = useState([]);\n  const [route, setRoute] = useState([]);\n  const [markers, setMarkers] = useState([]);\n  const [isTracking, setIsTracking] = useState(false);\n  const [error, setError] = useState(null);\n  const [dailyData, setDailyData] = useState(null); // New state for daily data\n\n  const cleanValue = value => isNaN(value) ? 'N/A' : value;\n  useEffect(() => {\n    if (dailyData) {\n      console.log('Rendering Daily Data: ', dailyData);\n    }\n  }, [dailyData]);\n  const toggleTracking = () => {\n    if (isTracking) {\n      setIsTracking(false);\n    } else {\n      setIsTracking(true);\n      startTracking();\n    }\n  };\n  const startTracking = () => {\n    const simulatedBatches = generateSimulatedRoute(1, 5);\n    simulatedBatches.forEach((batch, index) => {\n      setTimeout(() => {\n        processBatch(batch).then(() => {\n          if (index === simulatedBatches.length - 1) {\n            processDailyData();\n          }\n        });\n      }, index * 5000);\n    });\n  };\n  const processBatch = async batch => {\n    const isMoving = smartGpsTracking(batch.gps_data, gpsData);\n    if (isMoving) {\n      try {\n        const driver_id = localStorage.getItem('driver_id');\n        const response = await api.post('/record-telematics', {\n          driver_id,\n          gps_data: batch.gps_data\n        });\n        const features = response.data.features;\n        if (features) {\n          var _features$SpeedMS, _features$Acceleratio, _features$JerkMS, _features$Braking_Int;\n          const speed = (_features$SpeedMS = features['Speed(m/s)']) !== null && _features$SpeedMS !== void 0 ? _features$SpeedMS : 0;\n          const acceleration = (_features$Acceleratio = features['Acceleration(m/s^2)']) !== null && _features$Acceleratio !== void 0 ? _features$Acceleratio : 0;\n          const jerk = (_features$JerkMS = features['Jerk(m/s^3)']) !== null && _features$JerkMS !== void 0 ? _features$JerkMS : 0;\n          const brakingIntensity = (_features$Braking_Int = features['Braking_Intensity']) !== null && _features$Braking_Int !== void 0 ? _features$Braking_Int : 0;\n          setSpeedData(prevData => [...prevData, speed]);\n          setAccelerationData(prevData => [...prevData, acceleration]);\n          setJerkData(prevData => [...prevData, jerk]);\n          setBrakingData(prevData => [...prevData, brakingIntensity]);\n          setGpsData(prevData => [...prevData, ...batch.gps_data]);\n          const lastPoint = batch.gps_data[batch.gps_data.length - 1];\n          setMarkers(prevMarkers => [...prevMarkers, {\n            lat: lastPoint.Latitude,\n            lng: lastPoint.Longitude\n          }]);\n          setRoute(prevRoute => [...prevRoute, ...batch.gps_data.map(point => [point.Latitude, point.Longitude])]);\n        } else {\n          console.error('Error: Features object is undefined or missing keys');\n        }\n      } catch (error) {\n        console.error('Error recording telematics data:', error);\n        setError('Error processing GPS data. Please try again.');\n      }\n    }\n  };\n  const processDailyData = async () => {\n    try {\n      const driver_id = localStorage.getItem('driver_id');\n      const response = await api.post('/process-daily-data', {\n        driver_id\n      });\n      console.log('Daily Data Response:', response.data);\n      setDailyData(response.data);\n    } catch (error) {\n      console.error('Error processing daily data:', error);\n    }\n  };\n  const renderChart = (label, data, borderColor) => {\n    const chartLabels = data.map((_, index) => `Batch ${index + 1}`);\n    return /*#__PURE__*/_jsxDEV(Line, {\n      data: {\n        labels: chartLabels,\n        datasets: [{\n          label: label,\n          data: data,\n          borderColor: borderColor,\n          fill: false,\n          pointBackgroundColor: '#fff',\n          pointBorderColor: borderColor,\n          pointHoverRadius: 6,\n          pointHoverBackgroundColor: borderColor\n        }]\n      },\n      options: {\n        responsive: true,\n        scales: {\n          y: {\n            beginAtZero: true,\n            ticks: {\n              stepSize: 2,\n              color: '#333',\n              // Make ticks visible\n              font: {\n                size: 14\n              }\n            },\n            grid: {\n              color: \"rgba(0, 0, 0, 0.1)\",\n              // Ensure grid lines are visible\n              drawBorder: true // Ensure y-axis border is visible\n            }\n          },\n          x: {\n            ticks: {\n              color: '#333',\n              // Make ticks visible\n              font: {\n                size: 14\n              }\n            },\n            grid: {\n              color: \"rgba(0, 0, 0, 0.1)\",\n              // Ensure grid lines are visible\n              drawBorder: true // Ensure x-axis border is visible\n            }\n          }\n        },\n        plugins: {\n          tooltip: {\n            backgroundColor: '#1abc9c',\n            titleFont: {\n              size: 16\n            },\n            bodyFont: {\n              size: 14\n            },\n            callbacks: {\n              label: function (context) {\n                return `${context.dataset.label}: ${context.parsed.y}`;\n              }\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this);\n  };\n  const renderDistributionGraph = () => {\n    if (!dailyData || !dailyData.aggregated_data) return null;\n    const labels = ['Speed(m/s)', 'Acceleration(m/s^2)', 'Jerk(m/s^3)', 'Braking Intensity'];\n    const data = [cleanValue(dailyData.aggregated_data['Speed(m/s)']), cleanValue(dailyData.aggregated_data['Acceleration(m/s^2)']), cleanValue(dailyData.aggregated_data['Jerk(m/s^3)']), cleanValue(dailyData.aggregated_data['Braking_Intensity'])];\n    const chartData = {\n      labels,\n      datasets: [{\n        label: 'Daily Feature Distribution',\n        backgroundColor: 'rgba(52, 152, 219, 0.6)',\n        borderColor: '#2980b9',\n        borderWidth: 2,\n        hoverBackgroundColor: 'rgba(52, 152, 219, 0.8)',\n        hoverBorderColor: '#1c6381',\n        data\n      }]\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"distribution-chart-container\",\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: {\n          responsive: true,\n          scales: {\n            y: {\n              beginAtZero: true,\n              ticks: {\n                stepSize: 1,\n                color: '#333',\n                // Make ticks visible\n                font: {\n                  size: 14\n                }\n              },\n              grid: {\n                color: \"rgba(0, 0, 0, 0.1)\",\n                // Ensure grid lines are visible\n                drawBorder: true // Ensure y-axis border is visible\n              }\n            },\n            x: {\n              ticks: {\n                color: '#333',\n                // Make ticks visible\n                font: {\n                  size: 14\n                }\n              },\n              grid: {\n                color: \"rgba(0, 0, 0, 0.1)\",\n                // Ensure grid lines are visible\n                drawBorder: true // Ensure x-axis border is visible\n              }\n            }\n          },\n          plugins: {\n            tooltip: {\n              backgroundColor: '#3498db',\n              titleFont: {\n                size: 16\n              },\n              bodyFont: {\n                size: 14\n              }\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Driver Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tracking-controls\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleTracking,\n        children: isTracking ? 'Stop Tracking' : 'Start Tracking'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manual-process-controls\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: processDailyData,\n        children: \"Process Daily Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Route Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [26.6337, 92.7926],\n        zoom: 13,\n        scrollWheelZoom: false,\n        className: \"map-container\",\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 OpenStreetMap contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n          positions: route,\n          color: \"blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), markers.map((marker, idx) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: [marker.lat, marker.lng],\n          icon: customIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [\"Latitude: \", marker.lat, \", Longitude: \", marker.lng]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Driving Feature Fluctuations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [renderChart('Speed (m/s)', speedData, 'rgba(75, 192, 192, 1)'), renderChart('Acceleration (m/s²)', accelerationData, 'rgba(255, 99, 132, 1)'), renderChart('Jerk (m/s³)', jerkData, 'rgba(54, 162, 235, 1)'), renderChart('Braking Intensity', brakingData, 'rgba(153, 102, 255, 1)')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), renderDistributionGraph(), dailyData ? dailyData.aggregated_data ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daily-data-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Daily Driving Performance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Driving Score: \", dailyData.driving_score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Driving Category: \", dailyData.driving_category]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Trips: \", dailyData.total_trips]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Distance Covered: \", dailyData.total_distance_covered_km, \" km\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"aggregated-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Average Speed: \", cleanValue(dailyData.aggregated_data['Speed(m/s)']), \" m/s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Average Acceleration: \", cleanValue(dailyData.aggregated_data['Acceleration(m/s^2)']), \" m/s\\xB2\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Average Jerk: \", cleanValue(dailyData.aggregated_data['Jerk(m/s^3)']), \" m/s\\xB3\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Average Braking Intensity: \", cleanValue(dailyData.aggregated_data['Braking_Intensity'])]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Aggregated data is missing.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No daily data available yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(BatchProcessing, {\n      gpsData: gpsData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"wuQEwA7U0balDwR8f8zad+niK8E=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Line","Bar","MapContainer","TileLayer","Marker","Popup","Polyline","L","api","smartGpsTracking","generateSimulatedRoute","BatchProcessing","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","customIcon","Icon","iconUrl","require","iconSize","iconAnchor","popupAnchor","Dashboard","_s","gpsData","setGpsData","speedData","setSpeedData","accelerationData","setAccelerationData","jerkData","setJerkData","brakingData","setBrakingData","route","setRoute","markers","setMarkers","isTracking","setIsTracking","error","setError","dailyData","setDailyData","cleanValue","value","isNaN","console","log","toggleTracking","startTracking","simulatedBatches","forEach","batch","index","setTimeout","processBatch","then","length","processDailyData","isMoving","gps_data","driver_id","localStorage","getItem","response","post","features","data","_features$SpeedMS","_features$Acceleratio","_features$JerkMS","_features$Braking_Int","speed","acceleration","jerk","brakingIntensity","prevData","lastPoint","prevMarkers","lat","Latitude","lng","Longitude","prevRoute","map","point","renderChart","label","borderColor","chartLabels","_","labels","datasets","fill","pointBackgroundColor","pointBorderColor","pointHoverRadius","pointHoverBackgroundColor","options","responsive","scales","y","beginAtZero","ticks","stepSize","color","font","size","grid","drawBorder","x","plugins","tooltip","backgroundColor","titleFont","bodyFont","callbacks","context","dataset","parsed","fileName","_jsxFileName","lineNumber","columnNumber","renderDistributionGraph","aggregated_data","chartData","borderWidth","hoverBackgroundColor","hoverBorderColor","className","children","onClick","center","zoom","scrollWheelZoom","url","attribution","positions","marker","idx","position","icon","driving_score","driving_category","total_trips","total_distance_covered_km","_c","$RefreshReg$"],"sources":["C:/Users/anush/OneDrive/Desktop/minor project/DriveIQ/DriveIQ/DriveIQ-PWA/src/components/Dashboard/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';  // Import Bar for distribution chart\r\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\nimport api from '../../utils/api';\r\nimport { smartGpsTracking, generateSimulatedRoute } from '../../utils/geolocation';\r\nimport BatchProcessing from '../BatchProcessing/BatchProcessing';\r\nimport './Dashboard.scss';\r\n\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend);\r\n\r\n// Define custom marker icon\r\nconst customIcon = new L.Icon({\r\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n  iconSize: [25, 41],\r\n  iconAnchor: [12, 41],\r\n  popupAnchor: [1, -34],\r\n});\r\n\r\nconst Dashboard = () => {\r\n  const [gpsData, setGpsData] = useState([]);\r\n  const [speedData, setSpeedData] = useState([]);\r\n  const [accelerationData, setAccelerationData] = useState([]);\r\n  const [jerkData, setJerkData] = useState([]);\r\n  const [brakingData, setBrakingData] = useState([]);\r\n  const [route, setRoute] = useState([]);\r\n  const [markers, setMarkers] = useState([]);\r\n  const [isTracking, setIsTracking] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [dailyData, setDailyData] = useState(null); // New state for daily data\r\n\r\n  const cleanValue = (value) => (isNaN(value) ? 'N/A' : value);\r\n\r\n  useEffect(() => {\r\n    if (dailyData) {\r\n      console.log('Rendering Daily Data: ', dailyData);\r\n    }\r\n  }, [dailyData]);\r\n\r\n  const toggleTracking = () => {\r\n    if (isTracking) {\r\n      setIsTracking(false);\r\n    } else {\r\n      setIsTracking(true);\r\n      startTracking();\r\n    }\r\n  };\r\n\r\n  const startTracking = () => {\r\n    const simulatedBatches = generateSimulatedRoute(1, 5);\r\n    simulatedBatches.forEach((batch, index) => {\r\n      setTimeout(() => {\r\n        processBatch(batch).then(() => {\r\n          if (index === simulatedBatches.length - 1) {\r\n            processDailyData();\r\n          }\r\n        });\r\n      }, index * 5000);\r\n    });\r\n  };\r\n\r\n  const processBatch = async (batch) => {\r\n    const isMoving = smartGpsTracking(batch.gps_data, gpsData);\r\n    if (isMoving) {\r\n      try {\r\n        const driver_id = localStorage.getItem('driver_id');\r\n        const response = await api.post('/record-telematics', {\r\n          driver_id,\r\n          gps_data: batch.gps_data,\r\n        });\r\n\r\n        const features = response.data.features;\r\n        if (features) {\r\n          const speed = features['Speed(m/s)'] ?? 0;\r\n          const acceleration = features['Acceleration(m/s^2)'] ?? 0;\r\n          const jerk = features['Jerk(m/s^3)'] ?? 0;\r\n          const brakingIntensity = features['Braking_Intensity'] ?? 0;\r\n\r\n          setSpeedData((prevData) => [...prevData, speed]);\r\n          setAccelerationData((prevData) => [...prevData, acceleration]);\r\n          setJerkData((prevData) => [...prevData, jerk]);\r\n          setBrakingData((prevData) => [...prevData, brakingIntensity]);\r\n\r\n          setGpsData((prevData) => [...prevData, ...batch.gps_data]);\r\n\r\n          const lastPoint = batch.gps_data[batch.gps_data.length - 1];\r\n          setMarkers((prevMarkers) => [\r\n            ...prevMarkers,\r\n            { lat: lastPoint.Latitude, lng: lastPoint.Longitude },\r\n          ]);\r\n\r\n          setRoute((prevRoute) => [\r\n            ...prevRoute,\r\n            ...batch.gps_data.map((point) => [point.Latitude, point.Longitude]),\r\n          ]);\r\n        } else {\r\n          console.error('Error: Features object is undefined or missing keys');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error recording telematics data:', error);\r\n        setError('Error processing GPS data. Please try again.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const processDailyData = async () => {\r\n    try {\r\n      const driver_id = localStorage.getItem('driver_id');\r\n      const response = await api.post('/process-daily-data', { driver_id });\r\n\r\n      console.log('Daily Data Response:', response.data);\r\n      setDailyData(response.data);\r\n    } catch (error) {\r\n      console.error('Error processing daily data:', error);\r\n    }\r\n  };\r\n\r\n  const renderChart = (label, data, borderColor) => {\r\n    const chartLabels = data.map((_, index) => `Batch ${index + 1}`);\r\n    return (\r\n      <Line\r\n        data={{\r\n          labels: chartLabels,\r\n          datasets: [\r\n            {\r\n              label: label,\r\n              data: data,\r\n              borderColor: borderColor,\r\n              fill: false,\r\n              pointBackgroundColor: '#fff',\r\n              pointBorderColor: borderColor,\r\n              pointHoverRadius: 6,\r\n              pointHoverBackgroundColor: borderColor,\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          responsive: true,\r\n          scales: {\r\n            y: {\r\n              beginAtZero: true,\r\n              ticks: {\r\n                stepSize: 2,\r\n                color: '#333', // Make ticks visible\r\n                font: {\r\n                  size: 14\r\n                }\r\n              },\r\n              grid: {\r\n                color: \"rgba(0, 0, 0, 0.1)\", // Ensure grid lines are visible\r\n                drawBorder: true, // Ensure y-axis border is visible\r\n              }\r\n            },\r\n            x: {\r\n              ticks: {\r\n                color: '#333', // Make ticks visible\r\n                font: {\r\n                  size: 14\r\n                }\r\n              },\r\n              grid: {\r\n                color: \"rgba(0, 0, 0, 0.1)\", // Ensure grid lines are visible\r\n                drawBorder: true, // Ensure x-axis border is visible\r\n              }\r\n            }\r\n          },\r\n          plugins: {\r\n            tooltip: {\r\n              backgroundColor: '#1abc9c',\r\n              titleFont: { size: 16 },\r\n              bodyFont: { size: 14 },\r\n              callbacks: {\r\n                label: function (context) {\r\n                  return `${context.dataset.label}: ${context.parsed.y}`;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderDistributionGraph = () => {\r\n    if (!dailyData || !dailyData.aggregated_data) return null;\r\n\r\n    const labels = ['Speed(m/s)', 'Acceleration(m/s^2)', 'Jerk(m/s^3)', 'Braking Intensity'];\r\n    const data = [\r\n      cleanValue(dailyData.aggregated_data['Speed(m/s)']),\r\n      cleanValue(dailyData.aggregated_data['Acceleration(m/s^2)']),\r\n      cleanValue(dailyData.aggregated_data['Jerk(m/s^3)']),\r\n      cleanValue(dailyData.aggregated_data['Braking_Intensity'])\r\n    ];\r\n\r\n    const chartData = {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: 'Daily Feature Distribution',\r\n          backgroundColor: 'rgba(52, 152, 219, 0.6)',\r\n          borderColor: '#2980b9',\r\n          borderWidth: 2,\r\n          hoverBackgroundColor: 'rgba(52, 152, 219, 0.8)',\r\n          hoverBorderColor: '#1c6381',\r\n          data\r\n        }\r\n      ]\r\n    };\r\n\r\n    return (\r\n      <div className=\"distribution-chart-container\">\r\n        <Bar\r\n          data={chartData}\r\n          options={{\r\n            responsive: true,\r\n            scales: {\r\n              y: {\r\n                beginAtZero: true,\r\n                ticks: {\r\n                  stepSize: 1,\r\n                  color: '#333', // Make ticks visible\r\n                  font: {\r\n                    size: 14\r\n                  }\r\n                },\r\n                grid: {\r\n                  color: \"rgba(0, 0, 0, 0.1)\", // Ensure grid lines are visible\r\n                  drawBorder: true, // Ensure y-axis border is visible\r\n                }\r\n              },\r\n              x: {\r\n                ticks: {\r\n                  color: '#333', // Make ticks visible\r\n                  font: {\r\n                    size: 14\r\n                  }\r\n                },\r\n                grid: {\r\n                  color: \"rgba(0, 0, 0, 0.1)\", // Ensure grid lines are visible\r\n                  drawBorder: true, // Ensure x-axis border is visible\r\n                }\r\n              }\r\n            },\r\n            plugins: {\r\n              tooltip: {\r\n                backgroundColor: '#3498db',\r\n                titleFont: { size: 16 },\r\n                bodyFont: { size: 14 },\r\n              }\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Driver Dashboard</h2>\r\n\r\n      <div className=\"tracking-controls\">\r\n        <button onClick={toggleTracking}>\r\n          {isTracking ? 'Stop Tracking' : 'Start Tracking'}\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"manual-process-controls\">\r\n        <button onClick={processDailyData}>Process Daily Data</button>\r\n      </div>\r\n\r\n      {/* Map Section */}\r\n      <div className=\"map-section\">\r\n        <h3>Route Map</h3>\r\n        <MapContainer center={[26.6337, 92.7926]} zoom={13} scrollWheelZoom={false} className=\"map-container\">\r\n          <TileLayer\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            attribution=\"&copy; OpenStreetMap contributors\"\r\n          />\r\n          <Polyline positions={route} color=\"blue\" />\r\n\r\n          {markers.map((marker, idx) => (\r\n            <Marker key={idx} position={[marker.lat, marker.lng]} icon={customIcon}>\r\n              <Popup>\r\n                Latitude: {marker.lat}, Longitude: {marker.lng}\r\n              </Popup>\r\n            </Marker>\r\n          ))}\r\n        </MapContainer>\r\n      </div>\r\n\r\n      {/* Charts Section */}\r\n      <div className=\"chart-section\">\r\n        <h3>Driving Feature Fluctuations</h3>\r\n        <div className=\"chart-container\">\r\n          {renderChart('Speed (m/s)', speedData, 'rgba(75, 192, 192, 1)')}\r\n          {renderChart('Acceleration (m/s²)', accelerationData, 'rgba(255, 99, 132, 1)')}\r\n          {renderChart('Jerk (m/s³)', jerkData, 'rgba(54, 162, 235, 1)')}\r\n          {renderChart('Braking Intensity', brakingData, 'rgba(153, 102, 255, 1)')}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Distribution Graph for daily data */}\r\n      {renderDistributionGraph()}\r\n\r\n      {/* Display Daily Data */}\r\n      {dailyData ? (\r\n        dailyData.aggregated_data ? (\r\n          <div className=\"daily-data-section\">\r\n            <h3>Daily Driving Performance</h3>\r\n            <p>Driving Score: {dailyData.driving_score}</p>\r\n            <p>Driving Category: {dailyData.driving_category}</p>\r\n            <p>Total Trips: {dailyData.total_trips}</p>\r\n            <p>Total Distance Covered: {dailyData.total_distance_covered_km} km</p>\r\n            <div className=\"aggregated-data\">\r\n              <p>Average Speed: {cleanValue(dailyData.aggregated_data['Speed(m/s)'])} m/s</p>\r\n              <p>Average Acceleration: {cleanValue(dailyData.aggregated_data['Acceleration(m/s^2)'])} m/s²</p>\r\n              <p>Average Jerk: {cleanValue(dailyData.aggregated_data['Jerk(m/s^3)'])} m/s³</p>\r\n              <p>Average Braking Intensity: {cleanValue(dailyData.aggregated_data['Braking_Intensity'])}</p>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <p>Aggregated data is missing.</p>\r\n        )\r\n      ) : (\r\n        <p>No daily data available yet.</p>\r\n      )}\r\n\r\n      {/* Batch Processing Section */}\r\n      <BatchProcessing gpsData={gpsData} />\r\n\r\n      {/* Error Message */}\r\n      {error && <div className=\"error\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}