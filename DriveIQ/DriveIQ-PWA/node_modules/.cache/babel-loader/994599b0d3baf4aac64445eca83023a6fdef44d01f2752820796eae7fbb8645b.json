{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anush\\\\OneDrive\\\\Desktop\\\\minor project\\\\DriveIQ\\\\DriveIQ\\\\DriveIQ-PWA\\\\src\\\\components\\\\Dashboard\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\n// src/components/Dashboard/Dashboard.jsx\nimport React, { useState, useEffect } from 'react';\nimport MapView from '../MapView/MapView';\nimport PerformanceGraph from '../PerformanceGraph/PerformanceGraph';\nimport DailyScorePopup from '../DailyScorePopup/DailyScorePopup';\nimport { mockGPSData, trackRealTimeGPS } from '../../utils/geolocation';\nimport api from '../../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [gpsData, setGpsData] = useState([]); // Stores GPS data\n  const [showDailyPopup, setShowDailyPopup] = useState(false); // Daily summary popup\n  const [dailyData, setDailyData] = useState(null); // Daily summary data\n  const [isRealTime, setIsRealTime] = useState(false); // Toggle between mock and real-time GPS\n\n  // Retrieve driver_id from localStorage (after login)\n  const driverId = localStorage.getItem('driver_id');\n\n  // Fetch GPS data (mock or real-time)\n  useEffect(() => {\n    if (driverId) {\n      if (isRealTime) {\n        trackRealTimeGPS(setGpsData, driverId); // Real-time tracking\n      } else {\n        mockGPSData(setGpsData, driverId); // Mock GPS data\n      }\n    }\n  }, [driverId, isRealTime]);\n\n  // Process daily summary data automatically at midnight\n  useEffect(() => {\n    const processDailyDataAtMidnight = () => {\n      const now = new Date();\n      const timeUntilMidnight = new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1, 0, 0, 0, 0) - now;\n\n      // Set a timeout to fetch data at midnight\n      setTimeout(() => {\n        fetchDailyData();\n      }, timeUntilMidnight);\n    };\n\n    // Function to call daily summary API\n    const fetchDailyData = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await api.post('/process-daily-data', {\n          driver_id: driverId\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setDailyData(response.data);\n        setShowDailyPopup(true); // Show the daily summary popup\n      } catch (error) {\n        console.error('Error fetching daily data:', error);\n      }\n    };\n    processDailyDataAtMidnight();\n  }, [driverId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Driver Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toggle-mode\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Real-Time Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: isRealTime,\n        onChange: e => setIsRealTime(e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapView, {\n      gpsData: gpsData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PerformanceGraph, {\n      gpsData: gpsData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), showDailyPopup && dailyData && /*#__PURE__*/_jsxDEV(DailyScorePopup, {\n      data: dailyData,\n      onClose: () => setShowDailyPopup(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"VBLF3k5whOB/AEGdLUy4vmE8Ktg=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","MapView","PerformanceGraph","DailyScorePopup","mockGPSData","trackRealTimeGPS","api","jsxDEV","_jsxDEV","Dashboard","_s","gpsData","setGpsData","showDailyPopup","setShowDailyPopup","dailyData","setDailyData","isRealTime","setIsRealTime","driverId","localStorage","getItem","processDailyDataAtMidnight","now","Date","timeUntilMidnight","getFullYear","getMonth","getDate","setTimeout","fetchDailyData","token","response","post","driver_id","headers","Authorization","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","e","target","onClose","_c","$RefreshReg$"],"sources":["C:/Users/anush/OneDrive/Desktop/minor project/DriveIQ/DriveIQ/DriveIQ-PWA/src/components/Dashboard/Dashboard.jsx"],"sourcesContent":["// src/components/Dashboard/Dashboard.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport MapView from '../MapView/MapView';\r\nimport PerformanceGraph from '../PerformanceGraph/PerformanceGraph';\r\nimport DailyScorePopup from '../DailyScorePopup/DailyScorePopup';\r\nimport { mockGPSData, trackRealTimeGPS } from '../../utils/geolocation';\r\nimport api from '../../utils/api';\r\n\r\nconst Dashboard = () => {\r\n  const [gpsData, setGpsData] = useState([]);  // Stores GPS data\r\n  const [showDailyPopup, setShowDailyPopup] = useState(false);  // Daily summary popup\r\n  const [dailyData, setDailyData] = useState(null);  // Daily summary data\r\n  const [isRealTime, setIsRealTime] = useState(false);  // Toggle between mock and real-time GPS\r\n\r\n  // Retrieve driver_id from localStorage (after login)\r\n  const driverId = localStorage.getItem('driver_id');\r\n\r\n  // Fetch GPS data (mock or real-time)\r\n  useEffect(() => {\r\n    if (driverId) {\r\n      if (isRealTime) {\r\n        trackRealTimeGPS(setGpsData, driverId);  // Real-time tracking\r\n      } else {\r\n        mockGPSData(setGpsData, driverId);  // Mock GPS data\r\n      }\r\n    }\r\n  }, [driverId, isRealTime]);\r\n\r\n  // Process daily summary data automatically at midnight\r\n  useEffect(() => {\r\n    const processDailyDataAtMidnight = () => {\r\n      const now = new Date();\r\n      const timeUntilMidnight = new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1, 0, 0, 0, 0) - now;\r\n\r\n      // Set a timeout to fetch data at midnight\r\n      setTimeout(() => {\r\n        fetchDailyData();\r\n      }, timeUntilMidnight);\r\n    };\r\n\r\n    // Function to call daily summary API\r\n    const fetchDailyData = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await api.post('/process-daily-data', {\r\n          driver_id: driverId\r\n        }, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n\r\n        setDailyData(response.data);\r\n        setShowDailyPopup(true);  // Show the daily summary popup\r\n      } catch (error) {\r\n        console.error('Error fetching daily data:', error);\r\n      }\r\n    };\r\n\r\n    processDailyDataAtMidnight();\r\n  }, [driverId]);\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h2>Driver Dashboard</h2>\r\n      <div className=\"toggle-mode\">\r\n        <label>Real-Time Mode</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={isRealTime}\r\n          onChange={(e) => setIsRealTime(e.target.checked)}\r\n        />\r\n      </div>\r\n      <MapView gpsData={gpsData} />\r\n      <PerformanceGraph gpsData={gpsData} />\r\n      {showDailyPopup && dailyData && (\r\n        <DailyScorePopup data={dailyData} onClose={() => setShowDailyPopup(false)} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}