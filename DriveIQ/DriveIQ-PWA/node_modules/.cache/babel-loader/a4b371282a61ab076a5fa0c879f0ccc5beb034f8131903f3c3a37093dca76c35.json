{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anush\\\\OneDrive\\\\Desktop\\\\minor project\\\\DriveIQ\\\\DriveIQ\\\\DriveIQ-PWA\\\\src\\\\components\\\\Dashboard\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport api from '../../utils/api';\nimport { smartGpsTracking, generateSimulatedRoute } from '../../utils/geolocation';\nimport BatchProcessing from '../BatchProcessing/BatchProcessing';\nimport './Dashboard.scss';\n\n// Register Chart.js components\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\n// Define custom marker icon\nconst customIcon = new L.Icon({\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34]\n});\nconst Dashboard = () => {\n  _s();\n  const [gpsData, setGpsData] = useState([]);\n  const [speedData, setSpeedData] = useState([]);\n  const [accelerationData, setAccelerationData] = useState([]);\n  const [jerkData, setJerkData] = useState([]);\n  const [brakingData, setBrakingData] = useState([]);\n  const [route, setRoute] = useState([]);\n  const [markers, setMarkers] = useState([]);\n  const [isTracking, setIsTracking] = useState(false);\n  const [dailyData, setDailyData] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Function to process daily data\n  const processDailyData = async () => {\n    try {\n      const driver_id = localStorage.getItem('driver_id');\n      const response = await api.post('/process-daily-data', {\n        driver_id\n      });\n      setDailyData(response.data);\n    } catch (error) {\n      console.error('Error fetching daily data:', error);\n      setError('Error processing daily data.');\n    }\n  };\n  const toggleTracking = () => {\n    setIsTracking(!isTracking);\n    if (!isTracking) startTracking();\n  };\n  const startTracking = () => {\n    const simulatedBatches = generateSimulatedRoute(1, 5); // Generates 5 batches of GPS data\n    simulatedBatches.forEach((batch, index) => {\n      setTimeout(() => processBatch(batch), index * 5000);\n    });\n  };\n  const processBatch = async batch => {\n    const isMoving = smartGpsTracking(batch.gps_data, gpsData);\n    if (isMoving) {\n      try {\n        const driver_id = localStorage.getItem('driver_id');\n        const response = await api.post('/record-telematics', {\n          driver_id,\n          gps_data: batch.gps_data\n        });\n        const features = response.data.features;\n        if (features) {\n          var _ref, _features$Acceleratio, _features$JerkMS, _features$Braking_Int;\n          const speed = (_ref = features['Speed(m/s)'] * 3.6) !== null && _ref !== void 0 ? _ref : 0; // Convert m/s to km/h\n          const acceleration = (_features$Acceleratio = features['Acceleration(m/s^2)']) !== null && _features$Acceleratio !== void 0 ? _features$Acceleratio : 0;\n          const jerk = (_features$JerkMS = features['Jerk(m/s^3)']) !== null && _features$JerkMS !== void 0 ? _features$JerkMS : 0;\n          const brakingIntensity = (_features$Braking_Int = features['Braking_Intensity']) !== null && _features$Braking_Int !== void 0 ? _features$Braking_Int : 0;\n\n          // Store the speed in km/h and other metrics\n          setSpeedData(prevData => [...prevData, speed]);\n          setAccelerationData(prevData => [...prevData, acceleration]);\n          setJerkData(prevData => [...prevData, jerk]);\n          setBrakingData(prevData => [...prevData, brakingIntensity]);\n\n          // Update GPS data and route points\n          setGpsData(prevData => [...prevData, ...batch.gps_data]);\n          const lastPoint = batch.gps_data[batch.gps_data.length - 1];\n          setMarkers(prevMarkers => [...prevMarkers, {\n            lat: lastPoint.Latitude,\n            lng: lastPoint.Longitude\n          }]);\n          setRoute(prevRoute => [...prevRoute, ...batch.gps_data.map(point => [point.Latitude, point.Longitude])]);\n        }\n      } catch (error) {\n        console.error('Error recording telematics data:', error);\n        setError('Error processing GPS data. Please try again.');\n      }\n    }\n  };\n  const renderChart = (label, data, borderColor) => {\n    const chartLabels = data.map((_, index) => `Batch ${index + 1}`);\n    return /*#__PURE__*/_jsxDEV(Line, {\n      data: {\n        labels: chartLabels,\n        datasets: [{\n          label: `${label} (km/h)`,\n          // Display speed in km/h\n          data: data,\n          borderColor: borderColor,\n          fill: true,\n          backgroundColor: 'rgba(52, 152, 219, 0.1)',\n          // Light background for the line\n          pointRadius: 5,\n          pointBackgroundColor: '#fff',\n          pointBorderColor: borderColor,\n          pointHoverRadius: 7\n        }]\n      },\n      options: {\n        elements: {\n          line: {\n            tension: 0.4 // Curved lines for smoothness\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Driver Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tracking-controls\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleTracking,\n        children: isTracking ? 'Stop Tracking' : 'Start Tracking'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Route Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [26.6337, 92.7926],\n        zoom: 13,\n        scrollWheelZoom: false,\n        className: \"map-container\",\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 OpenStreetMap contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n          positions: route,\n          color: \"blue\",\n          weight: 5,\n          dashArray: [10, 20],\n          lineJoin: \"round\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), markers.map((marker, idx) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: [marker.lat, marker.lng],\n          icon: customIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [\"Latitude: \", marker.lat, \", Longitude: \", marker.lng]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Driving Feature Fluctuations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [renderChart('Speed (km/h)', speedData, 'rgba(75, 192, 192, 1)'), renderChart('Acceleration (m/s²)', accelerationData, 'rgba(255, 99, 132, 1)'), renderChart('Jerk (m/s³)', jerkData, 'rgba(54, 162, 235, 1)'), renderChart('Braking Intensity', brakingData, 'rgba(153, 102, 255, 1)')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), dailyData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daily-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Daily Performance Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Distance Covered: \", dailyData.total_distance_covered_km, \" km\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Trips: \", dailyData.total_trips]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Driving Score: \", dailyData.driving_score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Driving Category: \", dailyData.driving_category]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [renderChart('Speed (km/h)', [dailyData.aggregated_data['Speed(km/h)']], 'rgba(75, 192, 192, 1)'), renderChart('Acceleration (m/s²)', [dailyData.aggregated_data['Acceleration(m/s^2)']], 'rgba(255, 99, 132, 1)'), renderChart('Jerk (m/s³)', [dailyData.aggregated_data['Jerk(m/s^3)']], 'rgba(54, 162, 235, 1)'), renderChart('Braking Intensity', [dailyData.aggregated_data['Braking_Intensity']], 'rgba(153, 102, 255, 1)')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(BatchProcessing, {\n      gpsData: gpsData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"Y6bpZVUdPUlYwdSipc41WfjjRpM=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Line","MapContainer","TileLayer","Marker","Popup","Polyline","L","api","smartGpsTracking","generateSimulatedRoute","BatchProcessing","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","customIcon","Icon","iconUrl","require","iconSize","iconAnchor","popupAnchor","Dashboard","_s","gpsData","setGpsData","speedData","setSpeedData","accelerationData","setAccelerationData","jerkData","setJerkData","brakingData","setBrakingData","route","setRoute","markers","setMarkers","isTracking","setIsTracking","dailyData","setDailyData","error","setError","processDailyData","driver_id","localStorage","getItem","response","post","data","console","toggleTracking","startTracking","simulatedBatches","forEach","batch","index","setTimeout","processBatch","isMoving","gps_data","features","_ref","_features$Acceleratio","_features$JerkMS","_features$Braking_Int","speed","acceleration","jerk","brakingIntensity","prevData","lastPoint","length","prevMarkers","lat","Latitude","lng","Longitude","prevRoute","map","point","renderChart","label","borderColor","chartLabels","_","labels","datasets","fill","backgroundColor","pointRadius","pointBackgroundColor","pointBorderColor","pointHoverRadius","options","elements","line","tension","scales","y","beginAtZero","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","center","zoom","scrollWheelZoom","url","attribution","positions","color","weight","dashArray","lineJoin","marker","idx","position","icon","total_distance_covered_km","total_trips","driving_score","driving_category","aggregated_data","_c","$RefreshReg$"],"sources":["C:/Users/anush/OneDrive/Desktop/minor project/DriveIQ/DriveIQ/DriveIQ-PWA/src/components/Dashboard/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\nimport api from '../../utils/api';\r\nimport { smartGpsTracking, generateSimulatedRoute } from '../../utils/geolocation';\r\nimport BatchProcessing from '../BatchProcessing/BatchProcessing';\r\nimport './Dashboard.scss';\r\n\r\n// Register Chart.js components\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\r\n\r\n// Define custom marker icon\r\nconst customIcon = new L.Icon({\r\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n  iconSize: [25, 41],\r\n  iconAnchor: [12, 41],\r\n  popupAnchor: [1, -34],\r\n});\r\n\r\nconst Dashboard = () => {\r\n  const [gpsData, setGpsData] = useState([]);\r\n  const [speedData, setSpeedData] = useState([]);\r\n  const [accelerationData, setAccelerationData] = useState([]);\r\n  const [jerkData, setJerkData] = useState([]);\r\n  const [brakingData, setBrakingData] = useState([]);\r\n  const [route, setRoute] = useState([]);\r\n  const [markers, setMarkers] = useState([]);\r\n  const [isTracking, setIsTracking] = useState(false);\r\n  const [dailyData, setDailyData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Function to process daily data\r\n  const processDailyData = async () => {\r\n    try {\r\n      const driver_id = localStorage.getItem('driver_id');\r\n      const response = await api.post('/process-daily-data', { driver_id });\r\n      setDailyData(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching daily data:', error);\r\n      setError('Error processing daily data.');\r\n    }\r\n  };\r\n\r\n  const toggleTracking = () => {\r\n    setIsTracking(!isTracking);\r\n    if (!isTracking) startTracking();\r\n  };\r\n\r\n  const startTracking = () => {\r\n    const simulatedBatches = generateSimulatedRoute(1, 5); // Generates 5 batches of GPS data\r\n    simulatedBatches.forEach((batch, index) => {\r\n      setTimeout(() => processBatch(batch), index * 5000);\r\n    });\r\n  };\r\n\r\n  const processBatch = async (batch) => {\r\n    const isMoving = smartGpsTracking(batch.gps_data, gpsData);\r\n    if (isMoving) {\r\n      try {\r\n        const driver_id = localStorage.getItem('driver_id');\r\n        const response = await api.post('/record-telematics', {\r\n          driver_id,\r\n          gps_data: batch.gps_data,\r\n        });\r\n\r\n        const features = response.data.features;\r\n        if (features) {\r\n          const speed = features['Speed(m/s)'] * 3.6 ?? 0; // Convert m/s to km/h\r\n          const acceleration = features['Acceleration(m/s^2)'] ?? 0;\r\n          const jerk = features['Jerk(m/s^3)'] ?? 0;\r\n          const brakingIntensity = features['Braking_Intensity'] ?? 0;\r\n\r\n          // Store the speed in km/h and other metrics\r\n          setSpeedData((prevData) => [...prevData, speed]);\r\n          setAccelerationData((prevData) => [...prevData, acceleration]);\r\n          setJerkData((prevData) => [...prevData, jerk]);\r\n          setBrakingData((prevData) => [...prevData, brakingIntensity]);\r\n\r\n          // Update GPS data and route points\r\n          setGpsData((prevData) => [...prevData, ...batch.gps_data]);\r\n\r\n          const lastPoint = batch.gps_data[batch.gps_data.length - 1];\r\n          setMarkers((prevMarkers) => [\r\n            ...prevMarkers,\r\n            { lat: lastPoint.Latitude, lng: lastPoint.Longitude },\r\n          ]);\r\n\r\n          setRoute((prevRoute) => [\r\n            ...prevRoute,\r\n            ...batch.gps_data.map((point) => [point.Latitude, point.Longitude]),\r\n          ]);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error recording telematics data:', error);\r\n        setError('Error processing GPS data. Please try again.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const renderChart = (label, data, borderColor) => {\r\n    const chartLabels = data.map((_, index) => `Batch ${index + 1}`);\r\n    return (\r\n      <Line\r\n        data={{\r\n          labels: chartLabels,\r\n          datasets: [\r\n            {\r\n              label: `${label} (km/h)`, // Display speed in km/h\r\n              data: data,\r\n              borderColor: borderColor,\r\n              fill: true,\r\n              backgroundColor: 'rgba(52, 152, 219, 0.1)', // Light background for the line\r\n              pointRadius: 5,\r\n              pointBackgroundColor: '#fff',\r\n              pointBorderColor: borderColor,\r\n              pointHoverRadius: 7,\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          elements: {\r\n            line: {\r\n              tension: 0.4, // Curved lines for smoothness\r\n            },\r\n          },\r\n          scales: {\r\n            y: {\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Driver Dashboard</h2>\r\n\r\n      <div className=\"tracking-controls\">\r\n        <button onClick={toggleTracking}>\r\n          {isTracking ? 'Stop Tracking' : 'Start Tracking'}\r\n        </button>\r\n      </div>\r\n\r\n      {/* Map Section */}\r\n      <div className=\"map-section\">\r\n        <h3>Route Map</h3>\r\n        <MapContainer center={[26.6337, 92.7926]} zoom={13} scrollWheelZoom={false} className=\"map-container\">\r\n          <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" attribution=\"&copy; OpenStreetMap contributors\" />\r\n          <Polyline positions={route} color=\"blue\" weight={5} dashArray={[10, 20]} lineJoin=\"round\" />\r\n          {markers.map((marker, idx) => (\r\n            <Marker key={idx} position={[marker.lat, marker.lng]} icon={customIcon}>\r\n              <Popup>Latitude: {marker.lat}, Longitude: {marker.lng}</Popup>\r\n            </Marker>\r\n          ))}\r\n        </MapContainer>\r\n      </div>\r\n\r\n      {/* Charts Section */}\r\n      <div className=\"chart-section\">\r\n        <h3>Driving Feature Fluctuations</h3>\r\n        <div className=\"chart-container\">\r\n          {renderChart('Speed (km/h)', speedData, 'rgba(75, 192, 192, 1)')}\r\n          {renderChart('Acceleration (m/s²)', accelerationData, 'rgba(255, 99, 132, 1)')}\r\n          {renderChart('Jerk (m/s³)', jerkData, 'rgba(54, 162, 235, 1)')}\r\n          {renderChart('Braking Intensity', brakingData, 'rgba(153, 102, 255, 1)')}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Daily Data Section */}\r\n      {dailyData && (\r\n        <div className=\"daily-summary\">\r\n          <h3>Daily Performance Summary</h3>\r\n          <p>Total Distance Covered: {dailyData.total_distance_covered_km} km</p>\r\n          <p>Total Trips: {dailyData.total_trips}</p>\r\n          <p>Driving Score: {dailyData.driving_score}</p>\r\n          <p>Driving Category: {dailyData.driving_category}</p>\r\n\r\n          <div className=\"chart-container\">\r\n            {renderChart('Speed (km/h)', [dailyData.aggregated_data['Speed(km/h)']], 'rgba(75, 192, 192, 1)')}\r\n            {renderChart('Acceleration (m/s²)', [dailyData.aggregated_data['Acceleration(m/s^2)']], 'rgba(255, 99, 132, 1)')}\r\n            {renderChart('Jerk (m/s³)', [dailyData.aggregated_data['Jerk(m/s^3)']], 'rgba(54, 162, 235, 1)')}\r\n            {renderChart('Braking Intensity', [dailyData.aggregated_data['Braking_Intensity']], 'rgba(153, 102, 255, 1)')}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Error Message */}\r\n      {error && <div className=\"error\">{error}</div>}\r\n\r\n      {/* Batch Processing Section */}\r\n      <BatchProcessing gpsData={gpsData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,eAAe;AAChF,OAAO,0BAA0B;AACjC,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAOC,GAAG,MAAM,iBAAiB;AACjC,SAASC,gBAAgB,EAAEC,sBAAsB,QAAQ,yBAAyB;AAClF,OAAOC,eAAe,MAAM,oCAAoC;AAChE,OAAO,kBAAkB;;AAEzB;AACA,SAASC,KAAK,IAAIC,OAAO,EAAEC,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC3HT,OAAO,CAACU,QAAQ,CAACT,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;;AAE/F;AACA,MAAMI,UAAU,GAAG,IAAIjB,CAAC,CAACkB,IAAI,CAAC;EAC5BC,OAAO,EAAEC,OAAO,CAAC,qCAAqC,CAAC;EACvDC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EACpBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;AACtB,CAAC,CAAC;AAEF,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACoC,SAAS,EAAEC,YAAY,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACsC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACwC,QAAQ,EAAEC,WAAW,CAAC,GAAGzC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC0C,WAAW,EAAEC,cAAc,CAAC,GAAG3C,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC4C,KAAK,EAAEC,QAAQ,CAAC,GAAG7C,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC8C,OAAO,EAAEC,UAAU,CAAC,GAAG/C,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgD,UAAU,EAAEC,aAAa,CAAC,GAAGjD,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACkD,SAAS,EAAEC,YAAY,CAAC,GAAGnD,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACoD,KAAK,EAAEC,QAAQ,CAAC,GAAGrD,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAMsD,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MACnD,MAAMC,QAAQ,GAAG,MAAMjD,GAAG,CAACkD,IAAI,CAAC,qBAAqB,EAAE;QAAEJ;MAAU,CAAC,CAAC;MACrEJ,YAAY,CAACO,QAAQ,CAACE,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdS,OAAO,CAACT,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDC,QAAQ,CAAC,8BAA8B,CAAC;IAC1C;EACF,CAAC;EAED,MAAMS,cAAc,GAAGA,CAAA,KAAM;IAC3Bb,aAAa,CAAC,CAACD,UAAU,CAAC;IAC1B,IAAI,CAACA,UAAU,EAAEe,aAAa,CAAC,CAAC;EAClC,CAAC;EAED,MAAMA,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,gBAAgB,GAAGrD,sBAAsB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACvDqD,gBAAgB,CAACC,OAAO,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;MACzCC,UAAU,CAAC,MAAMC,YAAY,CAACH,KAAK,CAAC,EAAEC,KAAK,GAAG,IAAI,CAAC;IACrD,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,YAAY,GAAG,MAAOH,KAAK,IAAK;IACpC,MAAMI,QAAQ,GAAG5D,gBAAgB,CAACwD,KAAK,CAACK,QAAQ,EAAErC,OAAO,CAAC;IAC1D,IAAIoC,QAAQ,EAAE;MACZ,IAAI;QACF,MAAMf,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QACnD,MAAMC,QAAQ,GAAG,MAAMjD,GAAG,CAACkD,IAAI,CAAC,oBAAoB,EAAE;UACpDJ,SAAS;UACTgB,QAAQ,EAAEL,KAAK,CAACK;QAClB,CAAC,CAAC;QAEF,MAAMC,QAAQ,GAAGd,QAAQ,CAACE,IAAI,CAACY,QAAQ;QACvC,IAAIA,QAAQ,EAAE;UAAA,IAAAC,IAAA,EAAAC,qBAAA,EAAAC,gBAAA,EAAAC,qBAAA;UACZ,MAAMC,KAAK,IAAAJ,IAAA,GAAGD,QAAQ,CAAC,YAAY,CAAC,GAAG,GAAG,cAAAC,IAAA,cAAAA,IAAA,GAAI,CAAC,CAAC,CAAC;UACjD,MAAMK,YAAY,IAAAJ,qBAAA,GAAGF,QAAQ,CAAC,qBAAqB,CAAC,cAAAE,qBAAA,cAAAA,qBAAA,GAAI,CAAC;UACzD,MAAMK,IAAI,IAAAJ,gBAAA,GAAGH,QAAQ,CAAC,aAAa,CAAC,cAAAG,gBAAA,cAAAA,gBAAA,GAAI,CAAC;UACzC,MAAMK,gBAAgB,IAAAJ,qBAAA,GAAGJ,QAAQ,CAAC,mBAAmB,CAAC,cAAAI,qBAAA,cAAAA,qBAAA,GAAI,CAAC;;UAE3D;UACAvC,YAAY,CAAE4C,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAEJ,KAAK,CAAC,CAAC;UAChDtC,mBAAmB,CAAE0C,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAEH,YAAY,CAAC,CAAC;UAC9DrC,WAAW,CAAEwC,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAEF,IAAI,CAAC,CAAC;UAC9CpC,cAAc,CAAEsC,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAED,gBAAgB,CAAC,CAAC;;UAE7D;UACA7C,UAAU,CAAE8C,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAE,GAAGf,KAAK,CAACK,QAAQ,CAAC,CAAC;UAE1D,MAAMW,SAAS,GAAGhB,KAAK,CAACK,QAAQ,CAACL,KAAK,CAACK,QAAQ,CAACY,MAAM,GAAG,CAAC,CAAC;UAC3DpC,UAAU,CAAEqC,WAAW,IAAK,CAC1B,GAAGA,WAAW,EACd;YAAEC,GAAG,EAAEH,SAAS,CAACI,QAAQ;YAAEC,GAAG,EAAEL,SAAS,CAACM;UAAU,CAAC,CACtD,CAAC;UAEF3C,QAAQ,CAAE4C,SAAS,IAAK,CACtB,GAAGA,SAAS,EACZ,GAAGvB,KAAK,CAACK,QAAQ,CAACmB,GAAG,CAAEC,KAAK,IAAK,CAACA,KAAK,CAACL,QAAQ,EAAEK,KAAK,CAACH,SAAS,CAAC,CAAC,CACpE,CAAC;QACJ;MACF,CAAC,CAAC,OAAOpC,KAAK,EAAE;QACdS,OAAO,CAACT,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;QACxDC,QAAQ,CAAC,8CAA8C,CAAC;MAC1D;IACF;EACF,CAAC;EAED,MAAMuC,WAAW,GAAGA,CAACC,KAAK,EAAEjC,IAAI,EAAEkC,WAAW,KAAK;IAChD,MAAMC,WAAW,GAAGnC,IAAI,CAAC8B,GAAG,CAAC,CAACM,CAAC,EAAE7B,KAAK,KAAK,SAASA,KAAK,GAAG,CAAC,EAAE,CAAC;IAChE,oBACE5C,OAAA,CAACrB,IAAI;MACH0D,IAAI,EAAE;QACJqC,MAAM,EAAEF,WAAW;QACnBG,QAAQ,EAAE,CACR;UACEL,KAAK,EAAE,GAAGA,KAAK,SAAS;UAAE;UAC1BjC,IAAI,EAAEA,IAAI;UACVkC,WAAW,EAAEA,WAAW;UACxBK,IAAI,EAAE,IAAI;UACVC,eAAe,EAAE,yBAAyB;UAAE;UAC5CC,WAAW,EAAE,CAAC;UACdC,oBAAoB,EAAE,MAAM;UAC5BC,gBAAgB,EAAET,WAAW;UAC7BU,gBAAgB,EAAE;QACpB,CAAC;MAEL,CAAE;MACFC,OAAO,EAAE;QACPC,QAAQ,EAAE;UACRC,IAAI,EAAE;YACJC,OAAO,EAAE,GAAG,CAAE;UAChB;QACF,CAAC;QACDC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDC,WAAW,EAAE;UACf;QACF;MACF;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEN,CAAC;EAED,oBACE5F,OAAA;IAAK6F,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClC9F,OAAA;MAAA8F,QAAA,EAAI;IAAgB;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEzB5F,OAAA;MAAK6F,SAAS,EAAC,mBAAmB;MAAAC,QAAA,eAChC9F,OAAA;QAAQ+F,OAAO,EAAExD,cAAe;QAAAuD,QAAA,EAC7BrE,UAAU,GAAG,eAAe,GAAG;MAAgB;QAAAgE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGN5F,OAAA;MAAK6F,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1B9F,OAAA;QAAA8F,QAAA,EAAI;MAAS;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClB5F,OAAA,CAACpB,YAAY;QAACoH,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,CAAE;QAACC,IAAI,EAAE,EAAG;QAACC,eAAe,EAAE,KAAM;QAACL,SAAS,EAAC,eAAe;QAAAC,QAAA,gBACnG9F,OAAA,CAACnB,SAAS;UAACsH,GAAG,EAAC,oDAAoD;UAACC,WAAW,EAAC;QAAmC;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACtH5F,OAAA,CAAChB,QAAQ;UAACqH,SAAS,EAAEhF,KAAM;UAACiF,KAAK,EAAC,MAAM;UAACC,MAAM,EAAE,CAAE;UAACC,SAAS,EAAE,CAAC,EAAE,EAAE,EAAE,CAAE;UAACC,QAAQ,EAAC;QAAO;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAC3FrE,OAAO,CAAC4C,GAAG,CAAC,CAACuC,MAAM,EAAEC,GAAG,kBACvB3G,OAAA,CAAClB,MAAM;UAAW8H,QAAQ,EAAE,CAACF,MAAM,CAAC5C,GAAG,EAAE4C,MAAM,CAAC1C,GAAG,CAAE;UAAC6C,IAAI,EAAE3G,UAAW;UAAA4F,QAAA,eACrE9F,OAAA,CAACjB,KAAK;YAAA+G,QAAA,GAAC,YAAU,EAACY,MAAM,CAAC5C,GAAG,EAAC,eAAa,EAAC4C,MAAM,CAAC1C,GAAG;UAAA;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC,GADnDe,GAAG;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAER,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACU,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eAGN5F,OAAA;MAAK6F,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5B9F,OAAA;QAAA8F,QAAA,EAAI;MAA4B;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrC5F,OAAA;QAAK6F,SAAS,EAAC,iBAAiB;QAAAC,QAAA,GAC7BzB,WAAW,CAAC,cAAc,EAAExD,SAAS,EAAE,uBAAuB,CAAC,EAC/DwD,WAAW,CAAC,qBAAqB,EAAEtD,gBAAgB,EAAE,uBAAuB,CAAC,EAC7EsD,WAAW,CAAC,aAAa,EAAEpD,QAAQ,EAAE,uBAAuB,CAAC,EAC7DoD,WAAW,CAAC,mBAAmB,EAAElD,WAAW,EAAE,wBAAwB,CAAC;MAAA;QAAAsE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGLjE,SAAS,iBACR3B,OAAA;MAAK6F,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5B9F,OAAA;QAAA8F,QAAA,EAAI;MAAyB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClC5F,OAAA;QAAA8F,QAAA,GAAG,0BAAwB,EAACnE,SAAS,CAACmF,yBAAyB,EAAC,KAAG;MAAA;QAAArB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACvE5F,OAAA;QAAA8F,QAAA,GAAG,eAAa,EAACnE,SAAS,CAACoF,WAAW;MAAA;QAAAtB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3C5F,OAAA;QAAA8F,QAAA,GAAG,iBAAe,EAACnE,SAAS,CAACqF,aAAa;MAAA;QAAAvB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/C5F,OAAA;QAAA8F,QAAA,GAAG,oBAAkB,EAACnE,SAAS,CAACsF,gBAAgB;MAAA;QAAAxB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAErD5F,OAAA;QAAK6F,SAAS,EAAC,iBAAiB;QAAAC,QAAA,GAC7BzB,WAAW,CAAC,cAAc,EAAE,CAAC1C,SAAS,CAACuF,eAAe,CAAC,aAAa,CAAC,CAAC,EAAE,uBAAuB,CAAC,EAChG7C,WAAW,CAAC,qBAAqB,EAAE,CAAC1C,SAAS,CAACuF,eAAe,CAAC,qBAAqB,CAAC,CAAC,EAAE,uBAAuB,CAAC,EAC/G7C,WAAW,CAAC,aAAa,EAAE,CAAC1C,SAAS,CAACuF,eAAe,CAAC,aAAa,CAAC,CAAC,EAAE,uBAAuB,CAAC,EAC/F7C,WAAW,CAAC,mBAAmB,EAAE,CAAC1C,SAAS,CAACuF,eAAe,CAAC,mBAAmB,CAAC,CAAC,EAAE,wBAAwB,CAAC;MAAA;QAAAzB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1G,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAGA/D,KAAK,iBAAI7B,OAAA;MAAK6F,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEjE;IAAK;MAAA4D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAG9C5F,OAAA,CAACX,eAAe;MAACsB,OAAO,EAAEA;IAAQ;MAAA8E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEV,CAAC;AAAClF,EAAA,CAhLID,SAAS;AAAA0G,EAAA,GAAT1G,SAAS;AAkLf,eAAeA,SAAS;AAAC,IAAA0G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}