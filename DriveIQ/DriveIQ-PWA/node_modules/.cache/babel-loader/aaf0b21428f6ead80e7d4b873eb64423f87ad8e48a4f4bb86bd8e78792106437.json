{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anush\\\\OneDrive\\\\Desktop\\\\minor project\\\\DriveIQ\\\\DriveIQ\\\\DriveIQ-PWA\\\\src\\\\components\\\\Dashboard\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Polyline, Marker } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { Line } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { FaTachometerAlt, FaBolt, FaCarCrash, FaMapMarkerAlt } from 'react-icons/fa';\nimport DailyScorePopup from '../DailyScorePopup/DailyScorePopup';\nimport './Dashboard.scss';\n\n// Import necessary Chart.js components\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Register the Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst Dashboard = () => {\n  _s();\n  var _performanceData$spee, _performanceData$acce, _performanceData$jerk;\n  const [gpsData, setGpsData] = useState([]); // Store full GPS data for the route\n  const [route, setRoute] = useState([]); // Coordinates for map polyline\n  const [performanceData, setPerformanceData] = useState({\n    speed: [],\n    acceleration: [],\n    jerk: []\n  });\n  const [driverId, setDriverId] = useState(null);\n  const [error, setError] = useState('');\n  const [isMoving, setIsMoving] = useState(false); // Track if the car is moving\n  const [lastPoint, setLastPoint] = useState(null); // Track the last point of previous batch\n\n  // Fetch driver data (driver_id) from the backend using JWT token\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://localhost:5000/api/user-data', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setDriverId(response.data.driver_id);\n      } catch (err) {\n        setError('Error fetching user data');\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Watch GPS data in real-time\n  useEffect(() => {\n    if (driverId) {\n      const watchId = navigator.geolocation.watchPosition(position => {\n        handlePosition(position.coords.latitude, position.coords.longitude, position.coords.speed);\n      }, err => setError('Error getting real GPS data: ' + err.message), {\n        enableHighAccuracy: true,\n        maximumAge: 0,\n        timeout: 5000\n      });\n      return () => navigator.geolocation.clearWatch(watchId);\n    }\n  }, [driverId]);\n\n  // Handle position data\n  const handlePosition = (lat, lon, speed) => {\n    const newGpsPoint = {\n      Latitude: lat,\n      Longitude: lon,\n      Time_Step: Date.now()\n    };\n    if (speed > 5) {\n      // Car is moving\n      setIsMoving(true);\n      if (lastPoint) {\n        // If the last point exists, start the batch from the previous end point\n        setGpsData([lastPoint, ...gpsData, newGpsPoint]);\n        setLastPoint(null); // Clear lastPoint\n      } else {\n        setGpsData(prevData => [...prevData, newGpsPoint]);\n      }\n    } else if (isMoving) {\n      // Car has stopped\n      setIsMoving(false);\n      sendGpsDataToBackend(gpsData); // Send batch data\n      setLastPoint(newGpsPoint); // Store this as the first point of the next batch\n      setGpsData([]); // Reset for the next batch\n    }\n  };\n\n  // Send GPS batch to backend\n  const sendGpsDataToBackend = async gpsDataBatch => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post('http://localhost:5000/api/record-telematics', {\n        driver_id: driverId,\n        gps_data: gpsDataBatch\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const gps = response.data.gps_data || [];\n      const performance = response.data.performance || {\n        speed: [],\n        acceleration: [],\n        jerk: []\n      };\n\n      // Update route with batch start and end points\n      const batchStart = gpsDataBatch[0];\n      const batchEnd = gpsDataBatch[gpsDataBatch.length - 1];\n      setRoute(prevRoute => [...prevRoute, [batchStart.Latitude, batchStart.Longitude], [batchEnd.Latitude, batchEnd.Longitude]]);\n\n      // Update performance data\n      setPerformanceData({\n        speed: performance.speed,\n        acceleration: performance.acceleration,\n        jerk: performance.jerk\n      });\n    } catch (err) {\n      console.error('Error sending GPS data:', err);\n      setError('Error sending GPS data');\n    }\n  };\n\n  // Trigger daily data processing at midnight\n  useEffect(() => {\n    const now = new Date();\n    const midnight = new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1, 0, 0, 0);\n    const msUntilMidnight = midnight.getTime() - now.getTime();\n    const timer = setTimeout(() => {\n      processDailyData();\n    }, msUntilMidnight);\n    return () => clearTimeout(timer);\n  }, [driverId]);\n  const processDailyData = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      await axios.post('http://localhost:5000/api/process-daily-data', {\n        driver_id: driverId\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log('Daily data processed successfully');\n    } catch (err) {\n      console.error('Error processing daily data:', err);\n    }\n  };\n\n  // Chart data\n  const chartData = {\n    labels: gpsData.map((_, index) => `T${index}`),\n    datasets: [{\n      label: 'Speed (m/s)',\n      data: performanceData.speed,\n      borderColor: 'rgba(75,192,192,1)'\n    }, {\n      label: 'Acceleration (m/s²)',\n      data: performanceData.acceleration,\n      borderColor: '#FF6384'\n    }, {\n      label: 'Jerk (m/s³)',\n      data: performanceData.jerk,\n      borderColor: '#36A2EB'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Driver Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-section\",\n        children: /*#__PURE__*/_jsxDEV(MapContainer, {\n          center: [40.712776, -74.005974],\n          zoom: 13,\n          className: \"map\",\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n            positions: route,\n            color: \"blue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), (route === null || route === void 0 ? void 0 : route[0]) && /*#__PURE__*/_jsxDEV(Marker, {\n            position: route[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 28\n          }, this), (route === null || route === void 0 ? void 0 : route[route.length - 1]) && /*#__PURE__*/_jsxDEV(Marker, {\n            position: route[route.length - 1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-section\",\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icon-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-item\",\n        children: [/*#__PURE__*/_jsxDEV(FaTachometerAlt, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), \" Speed: \", performanceData === null || performanceData === void 0 ? void 0 : (_performanceData$spee = performanceData.speed) === null || _performanceData$spee === void 0 ? void 0 : _performanceData$spee.slice(-1), \" m/s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-item\",\n        children: [/*#__PURE__*/_jsxDEV(FaBolt, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), \" Acceleration: \", performanceData === null || performanceData === void 0 ? void 0 : (_performanceData$acce = performanceData.acceleration) === null || _performanceData$acce === void 0 ? void 0 : _performanceData$acce.slice(-1), \" m/s\\xB2\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-item\",\n        children: [/*#__PURE__*/_jsxDEV(FaCarCrash, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), \" Jerk: \", performanceData === null || performanceData === void 0 ? void 0 : (_performanceData$jerk = performanceData.jerk) === null || _performanceData$jerk === void 0 ? void 0 : _performanceData$jerk.slice(-1), \" m/s\\xB3\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-item\",\n        children: [/*#__PURE__*/_jsxDEV(FaMapMarkerAlt, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), \" Total Route Points: \", route.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DailyScorePopup, {\n      driverId: driverId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"Ibor3fOE6nubfOdhcFw7KR1JccI=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Polyline","Marker","Line","axios","FaTachometerAlt","FaBolt","FaCarCrash","FaMapMarkerAlt","DailyScorePopup","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Dashboard","_s","_performanceData$spee","_performanceData$acce","_performanceData$jerk","gpsData","setGpsData","route","setRoute","performanceData","setPerformanceData","speed","acceleration","jerk","driverId","setDriverId","error","setError","isMoving","setIsMoving","lastPoint","setLastPoint","fetchData","token","localStorage","getItem","response","get","headers","Authorization","data","driver_id","err","watchId","navigator","geolocation","watchPosition","position","handlePosition","coords","latitude","longitude","message","enableHighAccuracy","maximumAge","timeout","clearWatch","lat","lon","newGpsPoint","Latitude","Longitude","Time_Step","Date","now","prevData","sendGpsDataToBackend","gpsDataBatch","post","gps_data","gps","performance","batchStart","batchEnd","length","prevRoute","console","midnight","getFullYear","getMonth","getDate","msUntilMidnight","getTime","timer","setTimeout","processDailyData","clearTimeout","log","chartData","labels","map","_","index","datasets","label","borderColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","url","positions","color","slice","_c","$RefreshReg$"],"sources":["C:/Users/anush/OneDrive/Desktop/minor project/DriveIQ/DriveIQ/DriveIQ-PWA/src/components/Dashboard/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { MapContainer, TileLayer, Polyline, Marker } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { Line } from 'react-chartjs-2';\r\nimport axios from 'axios';\r\nimport { FaTachometerAlt, FaBolt, FaCarCrash, FaMapMarkerAlt } from 'react-icons/fa';\r\nimport DailyScorePopup from '../DailyScorePopup/DailyScorePopup';\r\nimport './Dashboard.scss';\r\n\r\n// Import necessary Chart.js components\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\n// Register the Chart.js components\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\r\n\r\nconst Dashboard = () => {\r\n  const [gpsData, setGpsData] = useState([]);   // Store full GPS data for the route\r\n  const [route, setRoute] = useState([]);       // Coordinates for map polyline\r\n  const [performanceData, setPerformanceData] = useState({\r\n    speed: [],\r\n    acceleration: [],\r\n    jerk: [],\r\n  });\r\n  const [driverId, setDriverId] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const [isMoving, setIsMoving] = useState(false); // Track if the car is moving\r\n  const [lastPoint, setLastPoint] = useState(null); // Track the last point of previous batch\r\n\r\n  // Fetch driver data (driver_id) from the backend using JWT token\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.get('http://localhost:5000/api/user-data', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        setDriverId(response.data.driver_id);\r\n      } catch (err) {\r\n        setError('Error fetching user data');\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Watch GPS data in real-time\r\n  useEffect(() => {\r\n    if (driverId) {\r\n      const watchId = navigator.geolocation.watchPosition(\r\n        (position) => {\r\n          handlePosition(position.coords.latitude, position.coords.longitude, position.coords.speed);\r\n        },\r\n        (err) => setError('Error getting real GPS data: ' + err.message),\r\n        { enableHighAccuracy: true, maximumAge: 0, timeout: 5000 }\r\n      );\r\n      return () => navigator.geolocation.clearWatch(watchId);\r\n    }\r\n  }, [driverId]);\r\n\r\n  // Handle position data\r\n  const handlePosition = (lat, lon, speed) => {\r\n    const newGpsPoint = {\r\n      Latitude: lat,\r\n      Longitude: lon,\r\n      Time_Step: Date.now(),\r\n    };\r\n\r\n    if (speed > 5) { // Car is moving\r\n      setIsMoving(true);\r\n      if (lastPoint) {\r\n        // If the last point exists, start the batch from the previous end point\r\n        setGpsData([lastPoint, ...gpsData, newGpsPoint]);\r\n        setLastPoint(null); // Clear lastPoint\r\n      } else {\r\n        setGpsData((prevData) => [...prevData, newGpsPoint]);\r\n      }\r\n    } else if (isMoving) { // Car has stopped\r\n      setIsMoving(false);\r\n      sendGpsDataToBackend(gpsData); // Send batch data\r\n      setLastPoint(newGpsPoint); // Store this as the first point of the next batch\r\n      setGpsData([]); // Reset for the next batch\r\n    }\r\n  };\r\n\r\n  // Send GPS batch to backend\r\n  const sendGpsDataToBackend = async (gpsDataBatch) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.post(\r\n        'http://localhost:5000/api/record-telematics',\r\n        {\r\n          driver_id: driverId,\r\n          gps_data: gpsDataBatch,\r\n        },\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n\r\n      const gps = response.data.gps_data || [];\r\n      const performance = response.data.performance || { speed: [], acceleration: [], jerk: [] };\r\n\r\n      // Update route with batch start and end points\r\n      const batchStart = gpsDataBatch[0];\r\n      const batchEnd = gpsDataBatch[gpsDataBatch.length - 1];\r\n      setRoute((prevRoute) => [...prevRoute, [batchStart.Latitude, batchStart.Longitude], [batchEnd.Latitude, batchEnd.Longitude]]);\r\n\r\n      // Update performance data\r\n      setPerformanceData({\r\n        speed: performance.speed,\r\n        acceleration: performance.acceleration,\r\n        jerk: performance.jerk,\r\n      });\r\n    } catch (err) {\r\n      console.error('Error sending GPS data:', err);\r\n      setError('Error sending GPS data');\r\n    }\r\n  };\r\n\r\n  // Trigger daily data processing at midnight\r\n  useEffect(() => {\r\n    const now = new Date();\r\n    const midnight = new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1, 0, 0, 0);\r\n    const msUntilMidnight = midnight.getTime() - now.getTime();\r\n\r\n    const timer = setTimeout(() => {\r\n      processDailyData();\r\n    }, msUntilMidnight);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [driverId]);\r\n\r\n  const processDailyData = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      await axios.post(\r\n        'http://localhost:5000/api/process-daily-data',\r\n        { driver_id: driverId },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      console.log('Daily data processed successfully');\r\n    } catch (err) {\r\n      console.error('Error processing daily data:', err);\r\n    }\r\n  };\r\n\r\n  // Chart data\r\n  const chartData = {\r\n    labels: gpsData.map((_, index) => `T${index}`),\r\n    datasets: [\r\n      { label: 'Speed (m/s)', data: performanceData.speed, borderColor: 'rgba(75,192,192,1)' },\r\n      { label: 'Acceleration (m/s²)', data: performanceData.acceleration, borderColor: '#FF6384' },\r\n      { label: 'Jerk (m/s³)', data: performanceData.jerk, borderColor: '#36A2EB' },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Driver Dashboard</h2>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      <div className=\"dashboard-content\">\r\n        <div className=\"map-section\">\r\n          <MapContainer center={[40.712776, -74.005974]} zoom={13} className=\"map\">\r\n            <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n            <Polyline positions={route} color=\"blue\" />\r\n            {route?.[0] && <Marker position={route[0]} />}\r\n            {route?.[route.length - 1] && <Marker position={route[route.length - 1]} />}\r\n          </MapContainer>\r\n        </div>\r\n        <div className=\"graph-section\">\r\n          <Line data={chartData} />\r\n        </div>\r\n      </div>\r\n      <div className=\"icon-section\">\r\n        <div className=\"icon-item\">\r\n          <FaTachometerAlt /> Speed: {performanceData?.speed?.slice(-1)} m/s\r\n        </div>\r\n        <div className=\"icon-item\">\r\n          <FaBolt /> Acceleration: {performanceData?.acceleration?.slice(-1)} m/s²\r\n        </div>\r\n        <div className=\"icon-item\">\r\n          <FaCarCrash /> Jerk: {performanceData?.jerk?.slice(-1)} m/s³\r\n        </div>\r\n        <div className=\"icon-item\">\r\n          <FaMapMarkerAlt /> Total Route Points: {route.length}\r\n        </div>\r\n      </div>\r\n      <DailyScorePopup driverId={driverId} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}