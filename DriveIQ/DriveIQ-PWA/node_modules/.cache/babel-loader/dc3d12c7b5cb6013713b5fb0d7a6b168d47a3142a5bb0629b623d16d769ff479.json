{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anush\\\\OneDrive\\\\Desktop\\\\minor project\\\\DriveIQ\\\\DriveIQ\\\\DriveIQ-PWA\\\\src\\\\components\\\\MapView\\\\MapView.jsx\";\nimport React from 'react';\nimport { MapContainer, TileLayer, Polyline, Marker } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './MapView.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapView = ({\n  gpsData\n}) => {\n  // Default coordinates to use when gpsData is empty\n  const defaultCoords = [26.6338, 92.8006]; // Coordinates for Tezpur, India\n\n  // Map GPS data into array of [latitude, longitude]\n  const route = gpsData.length ? gpsData.map(point => [point.Latitude, point.Longitude]) : [defaultCoords];\n\n  // Set starting point and ending point for markers\n  const startPoint = route[0];\n  const endPoint = route[route.length - 1];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-view\",\n    style: {\n      height: '400px',\n      width: '100%'\n    },\n    children: [\"  \", /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: startPoint,\n      zoom: 14,\n      style: {\n        height: '100%',\n        width: '100%'\n      },\n      children: [\" \", /*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), route.length > 1 && /*#__PURE__*/_jsxDEV(Polyline, {\n        positions: route,\n        color: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 30\n      }, this), startPoint && /*#__PURE__*/_jsxDEV(Marker, {\n        position: startPoint\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 24\n      }, this), endPoint && startPoint !== endPoint && /*#__PURE__*/_jsxDEV(Marker, {\n        position: endPoint\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 49\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","MapContainer","TileLayer","Polyline","Marker","jsxDEV","_jsxDEV","MapView","gpsData","defaultCoords","route","length","map","point","Latitude","Longitude","startPoint","endPoint","className","style","height","width","children","center","zoom","url","fileName","_jsxFileName","lineNumber","columnNumber","positions","color","position","_c","$RefreshReg$"],"sources":["C:/Users/anush/OneDrive/Desktop/minor project/DriveIQ/DriveIQ/DriveIQ-PWA/src/components/MapView/MapView.jsx"],"sourcesContent":["import React from 'react';\r\nimport { MapContainer, TileLayer, Polyline, Marker } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport './MapView.scss';\r\n\r\nconst MapView = ({ gpsData }) => {\r\n  // Default coordinates to use when gpsData is empty\r\n  const defaultCoords = [26.6338, 92.8006];  // Coordinates for Tezpur, India\r\n  \r\n  // Map GPS data into array of [latitude, longitude]\r\n  const route = gpsData.length ? gpsData.map(point => [point.Latitude, point.Longitude]) : [defaultCoords];\r\n\r\n  // Set starting point and ending point for markers\r\n  const startPoint = route[0];\r\n  const endPoint = route[route.length - 1];\r\n\r\n  return (\r\n    <div className=\"map-view\" style={{ height: '400px', width: '100%' }}>  {/* Set height */}\r\n      <MapContainer center={startPoint} zoom={14} style={{ height: '100%', width: '100%' }}> {/* Ensure MapContainer gets the height */}\r\n        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n        \r\n        {/* Draw the route as a polyline */}\r\n        {route.length > 1 && <Polyline positions={route} color=\"blue\" />}\r\n\r\n        {/* Start marker */}\r\n        {startPoint && <Marker position={startPoint} />}\r\n        \r\n        {/* End marker */}\r\n        {endPoint && startPoint !== endPoint && <Marker position={endPoint} />}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapView;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,eAAe;AACzE,OAAO,0BAA0B;AACjC,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAC/B;EACA,MAAMC,aAAa,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAE;;EAE3C;EACA,MAAMC,KAAK,GAAGF,OAAO,CAACG,MAAM,GAAGH,OAAO,CAACI,GAAG,CAACC,KAAK,IAAI,CAACA,KAAK,CAACC,QAAQ,EAAED,KAAK,CAACE,SAAS,CAAC,CAAC,GAAG,CAACN,aAAa,CAAC;;EAExG;EACA,MAAMO,UAAU,GAAGN,KAAK,CAAC,CAAC,CAAC;EAC3B,MAAMO,QAAQ,GAAGP,KAAK,CAACA,KAAK,CAACC,MAAM,GAAG,CAAC,CAAC;EAExC,oBACEL,OAAA;IAAKY,SAAS,EAAC,UAAU;IAACC,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,GAAC,IAAE,eACrEhB,OAAA,CAACL,YAAY;MAACsB,MAAM,EAAEP,UAAW;MAACQ,IAAI,EAAE,EAAG;MAACL,KAAK,EAAE;QAAEC,MAAM,EAAE,MAAM;QAAEC,KAAK,EAAE;MAAO,CAAE;MAAAC,QAAA,GAAC,GAAC,eACrFhB,OAAA,CAACJ,SAAS;QAACuB,GAAG,EAAC;MAAoD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAGrEnB,KAAK,CAACC,MAAM,GAAG,CAAC,iBAAIL,OAAA,CAACH,QAAQ;QAAC2B,SAAS,EAAEpB,KAAM;QAACqB,KAAK,EAAC;MAAM;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAG/Db,UAAU,iBAAIV,OAAA,CAACF,MAAM;QAAC4B,QAAQ,EAAEhB;MAAW;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAG9CZ,QAAQ,IAAID,UAAU,KAAKC,QAAQ,iBAAIX,OAAA,CAACF,MAAM;QAAC4B,QAAQ,EAAEf;MAAS;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV,CAAC;AAACI,EAAA,GA3BI1B,OAAO;AA6Bb,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}