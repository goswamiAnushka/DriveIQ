{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anush\\\\OneDrive\\\\Desktop\\\\minor project\\\\DriveIQ\\\\DriveIQ\\\\DriveIQ-PWA\\\\src\\\\components\\\\Dashboard\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from '../../utils/api'; // Assuming you have an API utility\nimport './Dashboard.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [dailyData, setDailyData] = useState(null); // State for daily data\n  const [error, setError] = useState(null); // State for errors\n  const [isLoading, setIsLoading] = useState(false); // State for loading\n\n  // Function to fetch daily data from the API\n  const processDailyData = async () => {\n    const driver_id = localStorage.getItem('driver_id'); // Get driver_id from localStorage\n    setIsLoading(true); // Set loading state while fetching data\n\n    try {\n      // Make the API request\n      const response = await api.post('/process-daily-data', {\n        driver_id\n      });\n\n      // Log the full response to make sure it's correct\n      console.log('Daily Data API Response:', response.data);\n\n      // Check if aggregated_data exists in the response\n      if (response.data && response.data.aggregated_data) {\n        // Update the state with daily data\n        setDailyData(response.data);\n      } else {\n        setError('No aggregated data found in response');\n        setDailyData(null); // Reset dailyData to null if no valid data\n      }\n    } catch (error) {\n      setError('Error fetching daily data');\n      console.error('Error processing daily data:', error);\n      setDailyData(null); // Reset dailyData to null if error occurs\n    } finally {\n      setIsLoading(false); // Stop loading state after fetch\n    }\n  };\n\n  // Fetch daily data when the component mounts\n  useEffect(() => {\n    processDailyData(); // Trigger API call on component mount\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Driver Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading daily data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : dailyData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daily-data-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Daily Driving Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Driving Score:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 16\n        }, this), \" \", dailyData.driving_score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Driving Category:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 16\n        }, this), \" \", dailyData.driving_category]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.entries(dailyData.aggregated_data).map(([key, value], index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [key, \": \", isNaN(value) ? 0 : value, \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Total Distance Covered (km):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 16\n        }, this), \" \", dailyData.total_distance_covered_km]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Total Trips:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 16\n        }, this), \" \", dailyData.total_trips]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No daily data available yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"OpzGkyk080o5GBdjRCxEYnXN2fs=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","Dashboard","_s","dailyData","setDailyData","error","setError","isLoading","setIsLoading","processDailyData","driver_id","localStorage","getItem","response","post","console","log","data","aggregated_data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","driving_score","driving_category","Object","entries","map","key","value","index","isNaN","total_distance_covered_km","total_trips","_c","$RefreshReg$"],"sources":["C:/Users/anush/OneDrive/Desktop/minor project/DriveIQ/DriveIQ/DriveIQ-PWA/src/components/Dashboard/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport api from '../../utils/api'; // Assuming you have an API utility\r\nimport './Dashboard.scss';\r\n\r\nconst Dashboard = () => {\r\n  const [dailyData, setDailyData] = useState(null); // State for daily data\r\n  const [error, setError] = useState(null); // State for errors\r\n  const [isLoading, setIsLoading] = useState(false); // State for loading\r\n\r\n  // Function to fetch daily data from the API\r\n  const processDailyData = async () => {\r\n    const driver_id = localStorage.getItem('driver_id'); // Get driver_id from localStorage\r\n    setIsLoading(true); // Set loading state while fetching data\r\n\r\n    try {\r\n      // Make the API request\r\n      const response = await api.post('/process-daily-data', { driver_id });\r\n\r\n      // Log the full response to make sure it's correct\r\n      console.log('Daily Data API Response:', response.data);\r\n\r\n      // Check if aggregated_data exists in the response\r\n      if (response.data && response.data.aggregated_data) {\r\n        // Update the state with daily data\r\n        setDailyData(response.data);\r\n      } else {\r\n        setError('No aggregated data found in response');\r\n        setDailyData(null); // Reset dailyData to null if no valid data\r\n      }\r\n    } catch (error) {\r\n      setError('Error fetching daily data');\r\n      console.error('Error processing daily data:', error);\r\n      setDailyData(null); // Reset dailyData to null if error occurs\r\n    } finally {\r\n      setIsLoading(false); // Stop loading state after fetch\r\n    }\r\n  };\r\n\r\n  // Fetch daily data when the component mounts\r\n  useEffect(() => {\r\n    processDailyData(); // Trigger API call on component mount\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Driver Dashboard</h2>\r\n\r\n      {/* Error handling */}\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n\r\n      {/* Loading state */}\r\n      {isLoading ? (\r\n        <p>Loading daily data...</p>\r\n      ) : (\r\n        dailyData ? (\r\n          <div className=\"daily-data-section\">\r\n            <h3>Daily Driving Data</h3>\r\n            <p><strong>Driving Score:</strong> {dailyData.driving_score}</p>\r\n            <p><strong>Driving Category:</strong> {dailyData.driving_category}</p>\r\n            <ul>\r\n              {Object.entries(dailyData.aggregated_data).map(([key, value], index) => (\r\n                <li key={index}>\r\n                  {key}: {isNaN(value) ? 0 : value} {/* Replace NaN with 0 */}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <p><strong>Total Distance Covered (km):</strong> {dailyData.total_distance_covered_km}</p>\r\n            <p><strong>Total Trips:</strong> {dailyData.total_trips}</p>\r\n          </div>\r\n        ) : (\r\n          <p>No daily data available yet.</p>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}