{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anush\\\\OneDrive\\\\Desktop\\\\minor project\\\\DriveIQ\\\\DriveIQ\\\\DriveIQ-PWA\\\\src\\\\components\\\\Dashboard\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2'; // Import Bar for distribution chart\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport api from '../../utils/api';\nimport { smartGpsTracking, generateSimulatedRoute } from '../../utils/geolocation';\nimport BatchProcessing from '../BatchProcessing/BatchProcessing';\nimport './Dashboard.scss';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend);\n\n// Define custom marker icon\nconst customIcon = new L.Icon({\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34]\n});\nconst Dashboard = () => {\n  _s();\n  const [gpsData, setGpsData] = useState([]);\n  const [speedData, setSpeedData] = useState([]);\n  const [accelerationData, setAccelerationData] = useState([]);\n  const [jerkData, setJerkData] = useState([]);\n  const [brakingData, setBrakingData] = useState([]);\n  const [route, setRoute] = useState([]);\n  const [markers, setMarkers] = useState([]);\n  const [isTracking, setIsTracking] = useState(false);\n  const [error, setError] = useState(null);\n  const [dailyData, setDailyData] = useState(null); // New state for daily data\n\n  // Function to clean NaN values for display\n  const cleanValue = value => isNaN(value) ? 'N/A' : value;\n\n  // Check if the daily data is updated and log it to debug rendering\n  useEffect(() => {\n    if (dailyData) {\n      console.log('Rendering Daily Data: ', dailyData);\n    }\n  }, [dailyData]);\n  const toggleTracking = () => {\n    if (isTracking) {\n      setIsTracking(false);\n    } else {\n      setIsTracking(true);\n      startTracking();\n    }\n  };\n  const startTracking = () => {\n    const simulatedBatches = generateSimulatedRoute(1, 5); // Generate 5 GPS batches\n    simulatedBatches.forEach((batch, index) => {\n      setTimeout(() => {\n        processBatch(batch).then(() => {\n          if (index === simulatedBatches.length - 1) {\n            processDailyData(); // Call processDailyData after the last batch\n          }\n        });\n      }, index * 5000); // Process each batch after 5 seconds\n    });\n  };\n  const processBatch = async batch => {\n    const isMoving = smartGpsTracking(batch.gps_data, gpsData);\n    if (isMoving) {\n      try {\n        const driver_id = localStorage.getItem('driver_id');\n        const response = await api.post('/record-telematics', {\n          driver_id,\n          gps_data: batch.gps_data\n        });\n        const features = response.data.features;\n        if (features) {\n          var _features$SpeedMS, _features$Acceleratio, _features$JerkMS, _features$Braking_Int;\n          const speed = (_features$SpeedMS = features['Speed(m/s)']) !== null && _features$SpeedMS !== void 0 ? _features$SpeedMS : 0;\n          const acceleration = (_features$Acceleratio = features['Acceleration(m/s^2)']) !== null && _features$Acceleratio !== void 0 ? _features$Acceleratio : 0;\n          const jerk = (_features$JerkMS = features['Jerk(m/s^3)']) !== null && _features$JerkMS !== void 0 ? _features$JerkMS : 0;\n          const brakingIntensity = (_features$Braking_Int = features['Braking_Intensity']) !== null && _features$Braking_Int !== void 0 ? _features$Braking_Int : 0;\n          setSpeedData(prevData => [...prevData, speed]);\n          setAccelerationData(prevData => [...prevData, acceleration]);\n          setJerkData(prevData => [...prevData, jerk]);\n          setBrakingData(prevData => [...prevData, brakingIntensity]);\n          setGpsData(prevData => [...prevData, ...batch.gps_data]);\n          const lastPoint = batch.gps_data[batch.gps_data.length - 1];\n          setMarkers(prevMarkers => [...prevMarkers, {\n            lat: lastPoint.Latitude,\n            lng: lastPoint.Longitude\n          }]);\n          setRoute(prevRoute => [...prevRoute, ...batch.gps_data.map(point => [point.Latitude, point.Longitude])]);\n        } else {\n          console.error('Error: Features object is undefined or missing keys');\n        }\n      } catch (error) {\n        console.error('Error recording telematics data:', error);\n        setError('Error processing GPS data. Please try again.');\n      }\n    }\n  };\n  const processDailyData = async () => {\n    try {\n      const driver_id = localStorage.getItem('driver_id');\n      const response = await api.post('/process-daily-data', {\n        driver_id\n      });\n      console.log('Daily Data Response:', response.data);\n      setDailyData(response.data); // Store daily data in the state\n    } catch (error) {\n      console.error('Error processing daily data:', error);\n    }\n  };\n\n  // Render the distribution graph for daily features\n  const renderDistributionGraph = () => {\n    if (!dailyData || !dailyData.aggregated_data) return null;\n    const labels = ['Speed(m/s)', 'Acceleration(m/s^2)', 'Jerk(m/s^3)', 'Braking Intensity'];\n    const data = [cleanValue(dailyData.aggregated_data['Speed(m/s)']), cleanValue(dailyData.aggregated_data['Acceleration(m/s^2)']), cleanValue(dailyData.aggregated_data['Jerk(m/s^3)']), cleanValue(dailyData.aggregated_data['Braking_Intensity'])];\n    const chartData = {\n      labels,\n      datasets: [{\n        label: 'Daily Feature Distribution',\n        backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(75, 192, 192, 0.8)', 'rgba(153, 102, 255, 0.8)'],\n        borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)'],\n        borderWidth: 2,\n        hoverBackgroundColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)'],\n        hoverBorderColor: '#fff',\n        hoverBorderWidth: 3,\n        data: data,\n        barThickness: 50 // Adjust bar thickness\n      }]\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"distribution-chart-container\",\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: {\n          responsive: true,\n          scales: {\n            y: {\n              beginAtZero: true,\n              grid: {\n                color: 'rgba(255, 255, 255, 0.1)'\n              },\n              ticks: {\n                color: '#34495e'\n              }\n            },\n            x: {\n              grid: {\n                color: 'rgba(255, 255, 255, 0.1)'\n              },\n              ticks: {\n                color: '#34495e'\n              }\n            }\n          },\n          plugins: {\n            legend: {\n              labels: {\n                color: '#34495e',\n                font: {\n                  size: 14,\n                  family: 'Poppins'\n                }\n              }\n            },\n            tooltip: {\n              backgroundColor: 'rgba(0, 0, 0, 0.8)',\n              titleFont: {\n                family: 'Poppins',\n                size: 14\n              },\n              bodyFont: {\n                family: 'Poppins',\n                size: 12\n              },\n              displayColors: false\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this);\n  };\n  const renderChart = (label, data, borderColor, gradientColor) => {\n    const chartLabels = data.map((_, index) => `Batch ${index + 1}`);\n    return /*#__PURE__*/_jsxDEV(Line, {\n      data: {\n        labels: chartLabels,\n        datasets: [{\n          label: label,\n          data: data,\n          borderColor: borderColor,\n          backgroundColor: gradientColor,\n          // Gradient background\n          pointBackgroundColor: '#fff',\n          // White point dots for contrast\n          pointRadius: 5,\n          // Larger point size for visibility\n          borderWidth: 3,\n          // Thicker lines for more visibility\n          fill: true,\n          // Enable fill under the line\n          tension: 0.4 // Smooth line curves\n        }]\n      },\n      options: {\n        responsive: true,\n        animation: {\n          duration: 2000 // Smooth 2-second load animation\n        },\n        scales: {\n          x: {\n            grid: {\n              color: 'rgba(255, 255, 255, 0.1)' // Lighter grid lines\n            },\n            ticks: {\n              color: '#34495e' // Darker text for labels\n            }\n          },\n          y: {\n            grid: {\n              color: 'rgba(255, 255, 255, 0.1)' // Lighter grid lines\n            },\n            ticks: {\n              color: '#34495e' // Darker text for labels\n            }\n          }\n        },\n        plugins: {\n          legend: {\n            labels: {\n              color: '#34495e',\n              // Darker legend labels\n              font: {\n                size: 14,\n                family: 'Poppins'\n              }\n            }\n          },\n          tooltip: {\n            backgroundColor: 'rgba(0, 0, 0, 0.8)',\n            // Dark tooltip background\n            titleFont: {\n              family: 'Poppins',\n              size: 14\n            },\n            bodyFont: {\n              family: 'Poppins',\n              size: 12\n            },\n            displayColors: false // Hide color boxes in tooltip\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Driver Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tracking-controls\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleTracking,\n        children: isTracking ? 'Stop Tracking' : 'Start Tracking'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manual-process-controls\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: processDailyData,\n        children: \"Process Daily Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Route Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [26.6337, 92.7926],\n        zoom: 13,\n        scrollWheelZoom: false,\n        className: \"map-container\",\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 OpenStreetMap contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n          positions: route,\n          color: \"blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), markers.map((marker, idx) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: [marker.lat, marker.lng],\n          icon: customIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [\"Latitude: \", marker.lat, \", Longitude: \", marker.lng]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Driving Feature Fluctuations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [renderChart('Speed (m/s)', speedData, 'rgba(75, 192, 192, 1)', 'rgba(0, 255, 255, 0.2)'), renderChart('Acceleration (m/s²)', accelerationData, 'rgba(255, 165, 0, 1)', 'rgba(255, 165, 0, 0.2)'), renderChart('Jerk (m/s³)', jerkData, 'rgba(75, 192, 192, 1)', 'rgba(75, 192, 192, 0.2)'), renderChart('Braking Intensity', brakingData, 'rgba(255, 99, 132, 1)', 'rgba(255, 99, 132, 0.2)')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this), renderDistributionGraph(), dailyData ? dailyData.aggregated_data ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daily-data-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Daily Driving Performance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Driving Score: \", dailyData.driving_score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Driving Category: \", dailyData.driving_category]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Trips: \", dailyData.total_trips]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Distance Covered: \", dailyData.total_distance_covered_km, \" km\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"aggregated-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Average Speed: \", cleanValue(dailyData.aggregated_data['Speed(m/s)']), \" m/s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Average Acceleration: \", cleanValue(dailyData.aggregated_data['Acceleration(m/s^2)']), \" m/s\\xB2\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Average Jerk: \", cleanValue(dailyData.aggregated_data['Jerk(m/s^3)']), \" m/s\\xB3\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Average Braking Intensity: \", cleanValue(dailyData.aggregated_data['Braking_Intensity'])]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Aggregated data is missing.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No daily data available yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(BatchProcessing, {\n      gpsData: gpsData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"wuQEwA7U0balDwR8f8zad+niK8E=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Line","Bar","MapContainer","TileLayer","Marker","Popup","Polyline","L","api","smartGpsTracking","generateSimulatedRoute","BatchProcessing","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","customIcon","Icon","iconUrl","require","iconSize","iconAnchor","popupAnchor","Dashboard","_s","gpsData","setGpsData","speedData","setSpeedData","accelerationData","setAccelerationData","jerkData","setJerkData","brakingData","setBrakingData","route","setRoute","markers","setMarkers","isTracking","setIsTracking","error","setError","dailyData","setDailyData","cleanValue","value","isNaN","console","log","toggleTracking","startTracking","simulatedBatches","forEach","batch","index","setTimeout","processBatch","then","length","processDailyData","isMoving","gps_data","driver_id","localStorage","getItem","response","post","features","data","_features$SpeedMS","_features$Acceleratio","_features$JerkMS","_features$Braking_Int","speed","acceleration","jerk","brakingIntensity","prevData","lastPoint","prevMarkers","lat","Latitude","lng","Longitude","prevRoute","map","point","renderDistributionGraph","aggregated_data","labels","chartData","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","barThickness","className","children","options","responsive","scales","y","beginAtZero","grid","color","ticks","x","plugins","legend","font","size","family","tooltip","titleFont","bodyFont","displayColors","fileName","_jsxFileName","lineNumber","columnNumber","renderChart","gradientColor","chartLabels","_","pointBackgroundColor","pointRadius","fill","tension","animation","duration","onClick","center","zoom","scrollWheelZoom","url","attribution","positions","marker","idx","position","icon","driving_score","driving_category","total_trips","total_distance_covered_km","_c","$RefreshReg$"],"sources":["C:/Users/anush/OneDrive/Desktop/minor project/DriveIQ/DriveIQ/DriveIQ-PWA/src/components/Dashboard/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2'; // Import Bar for distribution chart\r\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\nimport api from '../../utils/api';\r\nimport { smartGpsTracking, generateSimulatedRoute } from '../../utils/geolocation';\r\nimport BatchProcessing from '../BatchProcessing/BatchProcessing';\r\nimport './Dashboard.scss';\r\n\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend);\r\n\r\n// Define custom marker icon\r\nconst customIcon = new L.Icon({\r\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n  iconSize: [25, 41],\r\n  iconAnchor: [12, 41],\r\n  popupAnchor: [1, -34],\r\n});\r\n\r\nconst Dashboard = () => {\r\n  const [gpsData, setGpsData] = useState([]);\r\n  const [speedData, setSpeedData] = useState([]);\r\n  const [accelerationData, setAccelerationData] = useState([]);\r\n  const [jerkData, setJerkData] = useState([]);\r\n  const [brakingData, setBrakingData] = useState([]);\r\n  const [route, setRoute] = useState([]);\r\n  const [markers, setMarkers] = useState([]);\r\n  const [isTracking, setIsTracking] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [dailyData, setDailyData] = useState(null); // New state for daily data\r\n\r\n  // Function to clean NaN values for display\r\n  const cleanValue = (value) => (isNaN(value) ? 'N/A' : value);\r\n\r\n  // Check if the daily data is updated and log it to debug rendering\r\n  useEffect(() => {\r\n    if (dailyData) {\r\n      console.log('Rendering Daily Data: ', dailyData);\r\n    }\r\n  }, [dailyData]);\r\n\r\n  const toggleTracking = () => {\r\n    if (isTracking) {\r\n      setIsTracking(false);\r\n    } else {\r\n      setIsTracking(true);\r\n      startTracking();\r\n    }\r\n  };\r\n\r\n  const startTracking = () => {\r\n    const simulatedBatches = generateSimulatedRoute(1, 5); // Generate 5 GPS batches\r\n    simulatedBatches.forEach((batch, index) => {\r\n      setTimeout(() => {\r\n        processBatch(batch).then(() => {\r\n          if (index === simulatedBatches.length - 1) {\r\n            processDailyData();  // Call processDailyData after the last batch\r\n          }\r\n        });\r\n      }, index * 5000); // Process each batch after 5 seconds\r\n    });\r\n  };\r\n\r\n  const processBatch = async (batch) => {\r\n    const isMoving = smartGpsTracking(batch.gps_data, gpsData);\r\n    if (isMoving) {\r\n      try {\r\n        const driver_id = localStorage.getItem('driver_id');\r\n        const response = await api.post('/record-telematics', {\r\n          driver_id,\r\n          gps_data: batch.gps_data,\r\n        });\r\n\r\n        const features = response.data.features;\r\n        if (features) {\r\n          const speed = features['Speed(m/s)'] ?? 0;\r\n          const acceleration = features['Acceleration(m/s^2)'] ?? 0;\r\n          const jerk = features['Jerk(m/s^3)'] ?? 0;\r\n          const brakingIntensity = features['Braking_Intensity'] ?? 0;\r\n\r\n          setSpeedData((prevData) => [...prevData, speed]);\r\n          setAccelerationData((prevData) => [...prevData, acceleration]);\r\n          setJerkData((prevData) => [...prevData, jerk]);\r\n          setBrakingData((prevData) => [...prevData, brakingIntensity]);\r\n\r\n          setGpsData((prevData) => [...prevData, ...batch.gps_data]);\r\n\r\n          const lastPoint = batch.gps_data[batch.gps_data.length - 1];\r\n          setMarkers((prevMarkers) => [\r\n            ...prevMarkers,\r\n            { lat: lastPoint.Latitude, lng: lastPoint.Longitude },\r\n          ]);\r\n\r\n          setRoute((prevRoute) => [\r\n            ...prevRoute,\r\n            ...batch.gps_data.map((point) => [point.Latitude, point.Longitude]),\r\n          ]);\r\n        } else {\r\n          console.error('Error: Features object is undefined or missing keys');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error recording telematics data:', error);\r\n        setError('Error processing GPS data. Please try again.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const processDailyData = async () => {\r\n    try {\r\n      const driver_id = localStorage.getItem('driver_id');\r\n      const response = await api.post('/process-daily-data', { driver_id });\r\n\r\n      console.log('Daily Data Response:', response.data);\r\n      setDailyData(response.data);  // Store daily data in the state\r\n    } catch (error) {\r\n      console.error('Error processing daily data:', error);\r\n    }\r\n  };\r\n\r\n  // Render the distribution graph for daily features\r\n  const renderDistributionGraph = () => {\r\n    if (!dailyData || !dailyData.aggregated_data) return null;\r\n\r\n    const labels = ['Speed(m/s)', 'Acceleration(m/s^2)', 'Jerk(m/s^3)', 'Braking Intensity'];\r\n    const data = [\r\n      cleanValue(dailyData.aggregated_data['Speed(m/s)']),\r\n      cleanValue(dailyData.aggregated_data['Acceleration(m/s^2)']),\r\n      cleanValue(dailyData.aggregated_data['Jerk(m/s^3)']),\r\n      cleanValue(dailyData.aggregated_data['Braking_Intensity'])\r\n    ];\r\n\r\n    const chartData = {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: 'Daily Feature Distribution',\r\n          backgroundColor: ['rgba(255, 99, 132, 0.8)', 'rgba(54, 162, 235, 0.8)', 'rgba(75, 192, 192, 0.8)', 'rgba(153, 102, 255, 0.8)'],\r\n          borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)'],\r\n          borderWidth: 2,\r\n          hoverBackgroundColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)'],\r\n          hoverBorderColor: '#fff',\r\n          hoverBorderWidth: 3,\r\n          data: data,\r\n          barThickness: 50,  // Adjust bar thickness\r\n        }\r\n      ]\r\n    };\r\n\r\n    return (\r\n      <div className=\"distribution-chart-container\">\r\n        <Bar\r\n          data={chartData}\r\n          options={{\r\n            responsive: true,\r\n            scales: {\r\n              y: {\r\n                beginAtZero: true,\r\n                grid: {\r\n                  color: 'rgba(255, 255, 255, 0.1)',\r\n                },\r\n                ticks: {\r\n                  color: '#34495e',\r\n                },\r\n              },\r\n              x: {\r\n                grid: {\r\n                  color: 'rgba(255, 255, 255, 0.1)',\r\n                },\r\n                ticks: {\r\n                  color: '#34495e',\r\n                },\r\n              },\r\n            },\r\n            plugins: {\r\n              legend: {\r\n                labels: {\r\n                  color: '#34495e',\r\n                  font: {\r\n                    size: 14,\r\n                    family: 'Poppins',\r\n                  },\r\n                },\r\n              },\r\n              tooltip: {\r\n                backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n                titleFont: {\r\n                  family: 'Poppins',\r\n                  size: 14,\r\n                },\r\n                bodyFont: {\r\n                  family: 'Poppins',\r\n                  size: 12,\r\n                },\r\n                displayColors: false,\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderChart = (label, data, borderColor, gradientColor) => {\r\n    const chartLabels = data.map((_, index) => `Batch ${index + 1}`);\r\n  \r\n    return (\r\n      <Line\r\n        data={{\r\n          labels: chartLabels,\r\n          datasets: [\r\n            {\r\n              label: label,\r\n              data: data,\r\n              borderColor: borderColor,\r\n              backgroundColor: gradientColor,  // Gradient background\r\n              pointBackgroundColor: '#fff',  // White point dots for contrast\r\n              pointRadius: 5,  // Larger point size for visibility\r\n              borderWidth: 3,  // Thicker lines for more visibility\r\n              fill: true,  // Enable fill under the line\r\n              tension: 0.4,  // Smooth line curves\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          responsive: true,\r\n          animation: {\r\n            duration: 2000,  // Smooth 2-second load animation\r\n          },\r\n          scales: {\r\n            x: {\r\n              grid: {\r\n                color: 'rgba(255, 255, 255, 0.1)',  // Lighter grid lines\r\n              },\r\n              ticks: {\r\n                color: '#34495e',  // Darker text for labels\r\n              },\r\n            },\r\n            y: {\r\n              grid: {\r\n                color: 'rgba(255, 255, 255, 0.1)',  // Lighter grid lines\r\n              },\r\n              ticks: {\r\n                color: '#34495e',  // Darker text for labels\r\n              },\r\n            },\r\n          },\r\n          plugins: {\r\n            legend: {\r\n              labels: {\r\n                color: '#34495e',  // Darker legend labels\r\n                font: {\r\n                  size: 14,\r\n                  family: 'Poppins',\r\n                },\r\n              },\r\n            },\r\n            tooltip: {\r\n              backgroundColor: 'rgba(0, 0, 0, 0.8)',  // Dark tooltip background\r\n              titleFont: {\r\n                family: 'Poppins',\r\n                size: 14,\r\n              },\r\n              bodyFont: {\r\n                family: 'Poppins',\r\n                size: 12,\r\n              },\r\n              displayColors: false,  // Hide color boxes in tooltip\r\n            },\r\n          },\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Driver Dashboard</h2>\r\n\r\n      <div className=\"tracking-controls\">\r\n        <button onClick={toggleTracking}>\r\n          {isTracking ? 'Stop Tracking' : 'Start Tracking'}\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"manual-process-controls\">\r\n        <button onClick={processDailyData}>Process Daily Data</button>\r\n      </div>\r\n\r\n      {/* Map Section */}\r\n      <div className=\"map-section\">\r\n        <h3>Route Map</h3>\r\n        <MapContainer center={[26.6337, 92.7926]} zoom={13} scrollWheelZoom={false} className=\"map-container\">\r\n          <TileLayer\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            attribution=\"&copy; OpenStreetMap contributors\"\r\n          />\r\n          <Polyline positions={route} color=\"blue\" />\r\n\r\n          {markers.map((marker, idx) => (\r\n            <Marker key={idx} position={[marker.lat, marker.lng]} icon={customIcon}>\r\n              <Popup>\r\n                Latitude: {marker.lat}, Longitude: {marker.lng}\r\n              </Popup>\r\n            </Marker>\r\n          ))}\r\n        </MapContainer>\r\n      </div>\r\n\r\n      {/* Charts Section */}\r\n      <div className=\"chart-section\">\r\n        <h3>Driving Feature Fluctuations</h3>\r\n        <div className=\"chart-container\">\r\n          {renderChart('Speed (m/s)', speedData, 'rgba(75, 192, 192, 1)', 'rgba(0, 255, 255, 0.2)')}\r\n          {renderChart('Acceleration (m/s²)', accelerationData, 'rgba(255, 165, 0, 1)', 'rgba(255, 165, 0, 0.2)')}\r\n          {renderChart('Jerk (m/s³)', jerkData, 'rgba(75, 192, 192, 1)', 'rgba(75, 192, 192, 0.2)')}\r\n          {renderChart('Braking Intensity', brakingData, 'rgba(255, 99, 132, 1)', 'rgba(255, 99, 132, 0.2)')}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Distribution Graph for daily data */}\r\n      {renderDistributionGraph()}\r\n\r\n      {/* Display Daily Data */}\r\n      {dailyData ? (\r\n        dailyData.aggregated_data ? (\r\n          <div className=\"daily-data-section\">\r\n            <h3>Daily Driving Performance</h3>\r\n            <p>Driving Score: {dailyData.driving_score}</p>\r\n            <p>Driving Category: {dailyData.driving_category}</p>\r\n            <p>Total Trips: {dailyData.total_trips}</p>\r\n            <p>Total Distance Covered: {dailyData.total_distance_covered_km} km</p>\r\n            <div className=\"aggregated-data\">\r\n              <p>Average Speed: {cleanValue(dailyData.aggregated_data['Speed(m/s)'])} m/s</p>\r\n              <p>Average Acceleration: {cleanValue(dailyData.aggregated_data['Acceleration(m/s^2)'])} m/s²</p>\r\n              <p>Average Jerk: {cleanValue(dailyData.aggregated_data['Jerk(m/s^3)'])} m/s³</p>\r\n              <p>Average Braking Intensity: {cleanValue(dailyData.aggregated_data['Braking_Intensity'])}</p>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <p>Aggregated data is missing.</p>\r\n        )\r\n      ) : (\r\n        <p>No daily data available yet.</p>\r\n      )}\r\n\r\n      {/* Batch Processing Section */}\r\n      <BatchProcessing gpsData={gpsData} />\r\n\r\n      {/* Error Message */}\r\n      {error && <div className=\"error\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}