{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anush\\\\OneDrive\\\\Desktop\\\\minor project\\\\DriveIQ\\\\DriveIQ\\\\DriveIQ-PWA\\\\src\\\\components\\\\Dashboard\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport api from '../../utils/api'; // Assuming you have an API utility\nimport { smartGpsTracking, generateSimulatedRoute } from '../../utils/geolocation';\nimport BatchProcessing from '../BatchProcessing/BatchProcessing';\nimport './Dashboard.scss';\n\n// Register necessary components and scales from Chart.js\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\n// Define custom marker icon\nconst customIcon = new L.Icon({\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34]\n});\nconst Dashboard = () => {\n  _s();\n  const [gpsData, setGpsData] = useState([]);\n  const [speedData, setSpeedData] = useState([]);\n  const [accelerationData, setAccelerationData] = useState([]);\n  const [jerkData, setJerkData] = useState([]);\n  const [brakingData, setBrakingData] = useState([]);\n  const [route, setRoute] = useState([]);\n  const [markers, setMarkers] = useState([]);\n  const [isTracking, setIsTracking] = useState(false);\n  const [error, setError] = useState(null);\n  const [dailyData, setDailyData] = useState(null); // State for daily data\n  const [isLoading, setIsLoading] = useState(false); // State for loading\n\n  const chartRefs = {\n    speedChart: useRef(null),\n    accelerationChart: useRef(null),\n    jerkChart: useRef(null),\n    brakingChart: useRef(null)\n  };\n  const toggleTracking = () => {\n    if (isTracking) {\n      setIsTracking(false);\n    } else {\n      setIsTracking(true);\n      startTracking();\n    }\n  };\n  const startTracking = () => {\n    const simulatedBatches = generateSimulatedRoute(1, 5); // Generate 5 GPS batches\n    simulatedBatches.forEach((batch, index) => {\n      setTimeout(() => processBatch(batch), index * 5000); // Process each batch after 5 seconds\n    });\n  };\n  const processBatch = async batch => {\n    const isMoving = smartGpsTracking(batch.gps_data, gpsData);\n    if (isMoving) {\n      try {\n        const driver_id = localStorage.getItem('driver_id');\n        const response = await api.post('/record-telematics', {\n          driver_id,\n          gps_data: batch.gps_data\n        });\n        const features = response.data.features;\n        if (features) {\n          var _features$SpeedMS, _features$Acceleratio, _features$JerkMS, _features$Braking_Int;\n          const speed = (_features$SpeedMS = features['Speed(m/s)']) !== null && _features$SpeedMS !== void 0 ? _features$SpeedMS : 0;\n          const acceleration = (_features$Acceleratio = features['Acceleration(m/s^2)']) !== null && _features$Acceleratio !== void 0 ? _features$Acceleratio : 0;\n          const jerk = (_features$JerkMS = features['Jerk(m/s^3)']) !== null && _features$JerkMS !== void 0 ? _features$JerkMS : 0;\n          const brakingIntensity = (_features$Braking_Int = features['Braking_Intensity']) !== null && _features$Braking_Int !== void 0 ? _features$Braking_Int : 0;\n          setSpeedData(prevData => [...prevData, speed]);\n          setAccelerationData(prevData => [...prevData, acceleration]);\n          setJerkData(prevData => [...prevData, jerk]);\n          setBrakingData(prevData => [...prevData, brakingIntensity]);\n          setGpsData(prevData => [...prevData, ...batch.gps_data]);\n          const lastPoint = batch.gps_data[batch.gps_data.length - 1];\n          setMarkers(prevMarkers => [...prevMarkers, {\n            lat: lastPoint.Latitude,\n            lng: lastPoint.Longitude\n          }]);\n          setRoute(prevRoute => [...prevRoute, ...batch.gps_data.map(point => [point.Latitude, point.Longitude])]);\n        }\n      } catch (error) {\n        setError('Error processing GPS data. Please try again.');\n      }\n    }\n  };\n  const processDailyData = async () => {\n    const driver_id = localStorage.getItem('driver_id');\n    setIsLoading(true); // Set loading state\n    try {\n      const response = await api.post('/process-daily-data', {\n        driver_id\n      });\n      console.log('Daily Data API Response:', response.data);\n      if (response.data && response.data.aggregated_data) {\n        const sanitizedAggregatedData = Object.fromEntries(Object.entries(response.data.aggregated_data).map(([key, value]) => [key, isNaN(value) ? 0 : value // Replace NaN with 0\n        ]));\n        setDailyData({\n          ...response.data,\n          aggregated_data: sanitizedAggregatedData\n        });\n        console.log('Sanitized Daily Data:', sanitizedAggregatedData);\n      } else {\n        setError('No aggregated data found in response');\n        setDailyData(null);\n      }\n    } catch (error) {\n      setError('Error processing daily data.');\n      console.error('Error processing daily data:', error);\n    } finally {\n      setIsLoading(false); // Stop loading\n    }\n  };\n\n  // Automatically trigger daily data processing at 11:55 PM\n  useEffect(() => {\n    const checkTime = () => {\n      const now = new Date();\n      if (now.getHours() === 23 && now.getMinutes() === 55) {\n        processDailyData();\n      }\n    };\n    const interval = setInterval(checkTime, 60000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Destroy charts when component unmounts\n  useEffect(() => {\n    return () => {\n      Object.values(chartRefs).forEach(ref => {\n        if (ref.current) {\n          ref.current.destroy();\n        }\n      });\n    };\n  }, []);\n  const renderChart = (label, data, borderColor, ref) => {\n    const chartLabels = data.map((_, index) => `Batch ${index + 1}`);\n    return /*#__PURE__*/_jsxDEV(Line, {\n      ref: ref,\n      data: {\n        labels: chartLabels,\n        datasets: [{\n          label: label,\n          data: data,\n          borderColor: borderColor,\n          fill: false\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Driver Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tracking-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleTracking,\n        children: isTracking ? 'Stop Tracking' : 'Start Tracking'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: processDailyData,\n        children: \"Process Daily Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Route Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [26.6337, 92.7926],\n        zoom: 13,\n        scrollWheelZoom: false,\n        className: \"map-container\",\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 OpenStreetMap contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n          positions: route,\n          color: \"blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), markers.map((marker, idx) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: [marker.lat, marker.lng],\n          icon: customIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [\"Latitude: \", marker.lat, \", Longitude: \", marker.lng]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Driving Feature Fluctuations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [renderChart('Speed (m/s)', speedData, 'rgba(75, 192, 192, 1)', chartRefs.speedChart), renderChart('Acceleration (m/sÂ²)', accelerationData, 'rgba(255, 99, 132, 1)', chartRefs.accelerationChart), renderChart('Jerk (m/sÂ³)', jerkData, 'rgba(54, 162, 235, 1)', chartRefs.jerkChart), renderChart('Braking Intensity', brakingData, 'rgba(153, 102, 255, 1)', chartRefs.brakingChart)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading daily data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }, this) : dailyData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daily-data-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Daily Driving Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Driving Score:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 14\n        }, this), \" \", dailyData.driving_score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Driving Category:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 14\n        }, this), \" \", dailyData.driving_category]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.entries(dailyData.aggregated_data).map(([key, value], index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [key, \": \", isNaN(value) ? 0 : value, \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Total Distance Covered (km):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 14\n        }, this), \" \", dailyData.total_distance_covered_km]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Total Trips:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 14\n        }, this), \" \", dailyData.total_trips]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No daily data available yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(BatchProcessing, {\n      gpsData: gpsData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"cWYdp5+2AKXn27iKu0P9PU/eSi8=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Line","MapContainer","TileLayer","Marker","Popup","Polyline","L","api","smartGpsTracking","generateSimulatedRoute","BatchProcessing","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","customIcon","Icon","iconUrl","require","iconSize","iconAnchor","popupAnchor","Dashboard","_s","gpsData","setGpsData","speedData","setSpeedData","accelerationData","setAccelerationData","jerkData","setJerkData","brakingData","setBrakingData","route","setRoute","markers","setMarkers","isTracking","setIsTracking","error","setError","dailyData","setDailyData","isLoading","setIsLoading","chartRefs","speedChart","accelerationChart","jerkChart","brakingChart","toggleTracking","startTracking","simulatedBatches","forEach","batch","index","setTimeout","processBatch","isMoving","gps_data","driver_id","localStorage","getItem","response","post","features","data","_features$SpeedMS","_features$Acceleratio","_features$JerkMS","_features$Braking_Int","speed","acceleration","jerk","brakingIntensity","prevData","lastPoint","length","prevMarkers","lat","Latitude","lng","Longitude","prevRoute","map","point","processDailyData","console","log","aggregated_data","sanitizedAggregatedData","Object","fromEntries","entries","key","value","isNaN","checkTime","now","Date","getHours","getMinutes","interval","setInterval","clearInterval","values","ref","current","destroy","renderChart","label","borderColor","chartLabels","_","labels","datasets","fill","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","center","zoom","scrollWheelZoom","url","attribution","positions","color","marker","idx","position","icon","driving_score","driving_category","total_distance_covered_km","total_trips","_c","$RefreshReg$"],"sources":["C:/Users/anush/OneDrive/Desktop/minor project/DriveIQ/DriveIQ/DriveIQ-PWA/src/components/Dashboard/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\nimport api from '../../utils/api'; // Assuming you have an API utility\r\nimport { smartGpsTracking, generateSimulatedRoute } from '../../utils/geolocation';\r\nimport BatchProcessing from '../BatchProcessing/BatchProcessing';\r\nimport './Dashboard.scss';\r\n\r\n// Register necessary components and scales from Chart.js\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\r\n\r\n// Define custom marker icon\r\nconst customIcon = new L.Icon({\r\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n  iconSize: [25, 41],\r\n  iconAnchor: [12, 41],\r\n  popupAnchor: [1, -34],\r\n});\r\n\r\nconst Dashboard = () => {\r\n  const [gpsData, setGpsData] = useState([]);\r\n  const [speedData, setSpeedData] = useState([]);\r\n  const [accelerationData, setAccelerationData] = useState([]);\r\n  const [jerkData, setJerkData] = useState([]);\r\n  const [brakingData, setBrakingData] = useState([]);\r\n  const [route, setRoute] = useState([]);\r\n  const [markers, setMarkers] = useState([]);\r\n  const [isTracking, setIsTracking] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [dailyData, setDailyData] = useState(null); // State for daily data\r\n  const [isLoading, setIsLoading] = useState(false); // State for loading\r\n\r\n  const chartRefs = {\r\n    speedChart: useRef(null),\r\n    accelerationChart: useRef(null),\r\n    jerkChart: useRef(null),\r\n    brakingChart: useRef(null),\r\n  };\r\n\r\n  const toggleTracking = () => {\r\n    if (isTracking) {\r\n      setIsTracking(false);\r\n    } else {\r\n      setIsTracking(true);\r\n      startTracking();\r\n    }\r\n  };\r\n\r\n  const startTracking = () => {\r\n    const simulatedBatches = generateSimulatedRoute(1, 5); // Generate 5 GPS batches\r\n    simulatedBatches.forEach((batch, index) => {\r\n      setTimeout(() => processBatch(batch), index * 5000); // Process each batch after 5 seconds\r\n    });\r\n  };\r\n\r\n  const processBatch = async (batch) => {\r\n    const isMoving = smartGpsTracking(batch.gps_data, gpsData);\r\n    if (isMoving) {\r\n      try {\r\n        const driver_id = localStorage.getItem('driver_id');\r\n        const response = await api.post('/record-telematics', {\r\n          driver_id,\r\n          gps_data: batch.gps_data,\r\n        });\r\n\r\n        const features = response.data.features;\r\n        if (features) {\r\n          const speed = features['Speed(m/s)'] ?? 0;\r\n          const acceleration = features['Acceleration(m/s^2)'] ?? 0;\r\n          const jerk = features['Jerk(m/s^3)'] ?? 0;\r\n          const brakingIntensity = features['Braking_Intensity'] ?? 0;\r\n\r\n          setSpeedData((prevData) => [...prevData, speed]);\r\n          setAccelerationData((prevData) => [...prevData, acceleration]);\r\n          setJerkData((prevData) => [...prevData, jerk]);\r\n          setBrakingData((prevData) => [...prevData, brakingIntensity]);\r\n\r\n          setGpsData((prevData) => [...prevData, ...batch.gps_data]);\r\n\r\n          const lastPoint = batch.gps_data[batch.gps_data.length - 1];\r\n          setMarkers((prevMarkers) => [\r\n            ...prevMarkers,\r\n            { lat: lastPoint.Latitude, lng: lastPoint.Longitude },\r\n          ]);\r\n\r\n          setRoute((prevRoute) => [\r\n            ...prevRoute,\r\n            ...batch.gps_data.map((point) => [point.Latitude, point.Longitude]),\r\n          ]);\r\n        }\r\n      } catch (error) {\r\n        setError('Error processing GPS data. Please try again.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const processDailyData = async () => {\r\n    const driver_id = localStorage.getItem('driver_id');\r\n    setIsLoading(true); // Set loading state\r\n    try {\r\n      const response = await api.post('/process-daily-data', { driver_id });\r\n      console.log('Daily Data API Response:', response.data);\r\n\r\n      if (response.data && response.data.aggregated_data) {\r\n        const sanitizedAggregatedData = Object.fromEntries(\r\n          Object.entries(response.data.aggregated_data).map(([key, value]) => [\r\n            key,\r\n            isNaN(value) ? 0 : value, // Replace NaN with 0\r\n          ])\r\n        );\r\n\r\n        setDailyData({\r\n          ...response.data,\r\n          aggregated_data: sanitizedAggregatedData,\r\n        });\r\n\r\n        console.log('Sanitized Daily Data:', sanitizedAggregatedData);\r\n      } else {\r\n        setError('No aggregated data found in response');\r\n        setDailyData(null);\r\n      }\r\n    } catch (error) {\r\n      setError('Error processing daily data.');\r\n      console.error('Error processing daily data:', error);\r\n    } finally {\r\n      setIsLoading(false); // Stop loading\r\n    }\r\n  };\r\n\r\n  // Automatically trigger daily data processing at 11:55 PM\r\n  useEffect(() => {\r\n    const checkTime = () => {\r\n      const now = new Date();\r\n      if (now.getHours() === 23 && now.getMinutes() === 55) {\r\n        processDailyData();\r\n      }\r\n    };\r\n\r\n    const interval = setInterval(checkTime, 60000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Destroy charts when component unmounts\r\n  useEffect(() => {\r\n    return () => {\r\n      Object.values(chartRefs).forEach((ref) => {\r\n        if (ref.current) {\r\n          ref.current.destroy();\r\n        }\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  const renderChart = (label, data, borderColor, ref) => {\r\n    const chartLabels = data.map((_, index) => `Batch ${index + 1}`);\r\n    return (\r\n      <Line\r\n        ref={ref}\r\n        data={{\r\n          labels: chartLabels,\r\n          datasets: [\r\n            {\r\n              label: label,\r\n              data: data,\r\n              borderColor: borderColor,\r\n              fill: false,\r\n            },\r\n          ],\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Driver Dashboard</h2>\r\n\r\n      <div className=\"tracking-controls\">\r\n        <button onClick={toggleTracking}>\r\n          {isTracking ? 'Stop Tracking' : 'Start Tracking'}\r\n        </button>\r\n        <button onClick={processDailyData}>Process Daily Data</button>\r\n      </div>\r\n\r\n      {/* Map Section */}\r\n      <div className=\"map-section\">\r\n        <h3>Route Map</h3>\r\n        <MapContainer center={[26.6337, 92.7926]} zoom={13} scrollWheelZoom={false} className=\"map-container\">\r\n          <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" attribution=\"&copy; OpenStreetMap contributors\" />\r\n          <Polyline positions={route} color=\"blue\" />\r\n          {markers.map((marker, idx) => (\r\n            <Marker key={idx} position={[marker.lat, marker.lng]} icon={customIcon}>\r\n              <Popup>\r\n                Latitude: {marker.lat}, Longitude: {marker.lng}\r\n              </Popup>\r\n            </Marker>\r\n          ))}\r\n        </MapContainer>\r\n      </div>\r\n\r\n      {/* Charts Section */}\r\n      <div className=\"chart-section\">\r\n        <h3>Driving Feature Fluctuations</h3>\r\n        <div className=\"chart-container\">\r\n          {renderChart('Speed (m/s)', speedData, 'rgba(75, 192, 192, 1)', chartRefs.speedChart)}\r\n          {renderChart('Acceleration (m/sÂ²)', accelerationData, 'rgba(255, 99, 132, 1)', chartRefs.accelerationChart)}\r\n          {renderChart('Jerk (m/sÂ³)', jerkData, 'rgba(54, 162, 235, 1)', chartRefs.jerkChart)}\r\n          {renderChart('Braking Intensity', brakingData, 'rgba(153, 102, 255, 1)', chartRefs.brakingChart)}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Display Daily Data */}\r\n      {isLoading ? (\r\n        <p>Loading daily data...</p>\r\n      ) : dailyData ? (\r\n        <div className=\"daily-data-section\">\r\n          <h3>Daily Driving Data</h3>\r\n          <p><strong>Driving Score:</strong> {dailyData.driving_score}</p>\r\n          <p><strong>Driving Category:</strong> {dailyData.driving_category}</p>\r\n          <ul>\r\n            {Object.entries(dailyData.aggregated_data).map(([key, value], index) => (\r\n              <li key={index}>\r\n                {key}: {isNaN(value) ? 0 : value} {/* Replace NaN with 0 */}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <p><strong>Total Distance Covered (km):</strong> {dailyData.total_distance_covered_km}</p>\r\n          <p><strong>Total Trips:</strong> {dailyData.total_trips}</p>\r\n        </div>\r\n      ) : (\r\n        <p>No daily data available yet.</p>\r\n      )}\r\n\r\n      {/* Batch Processing Section */}\r\n      <BatchProcessing gpsData={gpsData} />\r\n\r\n      {/* Error Message */}\r\n      {error && <div className=\"error\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,eAAe;AAChF,OAAO,0BAA0B;AACjC,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAOC,GAAG,MAAM,iBAAiB,CAAC,CAAC;AACnC,SAASC,gBAAgB,EAAEC,sBAAsB,QAAQ,yBAAyB;AAClF,OAAOC,eAAe,MAAM,oCAAoC;AAChE,OAAO,kBAAkB;;AAEzB;AACA,SAASC,KAAK,IAAIC,OAAO,EAAEC,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC3HT,OAAO,CAACU,QAAQ,CAACT,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;;AAE/F;AACA,MAAMI,UAAU,GAAG,IAAIjB,CAAC,CAACkB,IAAI,CAAC;EAC5BC,OAAO,EAAEC,OAAO,CAAC,qCAAqC,CAAC;EACvDC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EACpBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;AACtB,CAAC,CAAC;AAEF,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACqC,SAAS,EAAEC,YAAY,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACuC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACyC,QAAQ,EAAEC,WAAW,CAAC,GAAG1C,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC2C,WAAW,EAAEC,cAAc,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC6C,KAAK,EAAEC,QAAQ,CAAC,GAAG9C,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC+C,OAAO,EAAEC,UAAU,CAAC,GAAGhD,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACiD,UAAU,EAAEC,aAAa,CAAC,GAAGlD,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACmD,KAAK,EAAEC,QAAQ,CAAC,GAAGpD,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACqD,SAAS,EAAEC,YAAY,CAAC,GAAGtD,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAClD,MAAM,CAACuD,SAAS,EAAEC,YAAY,CAAC,GAAGxD,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEnD,MAAMyD,SAAS,GAAG;IAChBC,UAAU,EAAExD,MAAM,CAAC,IAAI,CAAC;IACxByD,iBAAiB,EAAEzD,MAAM,CAAC,IAAI,CAAC;IAC/B0D,SAAS,EAAE1D,MAAM,CAAC,IAAI,CAAC;IACvB2D,YAAY,EAAE3D,MAAM,CAAC,IAAI;EAC3B,CAAC;EAED,MAAM4D,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIb,UAAU,EAAE;MACdC,aAAa,CAAC,KAAK,CAAC;IACtB,CAAC,MAAM;MACLA,aAAa,CAAC,IAAI,CAAC;MACnBa,aAAa,CAAC,CAAC;IACjB;EACF,CAAC;EAED,MAAMA,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,gBAAgB,GAAGpD,sBAAsB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACvDoD,gBAAgB,CAACC,OAAO,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;MACzCC,UAAU,CAAC,MAAMC,YAAY,CAACH,KAAK,CAAC,EAAEC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;IACvD,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,YAAY,GAAG,MAAOH,KAAK,IAAK;IACpC,MAAMI,QAAQ,GAAG3D,gBAAgB,CAACuD,KAAK,CAACK,QAAQ,EAAEpC,OAAO,CAAC;IAC1D,IAAImC,QAAQ,EAAE;MACZ,IAAI;QACF,MAAME,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QACnD,MAAMC,QAAQ,GAAG,MAAMjE,GAAG,CAACkE,IAAI,CAAC,oBAAoB,EAAE;UACpDJ,SAAS;UACTD,QAAQ,EAAEL,KAAK,CAACK;QAClB,CAAC,CAAC;QAEF,MAAMM,QAAQ,GAAGF,QAAQ,CAACG,IAAI,CAACD,QAAQ;QACvC,IAAIA,QAAQ,EAAE;UAAA,IAAAE,iBAAA,EAAAC,qBAAA,EAAAC,gBAAA,EAAAC,qBAAA;UACZ,MAAMC,KAAK,IAAAJ,iBAAA,GAAGF,QAAQ,CAAC,YAAY,CAAC,cAAAE,iBAAA,cAAAA,iBAAA,GAAI,CAAC;UACzC,MAAMK,YAAY,IAAAJ,qBAAA,GAAGH,QAAQ,CAAC,qBAAqB,CAAC,cAAAG,qBAAA,cAAAA,qBAAA,GAAI,CAAC;UACzD,MAAMK,IAAI,IAAAJ,gBAAA,GAAGJ,QAAQ,CAAC,aAAa,CAAC,cAAAI,gBAAA,cAAAA,gBAAA,GAAI,CAAC;UACzC,MAAMK,gBAAgB,IAAAJ,qBAAA,GAAGL,QAAQ,CAAC,mBAAmB,CAAC,cAAAK,qBAAA,cAAAA,qBAAA,GAAI,CAAC;UAE3D5C,YAAY,CAAEiD,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAEJ,KAAK,CAAC,CAAC;UAChD3C,mBAAmB,CAAE+C,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAEH,YAAY,CAAC,CAAC;UAC9D1C,WAAW,CAAE6C,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAEF,IAAI,CAAC,CAAC;UAC9CzC,cAAc,CAAE2C,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAED,gBAAgB,CAAC,CAAC;UAE7DlD,UAAU,CAAEmD,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAE,GAAGrB,KAAK,CAACK,QAAQ,CAAC,CAAC;UAE1D,MAAMiB,SAAS,GAAGtB,KAAK,CAACK,QAAQ,CAACL,KAAK,CAACK,QAAQ,CAACkB,MAAM,GAAG,CAAC,CAAC;UAC3DzC,UAAU,CAAE0C,WAAW,IAAK,CAC1B,GAAGA,WAAW,EACd;YAAEC,GAAG,EAAEH,SAAS,CAACI,QAAQ;YAAEC,GAAG,EAAEL,SAAS,CAACM;UAAU,CAAC,CACtD,CAAC;UAEFhD,QAAQ,CAAEiD,SAAS,IAAK,CACtB,GAAGA,SAAS,EACZ,GAAG7B,KAAK,CAACK,QAAQ,CAACyB,GAAG,CAAEC,KAAK,IAAK,CAACA,KAAK,CAACL,QAAQ,EAAEK,KAAK,CAACH,SAAS,CAAC,CAAC,CACpE,CAAC;QACJ;MACF,CAAC,CAAC,OAAO3C,KAAK,EAAE;QACdC,QAAQ,CAAC,8CAA8C,CAAC;MAC1D;IACF;EACF,CAAC;EAED,MAAM8C,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,MAAM1B,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACnDlB,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;IACpB,IAAI;MACF,MAAMmB,QAAQ,GAAG,MAAMjE,GAAG,CAACkE,IAAI,CAAC,qBAAqB,EAAE;QAAEJ;MAAU,CAAC,CAAC;MACrE2B,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEzB,QAAQ,CAACG,IAAI,CAAC;MAEtD,IAAIH,QAAQ,CAACG,IAAI,IAAIH,QAAQ,CAACG,IAAI,CAACuB,eAAe,EAAE;QAClD,MAAMC,uBAAuB,GAAGC,MAAM,CAACC,WAAW,CAChDD,MAAM,CAACE,OAAO,CAAC9B,QAAQ,CAACG,IAAI,CAACuB,eAAe,CAAC,CAACL,GAAG,CAAC,CAAC,CAACU,GAAG,EAAEC,KAAK,CAAC,KAAK,CAClED,GAAG,EACHE,KAAK,CAACD,KAAK,CAAC,GAAG,CAAC,GAAGA,KAAK,CAAE;QAAA,CAC3B,CACH,CAAC;QAEDrD,YAAY,CAAC;UACX,GAAGqB,QAAQ,CAACG,IAAI;UAChBuB,eAAe,EAAEC;QACnB,CAAC,CAAC;QAEFH,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEE,uBAAuB,CAAC;MAC/D,CAAC,MAAM;QACLlD,QAAQ,CAAC,sCAAsC,CAAC;QAChDE,YAAY,CAAC,IAAI,CAAC;MACpB;IACF,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdC,QAAQ,CAAC,8BAA8B,CAAC;MACxC+C,OAAO,CAAChD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,SAAS;MACRK,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB;EACF,CAAC;;EAED;EACAvD,SAAS,CAAC,MAAM;IACd,MAAM4G,SAAS,GAAGA,CAAA,KAAM;MACtB,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;MACtB,IAAID,GAAG,CAACE,QAAQ,CAAC,CAAC,KAAK,EAAE,IAAIF,GAAG,CAACG,UAAU,CAAC,CAAC,KAAK,EAAE,EAAE;QACpDf,gBAAgB,CAAC,CAAC;MACpB;IACF,CAAC;IAED,MAAMgB,QAAQ,GAAGC,WAAW,CAACN,SAAS,EAAE,KAAK,CAAC;IAC9C,OAAO,MAAMO,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAjH,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACXsG,MAAM,CAACc,MAAM,CAAC5D,SAAS,CAAC,CAACQ,OAAO,CAAEqD,GAAG,IAAK;QACxC,IAAIA,GAAG,CAACC,OAAO,EAAE;UACfD,GAAG,CAACC,OAAO,CAACC,OAAO,CAAC,CAAC;QACvB;MACF,CAAC,CAAC;IACJ,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAE5C,IAAI,EAAE6C,WAAW,EAAEL,GAAG,KAAK;IACrD,MAAMM,WAAW,GAAG9C,IAAI,CAACkB,GAAG,CAAC,CAAC6B,CAAC,EAAE1D,KAAK,KAAK,SAASA,KAAK,GAAG,CAAC,EAAE,CAAC;IAChE,oBACE3C,OAAA,CAACrB,IAAI;MACHmH,GAAG,EAAEA,GAAI;MACTxC,IAAI,EAAE;QACJgD,MAAM,EAAEF,WAAW;QACnBG,QAAQ,EAAE,CACR;UACEL,KAAK,EAAEA,KAAK;UACZ5C,IAAI,EAAEA,IAAI;UACV6C,WAAW,EAAEA,WAAW;UACxBK,IAAI,EAAE;QACR,CAAC;MAEL;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEN,CAAC;EAED,oBACE5G,OAAA;IAAK6G,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClC9G,OAAA;MAAA8G,QAAA,EAAI;IAAgB;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEzB5G,OAAA;MAAK6G,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChC9G,OAAA;QAAQ+G,OAAO,EAAEzE,cAAe;QAAAwE,QAAA,EAC7BrF,UAAU,GAAG,eAAe,GAAG;MAAgB;QAAAgF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eACT5G,OAAA;QAAQ+G,OAAO,EAAErC,gBAAiB;QAAAoC,QAAA,EAAC;MAAkB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC,eAGN5G,OAAA;MAAK6G,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1B9G,OAAA;QAAA8G,QAAA,EAAI;MAAS;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClB5G,OAAA,CAACpB,YAAY;QAACoI,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,CAAE;QAACC,IAAI,EAAE,EAAG;QAACC,eAAe,EAAE,KAAM;QAACL,SAAS,EAAC,eAAe;QAAAC,QAAA,gBACnG9G,OAAA,CAACnB,SAAS;UAACsI,GAAG,EAAC,oDAAoD;UAACC,WAAW,EAAC;QAAmC;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACtH5G,OAAA,CAAChB,QAAQ;UAACqI,SAAS,EAAEhG,KAAM;UAACiG,KAAK,EAAC;QAAM;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAC1CrF,OAAO,CAACiD,GAAG,CAAC,CAAC+C,MAAM,EAAEC,GAAG,kBACvBxH,OAAA,CAAClB,MAAM;UAAW2I,QAAQ,EAAE,CAACF,MAAM,CAACpD,GAAG,EAAEoD,MAAM,CAAClD,GAAG,CAAE;UAACqD,IAAI,EAAExH,UAAW;UAAA4G,QAAA,eACrE9G,OAAA,CAACjB,KAAK;YAAA+H,QAAA,GAAC,YACK,EAACS,MAAM,CAACpD,GAAG,EAAC,eAAa,EAACoD,MAAM,CAAClD,GAAG;UAAA;YAAAoC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC;QAAC,GAHGY,GAAG;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIR,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACU,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eAGN5G,OAAA;MAAK6G,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5B9G,OAAA;QAAA8G,QAAA,EAAI;MAA4B;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrC5G,OAAA;QAAK6G,SAAS,EAAC,iBAAiB;QAAAC,QAAA,GAC7Bb,WAAW,CAAC,aAAa,EAAEpF,SAAS,EAAE,uBAAuB,EAAEoB,SAAS,CAACC,UAAU,CAAC,EACpF+D,WAAW,CAAC,qBAAqB,EAAElF,gBAAgB,EAAE,uBAAuB,EAAEkB,SAAS,CAACE,iBAAiB,CAAC,EAC1G8D,WAAW,CAAC,aAAa,EAAEhF,QAAQ,EAAE,uBAAuB,EAAEgB,SAAS,CAACG,SAAS,CAAC,EAClF6D,WAAW,CAAC,mBAAmB,EAAE9E,WAAW,EAAE,wBAAwB,EAAEc,SAAS,CAACI,YAAY,CAAC;MAAA;QAAAoE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7F,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGL7E,SAAS,gBACR/B,OAAA;MAAA8G,QAAA,EAAG;IAAqB;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAC1B/E,SAAS,gBACX7B,OAAA;MAAK6G,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjC9G,OAAA;QAAA8G,QAAA,EAAI;MAAkB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3B5G,OAAA;QAAA8G,QAAA,gBAAG9G,OAAA;UAAA8G,QAAA,EAAQ;QAAc;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC/E,SAAS,CAAC8F,aAAa;MAAA;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChE5G,OAAA;QAAA8G,QAAA,gBAAG9G,OAAA;UAAA8G,QAAA,EAAQ;QAAiB;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC/E,SAAS,CAAC+F,gBAAgB;MAAA;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtE5G,OAAA;QAAA8G,QAAA,EACG/B,MAAM,CAACE,OAAO,CAACpD,SAAS,CAACgD,eAAe,CAAC,CAACL,GAAG,CAAC,CAAC,CAACU,GAAG,EAAEC,KAAK,CAAC,EAAExC,KAAK,kBACjE3C,OAAA;UAAA8G,QAAA,GACG5B,GAAG,EAAC,IAAE,EAACE,KAAK,CAACD,KAAK,CAAC,GAAG,CAAC,GAAGA,KAAK,EAAC,GAAC;QAAA,GAD3BxC,KAAK;UAAA8D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACL5G,OAAA;QAAA8G,QAAA,gBAAG9G,OAAA;UAAA8G,QAAA,EAAQ;QAA4B;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC/E,SAAS,CAACgG,yBAAyB;MAAA;QAAApB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1F5G,OAAA;QAAA8G,QAAA,gBAAG9G,OAAA;UAAA8G,QAAA,EAAQ;QAAY;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC/E,SAAS,CAACiG,WAAW;MAAA;QAAArB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC,gBAEN5G,OAAA;MAAA8G,QAAA,EAAG;IAA4B;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACnC,eAGD5G,OAAA,CAACX,eAAe;MAACsB,OAAO,EAAEA;IAAQ;MAAA8F,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAGpCjF,KAAK,iBAAI3B,OAAA;MAAK6G,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEnF;IAAK;MAAA8E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAAClG,EAAA,CA7NID,SAAS;AAAAsH,EAAA,GAATtH,SAAS;AA+Nf,eAAeA,SAAS;AAAC,IAAAsH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}