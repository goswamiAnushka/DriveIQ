{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anush\\\\OneDrive\\\\Desktop\\\\minor project\\\\DriveIQ\\\\DriveIQ\\\\DriveIQ-PWA\\\\src\\\\components\\\\Dashboard\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\n// src/components/Dashboard/Dashboard.jsx\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { MapContainer, TileLayer, Polyline } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport api from '../../utils/api';\nimport { getCurrentLocation, simulateGpsData, smartGpsTracking, generateSimulatedRoute } from '../../utils/geolocation';\nimport './Dashboard.scss';\nimport BatchProcessing from '../BatchProcessing/BatchProcessing';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [gpsData, setGpsData] = useState([]);\n  const [chartData, setChartData] = useState(null);\n  const [route, setRoute] = useState([]);\n  const [isTracking, setIsTracking] = useState(false);\n  const [dailyResults, setDailyResults] = useState(null);\n\n  // **1. Start or stop GPS tracking**\n  const toggleTracking = () => {\n    if (isTracking) {\n      setIsTracking(false);\n    } else {\n      setIsTracking(true);\n      startTracking();\n    }\n  };\n\n  // **Simulate GPS tracking for testing**\n  const startTracking = () => {\n    const simulatedBatches = generateSimulatedRoute(1, 5); // Generate 5 GPS batches for driver_id 1\n    simulatedBatches.forEach((batch, index) => {\n      setTimeout(() => processBatch(batch), index * 5000); // Process each batch after 5 seconds\n    });\n  };\n\n  // **2. Process each batch of GPS data**\n  const processBatch = async batch => {\n    const isMoving = smartGpsTracking(batch.gps_data, gpsData); // Check if car is moving\n\n    if (isMoving) {\n      try {\n        const driver_id = localStorage.getItem('driver_id'); // Get driver ID from localStorage\n        const response = await api.post('/record-telematics', {\n          driver_id,\n          gps_data: batch.gps_data // Send GPS data for processing\n        });\n\n        // Update route for map display\n        setGpsData(prevData => [...prevData, ...batch.gps_data]);\n        setRoute(prevRoute => [...prevRoute, ...batch.gps_data.map(point => [point.Latitude, point.Longitude])]);\n\n        // **Update chart** with telematics features (speed, acceleration)\n        updateChart(response.data.features);\n      } catch (error) {\n        console.error('Error recording telematics data:', error);\n      }\n    }\n  };\n\n  // **3. Update the chart with new telematics data**\n  const updateChart = features => {\n    const chartLabels = features.map((_, i) => `Batch ${i + 1}`);\n    setChartData({\n      labels: chartLabels,\n      datasets: [{\n        label: 'Speed (m/s)',\n        data: features.map(f => f['Speed(m/s)']),\n        borderColor: 'rgba(75, 192, 192, 1)',\n        fill: false\n      }, {\n        label: 'Acceleration (m/sÂ²)',\n        data: features.map(f => f['Acceleration(m/s^2)']),\n        borderColor: 'rgba(255, 99, 132, 1)',\n        fill: false\n      }]\n    });\n  };\n\n  // **4. Automatically call `process_daily_data` at midnight**\n  const fetchDailyResults = async () => {\n    const driver_id = localStorage.getItem('driver_id');\n    const response = await api.post('/process-daily-data', {\n      driver_id\n    });\n    setDailyResults(response.data);\n  };\n  useEffect(() => {\n    const checkForMidnight = () => {\n      const currentTime = new Date();\n      const isMidnight = currentTime.getHours() === 0 && currentTime.getMinutes() === 0;\n      if (isMidnight) {\n        fetchDailyResults(); // Automatically call `process_daily_data` at midnight\n      }\n    };\n    const intervalId = setInterval(checkForMidnight, 60000); // Check every minute\n    return () => clearInterval(intervalId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Driver Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tracking-controls\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleTracking,\n        children: isTracking ? 'Stop Tracking' : 'Start Tracking'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Route Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [26.6337, 92.7926],\n        zoom: 14,\n        scrollWheelZoom: false,\n        className: \"map-container\",\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 OpenStreetMap contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n          positions: route,\n          color: \"blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Driving Feature Fluctuations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), chartData ? /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No data available yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 50\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daily-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Daily Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), dailyResults ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Distance: \", dailyResults.total_distance_covered_km, \" km\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Driving Score: \", dailyResults.driving_score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Driving Category: \", dailyResults.driving_category]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No daily results yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BatchProcessing, {\n      gpsData: gpsData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"gc2za3I0EucU7CX2K2TcRgiV6ac=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Line","MapContainer","TileLayer","Polyline","api","getCurrentLocation","simulateGpsData","smartGpsTracking","generateSimulatedRoute","BatchProcessing","jsxDEV","_jsxDEV","Dashboard","_s","gpsData","setGpsData","chartData","setChartData","route","setRoute","isTracking","setIsTracking","dailyResults","setDailyResults","toggleTracking","startTracking","simulatedBatches","forEach","batch","index","setTimeout","processBatch","isMoving","gps_data","driver_id","localStorage","getItem","response","post","prevData","prevRoute","map","point","Latitude","Longitude","updateChart","data","features","error","console","chartLabels","_","i","labels","datasets","label","f","borderColor","fill","fetchDailyResults","checkForMidnight","currentTime","Date","isMidnight","getHours","getMinutes","intervalId","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","center","zoom","scrollWheelZoom","url","attribution","positions","color","total_distance_covered_km","driving_score","driving_category","_c","$RefreshReg$"],"sources":["C:/Users/anush/OneDrive/Desktop/minor project/DriveIQ/DriveIQ/DriveIQ-PWA/src/components/Dashboard/Dashboard.jsx"],"sourcesContent":["// src/components/Dashboard/Dashboard.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { MapContainer, TileLayer, Polyline } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport api from '../../utils/api';\r\nimport { getCurrentLocation, simulateGpsData, smartGpsTracking, generateSimulatedRoute } from '../../utils/geolocation';\r\nimport './Dashboard.scss';\r\nimport BatchProcessing from '../BatchProcessing/BatchProcessing';\r\n\r\nconst Dashboard = () => {\r\n  const [gpsData, setGpsData] = useState([]);\r\n  const [chartData, setChartData] = useState(null);\r\n  const [route, setRoute] = useState([]);\r\n  const [isTracking, setIsTracking] = useState(false);\r\n  const [dailyResults, setDailyResults] = useState(null);\r\n\r\n  // **1. Start or stop GPS tracking**\r\n  const toggleTracking = () => {\r\n    if (isTracking) {\r\n      setIsTracking(false);\r\n    } else {\r\n      setIsTracking(true);\r\n      startTracking();\r\n    }\r\n  };\r\n\r\n  // **Simulate GPS tracking for testing**\r\n  const startTracking = () => {\r\n    const simulatedBatches = generateSimulatedRoute(1, 5); // Generate 5 GPS batches for driver_id 1\r\n    simulatedBatches.forEach((batch, index) => {\r\n      setTimeout(() => processBatch(batch), index * 5000); // Process each batch after 5 seconds\r\n    });\r\n  };\r\n\r\n  // **2. Process each batch of GPS data**\r\n  const processBatch = async (batch) => {\r\n    const isMoving = smartGpsTracking(batch.gps_data, gpsData); // Check if car is moving\r\n\r\n    if (isMoving) {\r\n      try {\r\n        const driver_id = localStorage.getItem('driver_id'); // Get driver ID from localStorage\r\n        const response = await api.post('/record-telematics', {\r\n          driver_id,\r\n          gps_data: batch.gps_data, // Send GPS data for processing\r\n        });\r\n\r\n        // Update route for map display\r\n        setGpsData((prevData) => [...prevData, ...batch.gps_data]);\r\n        setRoute((prevRoute) => [\r\n          ...prevRoute,\r\n          ...batch.gps_data.map((point) => [point.Latitude, point.Longitude]),\r\n        ]);\r\n\r\n        // **Update chart** with telematics features (speed, acceleration)\r\n        updateChart(response.data.features);\r\n      } catch (error) {\r\n        console.error('Error recording telematics data:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // **3. Update the chart with new telematics data**\r\n  const updateChart = (features) => {\r\n    const chartLabels = features.map((_, i) => `Batch ${i + 1}`);\r\n    setChartData({\r\n      labels: chartLabels,\r\n      datasets: [\r\n        {\r\n          label: 'Speed (m/s)',\r\n          data: features.map((f) => f['Speed(m/s)']),\r\n          borderColor: 'rgba(75, 192, 192, 1)',\r\n          fill: false,\r\n        },\r\n        {\r\n          label: 'Acceleration (m/sÂ²)',\r\n          data: features.map((f) => f['Acceleration(m/s^2)']),\r\n          borderColor: 'rgba(255, 99, 132, 1)',\r\n          fill: false,\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  // **4. Automatically call `process_daily_data` at midnight**\r\n  const fetchDailyResults = async () => {\r\n    const driver_id = localStorage.getItem('driver_id');\r\n    const response = await api.post('/process-daily-data', { driver_id });\r\n    setDailyResults(response.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const checkForMidnight = () => {\r\n      const currentTime = new Date();\r\n      const isMidnight = currentTime.getHours() === 0 && currentTime.getMinutes() === 0;\r\n\r\n      if (isMidnight) {\r\n        fetchDailyResults(); // Automatically call `process_daily_data` at midnight\r\n      }\r\n    };\r\n\r\n    const intervalId = setInterval(checkForMidnight, 60000); // Check every minute\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Driver Dashboard</h2>\r\n\r\n      <div className=\"tracking-controls\">\r\n        <button onClick={toggleTracking}>\r\n          {isTracking ? 'Stop Tracking' : 'Start Tracking'}\r\n        </button>\r\n      </div>\r\n\r\n      {/* Map Section */}\r\n      <div className=\"map-section\">\r\n        <h3>Route Map</h3>\r\n        <MapContainer center={[26.6337, 92.7926]} zoom={14} scrollWheelZoom={false} className=\"map-container\">\r\n          <TileLayer\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            attribution=\"&copy; OpenStreetMap contributors\"\r\n          />\r\n          <Polyline positions={route} color=\"blue\" />\r\n        </MapContainer>\r\n      </div>\r\n\r\n      {/* Chart Section */}\r\n      <div className=\"chart-section\">\r\n        <h3>Driving Feature Fluctuations</h3>\r\n        {chartData ? <Line data={chartData} /> : <p>No data available yet.</p>}\r\n      </div>\r\n\r\n      {/* Daily Results Section */}\r\n      <div className=\"daily-results\">\r\n        <h3>Daily Results</h3>\r\n        {dailyResults ? (\r\n          <div>\r\n            <p>Total Distance: {dailyResults.total_distance_covered_km} km</p>\r\n            <p>Driving Score: {dailyResults.driving_score}</p>\r\n            <p>Driving Category: {dailyResults.driving_category}</p>\r\n          </div>\r\n        ) : (\r\n          <p>No daily results yet.</p>\r\n        )}\r\n      </div>\r\n\r\n      {/* Batch Processing Component */}\r\n      <BatchProcessing gpsData={gpsData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,YAAY,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,eAAe;AACjE,OAAO,0BAA0B;AACjC,OAAOC,GAAG,MAAM,iBAAiB;AACjC,SAASC,kBAAkB,EAAEC,eAAe,EAAEC,gBAAgB,EAAEC,sBAAsB,QAAQ,yBAAyB;AACvH,OAAO,kBAAkB;AACzB,OAAOC,eAAe,MAAM,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACoB,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACsB,UAAU,EAAEC,aAAa,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACwB,YAAY,EAAEC,eAAe,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACA,MAAM0B,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIJ,UAAU,EAAE;MACdC,aAAa,CAAC,KAAK,CAAC;IACtB,CAAC,MAAM;MACLA,aAAa,CAAC,IAAI,CAAC;MACnBI,aAAa,CAAC,CAAC;IACjB;EACF,CAAC;;EAED;EACA,MAAMA,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,gBAAgB,GAAGlB,sBAAsB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACvDkB,gBAAgB,CAACC,OAAO,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;MACzCC,UAAU,CAAC,MAAMC,YAAY,CAACH,KAAK,CAAC,EAAEC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;IACvD,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAME,YAAY,GAAG,MAAOH,KAAK,IAAK;IACpC,MAAMI,QAAQ,GAAGzB,gBAAgB,CAACqB,KAAK,CAACK,QAAQ,EAAEnB,OAAO,CAAC,CAAC,CAAC;;IAE5D,IAAIkB,QAAQ,EAAE;MACZ,IAAI;QACF,MAAME,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;QACrD,MAAMC,QAAQ,GAAG,MAAMjC,GAAG,CAACkC,IAAI,CAAC,oBAAoB,EAAE;UACpDJ,SAAS;UACTD,QAAQ,EAAEL,KAAK,CAACK,QAAQ,CAAE;QAC5B,CAAC,CAAC;;QAEF;QACAlB,UAAU,CAAEwB,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAE,GAAGX,KAAK,CAACK,QAAQ,CAAC,CAAC;QAC1Dd,QAAQ,CAAEqB,SAAS,IAAK,CACtB,GAAGA,SAAS,EACZ,GAAGZ,KAAK,CAACK,QAAQ,CAACQ,GAAG,CAAEC,KAAK,IAAK,CAACA,KAAK,CAACC,QAAQ,EAAED,KAAK,CAACE,SAAS,CAAC,CAAC,CACpE,CAAC;;QAEF;QACAC,WAAW,CAACR,QAAQ,CAACS,IAAI,CAACC,QAAQ,CAAC;MACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D;IACF;EACF,CAAC;;EAED;EACA,MAAMH,WAAW,GAAIE,QAAQ,IAAK;IAChC,MAAMG,WAAW,GAAGH,QAAQ,CAACN,GAAG,CAAC,CAACU,CAAC,EAAEC,CAAC,KAAK,SAASA,CAAC,GAAG,CAAC,EAAE,CAAC;IAC5DnC,YAAY,CAAC;MACXoC,MAAM,EAAEH,WAAW;MACnBI,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,aAAa;QACpBT,IAAI,EAAEC,QAAQ,CAACN,GAAG,CAAEe,CAAC,IAAKA,CAAC,CAAC,YAAY,CAAC,CAAC;QAC1CC,WAAW,EAAE,uBAAuB;QACpCC,IAAI,EAAE;MACR,CAAC,EACD;QACEH,KAAK,EAAE,qBAAqB;QAC5BT,IAAI,EAAEC,QAAQ,CAACN,GAAG,CAAEe,CAAC,IAAKA,CAAC,CAAC,qBAAqB,CAAC,CAAC;QACnDC,WAAW,EAAE,uBAAuB;QACpCC,IAAI,EAAE;MACR,CAAC;IAEL,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,MAAMzB,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACnD,MAAMC,QAAQ,GAAG,MAAMjC,GAAG,CAACkC,IAAI,CAAC,qBAAqB,EAAE;MAAEJ;IAAU,CAAC,CAAC;IACrEX,eAAe,CAACc,QAAQ,CAACS,IAAI,CAAC;EAChC,CAAC;EAED/C,SAAS,CAAC,MAAM;IACd,MAAM6D,gBAAgB,GAAGA,CAAA,KAAM;MAC7B,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC;MAC9B,MAAMC,UAAU,GAAGF,WAAW,CAACG,QAAQ,CAAC,CAAC,KAAK,CAAC,IAAIH,WAAW,CAACI,UAAU,CAAC,CAAC,KAAK,CAAC;MAEjF,IAAIF,UAAU,EAAE;QACdJ,iBAAiB,CAAC,CAAC,CAAC,CAAC;MACvB;IACF,CAAC;IAED,MAAMO,UAAU,GAAGC,WAAW,CAACP,gBAAgB,EAAE,KAAK,CAAC,CAAC,CAAC;IACzD,OAAO,MAAMQ,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEvD,OAAA;IAAK0D,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClC3D,OAAA;MAAA2D,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEzB/D,OAAA;MAAK0D,SAAS,EAAC,mBAAmB;MAAAC,QAAA,eAChC3D,OAAA;QAAQgE,OAAO,EAAEnD,cAAe;QAAA8C,QAAA,EAC7BlD,UAAU,GAAG,eAAe,GAAG;MAAgB;QAAAmD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGN/D,OAAA;MAAK0D,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1B3D,OAAA;QAAA2D,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClB/D,OAAA,CAACV,YAAY;QAAC2E,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,CAAE;QAACC,IAAI,EAAE,EAAG;QAACC,eAAe,EAAE,KAAM;QAACT,SAAS,EAAC,eAAe;QAAAC,QAAA,gBACnG3D,OAAA,CAACT,SAAS;UACR6E,GAAG,EAAC,oDAAoD;UACxDC,WAAW,EAAC;QAAmC;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC,eACF/D,OAAA,CAACR,QAAQ;UAAC8E,SAAS,EAAE/D,KAAM;UAACgE,KAAK,EAAC;QAAM;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eAGN/D,OAAA;MAAK0D,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5B3D,OAAA;QAAA2D,QAAA,EAAI;MAA4B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACpC1D,SAAS,gBAAGL,OAAA,CAACX,IAAI;QAAC8C,IAAI,EAAE9B;MAAU;QAAAuD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAAG/D,OAAA;QAAA2D,QAAA,EAAG;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE,CAAC,eAGN/D,OAAA;MAAK0D,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5B3D,OAAA;QAAA2D,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACrBpD,YAAY,gBACXX,OAAA;QAAA2D,QAAA,gBACE3D,OAAA;UAAA2D,QAAA,GAAG,kBAAgB,EAAChD,YAAY,CAAC6D,yBAAyB,EAAC,KAAG;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAClE/D,OAAA;UAAA2D,QAAA,GAAG,iBAAe,EAAChD,YAAY,CAAC8D,aAAa;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClD/D,OAAA;UAAA2D,QAAA,GAAG,oBAAkB,EAAChD,YAAY,CAAC+D,gBAAgB;QAAA;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC,gBAEN/D,OAAA;QAAA2D,QAAA,EAAG;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAC5B;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAGN/D,OAAA,CAACF,eAAe;MAACK,OAAO,EAAEA;IAAQ;MAAAyD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEV,CAAC;AAAC7D,EAAA,CA7IID,SAAS;AAAA0E,EAAA,GAAT1E,SAAS;AA+If,eAAeA,SAAS;AAAC,IAAA0E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}