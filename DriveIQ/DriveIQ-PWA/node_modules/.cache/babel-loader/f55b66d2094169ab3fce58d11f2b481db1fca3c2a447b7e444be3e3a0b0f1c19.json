{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anush\\\\OneDrive\\\\Desktop\\\\minor project\\\\DriveIQ\\\\DriveIQ\\\\DriveIQ-PWA\\\\src\\\\components\\\\Dashboard\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport api from '../../utils/api';\nimport { smartGpsTracking, generateSimulatedRoute } from '../../utils/geolocation';\nimport BatchProcessing from '../BatchProcessing/BatchProcessing';\nimport './Dashboard.scss';\n\n// Register Chart.js components\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend);\n\n// Define custom marker icon\nconst customIcon = new L.Icon({\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34]\n});\nconst Dashboard = () => {\n  _s();\n  const [gpsData, setGpsData] = useState([]);\n  const [speedData, setSpeedData] = useState([]);\n  const [accelerationData, setAccelerationData] = useState([]);\n  const [jerkData, setJerkData] = useState([]);\n  const [brakingData, setBrakingData] = useState([]);\n  const [route, setRoute] = useState([]);\n  const [markers, setMarkers] = useState([]);\n  const [isTracking, setIsTracking] = useState(false);\n  const [dailyData, setDailyData] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Function to process daily data after all batches are done\n  const processDailyData = async () => {\n    try {\n      const driver_id = localStorage.getItem('driver_id');\n      const response = await api.post('/process-daily-data', {\n        driver_id\n      });\n      setDailyData(response.data);\n    } catch (error) {\n      console.error('Error fetching daily data:', error);\n      setError('Error processing daily data.');\n    }\n  };\n  const toggleTracking = () => {\n    setIsTracking(!isTracking);\n    if (!isTracking) startTracking();\n  };\n  const startTracking = () => {\n    const simulatedBatches = generateSimulatedRoute(1, 5);\n    simulatedBatches.forEach((batch, index) => {\n      setTimeout(() => processBatch(batch, index === simulatedBatches.length - 1), index * 5000);\n    });\n  };\n  const processBatch = async (batch, isLastBatch) => {\n    const isMoving = smartGpsTracking(batch.gps_data, gpsData);\n    if (isMoving) {\n      try {\n        const driver_id = localStorage.getItem('driver_id');\n        const response = await api.post('/record-telematics', {\n          driver_id,\n          gps_data: batch.gps_data\n        });\n        const features = response.data.features;\n        if (features) {\n          var _features$SpeedMS, _features$Acceleratio, _features$JerkMS, _features$Braking_Int;\n          const speed = (_features$SpeedMS = features['Speed(m/s)']) !== null && _features$SpeedMS !== void 0 ? _features$SpeedMS : 0;\n          const acceleration = (_features$Acceleratio = features['Acceleration(m/s^2)']) !== null && _features$Acceleratio !== void 0 ? _features$Acceleratio : 0;\n          const jerk = (_features$JerkMS = features['Jerk(m/s^3)']) !== null && _features$JerkMS !== void 0 ? _features$JerkMS : 0;\n          const brakingIntensity = (_features$Braking_Int = features['Braking_Intensity']) !== null && _features$Braking_Int !== void 0 ? _features$Braking_Int : 0;\n\n          // Update data for each chart\n          setSpeedData(prevData => [...prevData, speed]);\n          setAccelerationData(prevData => [...prevData, acceleration]);\n          setJerkData(prevData => [...prevData, jerk]);\n          setBrakingData(prevData => [...prevData, brakingIntensity]);\n\n          // Update GPS data and route points\n          setGpsData(prevData => [...prevData, ...batch.gps_data]);\n          const lastPoint = batch.gps_data[batch.gps_data.length - 1];\n          setMarkers(prevMarkers => [...prevMarkers, {\n            lat: lastPoint.Latitude,\n            lng: lastPoint.Longitude\n          }]);\n          setRoute(prevRoute => [...prevRoute, ...batch.gps_data.map(point => [point.Latitude, point.Longitude])]);\n\n          // If this is the last batch, process the daily data\n          if (isLastBatch) {\n            processDailyData(); // Call the daily data API after all batches are processed\n          }\n        }\n      } catch (error) {\n        console.error('Error recording telematics data:', error);\n        setError('Error processing GPS data. Please try again.');\n      }\n    }\n  };\n  const renderBarChart = (label, data, backgroundColor) => {\n    return /*#__PURE__*/_jsxDEV(Bar, {\n      data: {\n        labels: ['Daily Average'],\n        datasets: [{\n          label: label,\n          data: [data],\n          backgroundColor: backgroundColor\n        }]\n      },\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Driver Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tracking-controls\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleTracking,\n        children: isTracking ? 'Stop Tracking' : 'Start Tracking'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Route Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [26.6337, 92.7926],\n        zoom: 13,\n        scrollWheelZoom: false,\n        className: \"map-container\",\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 OpenStreetMap contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n          positions: route,\n          color: \"blue\",\n          weight: 5,\n          dashArray: [10, 20],\n          lineJoin: \"round\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), markers.map((marker, idx) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: [marker.lat, marker.lng],\n          icon: customIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [\"Latitude: \", marker.lat, \", Longitude: \", marker.lng]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Driving Feature Fluctuations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [renderBarChart('Speed (m/s)', speedData.reduce((a, b) => a + b, 0) / speedData.length, 'rgba(75, 192, 192, 1)'), renderBarChart('Acceleration (m/s²)', accelerationData.reduce((a, b) => a + b, 0) / accelerationData.length, 'rgba(255, 99, 132, 1)'), renderBarChart('Jerk (m/s³)', jerkData.reduce((a, b) => a + b, 0) / jerkData.length, 'rgba(54, 162, 235, 1)'), renderBarChart('Braking Intensity', brakingData.reduce((a, b) => a + b, 0) / brakingData.length, 'rgba(153, 102, 255, 1)')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), dailyData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daily-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Daily Performance Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"daily-data-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total Distance Covered (km)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total Trips\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Driving Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Driving Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: dailyData.total_distance_covered_km\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: dailyData.total_trips\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: dailyData.driving_score\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: dailyData.driving_category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Detailed Driving Metrics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [renderBarChart('Speed (km/h)', dailyData.aggregated_data['Speed(km/h)'], 'rgba(75, 192, 192, 1)'), renderBarChart('Acceleration (m/s²)', dailyData.aggregated_data['Acceleration(m/s^2)'], 'rgba(255, 99, 132, 1)'), renderBarChart('Heading Change (degrees)', dailyData.aggregated_data['Heading_Change(degrees)'], 'rgba(153, 102, 255, 1)'), renderBarChart('Jerk (m/s³)', dailyData.aggregated_data['Jerk(m/s^3)'], 'rgba(54, 162, 235, 1)'), renderBarChart('Braking Intensity', dailyData.aggregated_data['Braking_Intensity'], 'rgba(153, 102, 255, 1)'), renderBarChart('SASV', dailyData.aggregated_data['SASV'], 'rgba(75, 192, 192, 1)'), renderBarChart('Speed Violation Count', dailyData.aggregated_data['Speed_Violation'], 'rgba(255, 99, 132, 1)')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(BatchProcessing, {\n      gpsData: gpsData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"Y6bpZVUdPUlYwdSipc41WfjjRpM=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Line","Bar","MapContainer","TileLayer","Marker","Popup","Polyline","L","api","smartGpsTracking","generateSimulatedRoute","BatchProcessing","Chart","ChartJS","CategoryScale","LinearScale","BarElement","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","customIcon","Icon","iconUrl","require","iconSize","iconAnchor","popupAnchor","Dashboard","_s","gpsData","setGpsData","speedData","setSpeedData","accelerationData","setAccelerationData","jerkData","setJerkData","brakingData","setBrakingData","route","setRoute","markers","setMarkers","isTracking","setIsTracking","dailyData","setDailyData","error","setError","processDailyData","driver_id","localStorage","getItem","response","post","data","console","toggleTracking","startTracking","simulatedBatches","forEach","batch","index","setTimeout","processBatch","length","isLastBatch","isMoving","gps_data","features","_features$SpeedMS","_features$Acceleratio","_features$JerkMS","_features$Braking_Int","speed","acceleration","jerk","brakingIntensity","prevData","lastPoint","prevMarkers","lat","Latitude","lng","Longitude","prevRoute","map","point","renderBarChart","label","backgroundColor","labels","datasets","options","scales","y","beginAtZero","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","center","zoom","scrollWheelZoom","url","attribution","positions","color","weight","dashArray","lineJoin","marker","idx","position","icon","reduce","a","b","total_distance_covered_km","total_trips","driving_score","driving_category","aggregated_data","_c","$RefreshReg$"],"sources":["C:/Users/anush/OneDrive/Desktop/minor project/DriveIQ/DriveIQ/DriveIQ-PWA/src/components/Dashboard/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\nimport api from '../../utils/api';\r\nimport { smartGpsTracking, generateSimulatedRoute } from '../../utils/geolocation';\r\nimport BatchProcessing from '../BatchProcessing/BatchProcessing';\r\nimport './Dashboard.scss';\r\n\r\n// Register Chart.js components\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend);\r\n\r\n// Define custom marker icon\r\nconst customIcon = new L.Icon({\r\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n  iconSize: [25, 41],\r\n  iconAnchor: [12, 41],\r\n  popupAnchor: [1, -34],\r\n});\r\n\r\nconst Dashboard = () => {\r\n  const [gpsData, setGpsData] = useState([]);\r\n  const [speedData, setSpeedData] = useState([]);\r\n  const [accelerationData, setAccelerationData] = useState([]);\r\n  const [jerkData, setJerkData] = useState([]);\r\n  const [brakingData, setBrakingData] = useState([]);\r\n  const [route, setRoute] = useState([]);\r\n  const [markers, setMarkers] = useState([]);\r\n  const [isTracking, setIsTracking] = useState(false);\r\n  const [dailyData, setDailyData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Function to process daily data after all batches are done\r\n  const processDailyData = async () => {\r\n    try {\r\n      const driver_id = localStorage.getItem('driver_id');\r\n      const response = await api.post('/process-daily-data', { driver_id });\r\n      setDailyData(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching daily data:', error);\r\n      setError('Error processing daily data.');\r\n    }\r\n  };\r\n\r\n  const toggleTracking = () => {\r\n    setIsTracking(!isTracking);\r\n    if (!isTracking) startTracking();\r\n  };\r\n\r\n  const startTracking = () => {\r\n    const simulatedBatches = generateSimulatedRoute(1, 5);\r\n    simulatedBatches.forEach((batch, index) => {\r\n      setTimeout(() => processBatch(batch, index === simulatedBatches.length - 1), index * 5000);\r\n    });\r\n  };\r\n\r\n  const processBatch = async (batch, isLastBatch) => {\r\n    const isMoving = smartGpsTracking(batch.gps_data, gpsData);\r\n    if (isMoving) {\r\n      try {\r\n        const driver_id = localStorage.getItem('driver_id');\r\n        const response = await api.post('/record-telematics', {\r\n          driver_id,\r\n          gps_data: batch.gps_data,\r\n        });\r\n\r\n        const features = response.data.features;\r\n        if (features) {\r\n          const speed = features['Speed(m/s)'] ?? 0;\r\n          const acceleration = features['Acceleration(m/s^2)'] ?? 0;\r\n          const jerk = features['Jerk(m/s^3)'] ?? 0;\r\n          const brakingIntensity = features['Braking_Intensity'] ?? 0;\r\n\r\n          // Update data for each chart\r\n          setSpeedData((prevData) => [...prevData, speed]);\r\n          setAccelerationData((prevData) => [...prevData, acceleration]);\r\n          setJerkData((prevData) => [...prevData, jerk]);\r\n          setBrakingData((prevData) => [...prevData, brakingIntensity]);\r\n\r\n          // Update GPS data and route points\r\n          setGpsData((prevData) => [...prevData, ...batch.gps_data]);\r\n\r\n          const lastPoint = batch.gps_data[batch.gps_data.length - 1];\r\n          setMarkers((prevMarkers) => [\r\n            ...prevMarkers,\r\n            { lat: lastPoint.Latitude, lng: lastPoint.Longitude },\r\n          ]);\r\n\r\n          setRoute((prevRoute) => [\r\n            ...prevRoute,\r\n            ...batch.gps_data.map((point) => [point.Latitude, point.Longitude]),\r\n          ]);\r\n\r\n          // If this is the last batch, process the daily data\r\n          if (isLastBatch) {\r\n            processDailyData(); // Call the daily data API after all batches are processed\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error recording telematics data:', error);\r\n        setError('Error processing GPS data. Please try again.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const renderBarChart = (label, data, backgroundColor) => {\r\n    return (\r\n      <Bar\r\n        data={{\r\n          labels: ['Daily Average'],\r\n          datasets: [\r\n            {\r\n              label: label,\r\n              data: [data],\r\n              backgroundColor: backgroundColor,\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          scales: {\r\n            y: {\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Driver Dashboard</h2>\r\n\r\n      <div className=\"tracking-controls\">\r\n        <button onClick={toggleTracking}>\r\n          {isTracking ? 'Stop Tracking' : 'Start Tracking'}\r\n        </button>\r\n      </div>\r\n\r\n      {/* Map Section */}\r\n      <div className=\"map-section\">\r\n        <h3>Route Map</h3>\r\n        <MapContainer center={[26.6337, 92.7926]} zoom={13} scrollWheelZoom={false} className=\"map-container\">\r\n          <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" attribution=\"&copy; OpenStreetMap contributors\" />\r\n          <Polyline positions={route} color=\"blue\" weight={5} dashArray={[10, 20]} lineJoin=\"round\" />\r\n          {markers.map((marker, idx) => (\r\n            <Marker key={idx} position={[marker.lat, marker.lng]} icon={customIcon}>\r\n              <Popup>Latitude: {marker.lat}, Longitude: {marker.lng}</Popup>\r\n            </Marker>\r\n          ))}\r\n        </MapContainer>\r\n      </div>\r\n\r\n      {/* Charts Section */}\r\n      <div className=\"chart-section\">\r\n        <h3>Driving Feature Fluctuations</h3>\r\n        <div className=\"chart-container\">\r\n          {renderBarChart('Speed (m/s)', speedData.reduce((a, b) => a + b, 0) / speedData.length, 'rgba(75, 192, 192, 1)')}\r\n          {renderBarChart('Acceleration (m/s²)', accelerationData.reduce((a, b) => a + b, 0) / accelerationData.length, 'rgba(255, 99, 132, 1)')}\r\n          {renderBarChart('Jerk (m/s³)', jerkData.reduce((a, b) => a + b, 0) / jerkData.length, 'rgba(54, 162, 235, 1)')}\r\n          {renderBarChart('Braking Intensity', brakingData.reduce((a, b) => a + b, 0) / brakingData.length, 'rgba(153, 102, 255, 1)')}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Daily Data Section */}\r\n      {dailyData && (\r\n        <div className=\"daily-summary\">\r\n          <h3>Daily Performance Summary</h3>\r\n          <table className=\"daily-data-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Total Distance Covered (km)</th>\r\n                <th>Total Trips</th>\r\n                <th>Driving Score</th>\r\n                <th>Driving Category</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>{dailyData.total_distance_covered_km}</td>\r\n                <td>{dailyData.total_trips}</td>\r\n                <td>{dailyData.driving_score}</td>\r\n                <td>{dailyData.driving_category}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <h4>Detailed Driving Metrics</h4>\r\n          <div className=\"chart-container\">\r\n            {renderBarChart('Speed (km/h)', dailyData.aggregated_data['Speed(km/h)'], 'rgba(75, 192, 192, 1)')}\r\n            {renderBarChart('Acceleration (m/s²)', dailyData.aggregated_data['Acceleration(m/s^2)'], 'rgba(255, 99, 132, 1)')}\r\n            {renderBarChart('Heading Change (degrees)', dailyData.aggregated_data['Heading_Change(degrees)'], 'rgba(153, 102, 255, 1)')}\r\n            {renderBarChart('Jerk (m/s³)', dailyData.aggregated_data['Jerk(m/s^3)'], 'rgba(54, 162, 235, 1)')}\r\n            {renderBarChart('Braking Intensity', dailyData.aggregated_data['Braking_Intensity'], 'rgba(153, 102, 255, 1)')}\r\n            {renderBarChart('SASV', dailyData.aggregated_data['SASV'], 'rgba(75, 192, 192, 1)')}\r\n            {renderBarChart('Speed Violation Count', dailyData.aggregated_data['Speed_Violation'], 'rgba(255, 99, 132, 1)')}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Error Message */}\r\n      {error && <div className=\"error\">{error}</div>}\r\n\r\n      {/* Batch Processing Section */}\r\n      <BatchProcessing gpsData={gpsData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}