{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anush\\\\OneDrive\\\\Desktop\\\\minor project\\\\DriveIQ\\\\DriveIQ\\\\DriveIQ-PWA\\\\src\\\\components\\\\MapView\\\\MapView.jsx\";\nimport React, { useEffect } from 'react';\nimport { MapContainer, TileLayer, Polyline, Marker } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './MapView.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapView = ({\n  gpsData\n}) => {\n  // Default coordinates to use when gpsData is empty\n  const defaultCoords = [26.6338, 92.8006]; // Coordinates for Tezpur, India\n\n  // If gpsData is available, map it into an array of [latitude, longitude]\n  const route = gpsData.map(point => [point.Latitude, point.Longitude]);\n\n  // Set starting point and ending point for markers\n  const startPoint = route.length > 0 ? route[0] : defaultCoords;\n  const endPoint = route.length > 1 ? route[route.length - 1] : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-view\",\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: startPoint,\n      zoom: 14,\n      className: \"map\",\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), route.length > 0 && /*#__PURE__*/_jsxDEV(Polyline, {\n        positions: route,\n        color: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 30\n      }, this), startPoint && /*#__PURE__*/_jsxDEV(Marker, {\n        position: startPoint\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 24\n      }, this), endPoint && /*#__PURE__*/_jsxDEV(Marker, {\n        position: endPoint\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","useEffect","MapContainer","TileLayer","Polyline","Marker","jsxDEV","_jsxDEV","MapView","gpsData","defaultCoords","route","map","point","Latitude","Longitude","startPoint","length","endPoint","className","children","center","zoom","url","fileName","_jsxFileName","lineNumber","columnNumber","positions","color","position","_c","$RefreshReg$"],"sources":["C:/Users/anush/OneDrive/Desktop/minor project/DriveIQ/DriveIQ/DriveIQ-PWA/src/components/MapView/MapView.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { MapContainer, TileLayer, Polyline, Marker } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport './MapView.scss';\r\n\r\nconst MapView = ({ gpsData }) => {\r\n  // Default coordinates to use when gpsData is empty\r\n  const defaultCoords = [26.6338, 92.8006];  // Coordinates for Tezpur, India\r\n\r\n  // If gpsData is available, map it into an array of [latitude, longitude]\r\n  const route = gpsData.map(point => [point.Latitude, point.Longitude]);\r\n\r\n  // Set starting point and ending point for markers\r\n  const startPoint = route.length > 0 ? route[0] : defaultCoords;\r\n  const endPoint = route.length > 1 ? route[route.length - 1] : null;\r\n\r\n  return (\r\n    <div className=\"map-view\">\r\n      <MapContainer center={startPoint} zoom={14} className=\"map\">\r\n        <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n        \r\n        {/* Draw the route as a polyline */}\r\n        {route.length > 0 && <Polyline positions={route} color=\"blue\" />}\r\n\r\n        {/* Start marker */}\r\n        {startPoint && <Marker position={startPoint} />}\r\n        \r\n        {/* End marker */}\r\n        {endPoint && <Marker position={endPoint} />}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapView;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,YAAY,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,eAAe;AACzE,OAAO,0BAA0B;AACjC,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAC/B;EACA,MAAMC,aAAa,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAE;;EAE3C;EACA,MAAMC,KAAK,GAAGF,OAAO,CAACG,GAAG,CAACC,KAAK,IAAI,CAACA,KAAK,CAACC,QAAQ,EAAED,KAAK,CAACE,SAAS,CAAC,CAAC;;EAErE;EACA,MAAMC,UAAU,GAAGL,KAAK,CAACM,MAAM,GAAG,CAAC,GAAGN,KAAK,CAAC,CAAC,CAAC,GAAGD,aAAa;EAC9D,MAAMQ,QAAQ,GAAGP,KAAK,CAACM,MAAM,GAAG,CAAC,GAAGN,KAAK,CAACA,KAAK,CAACM,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI;EAElE,oBACEV,OAAA;IAAKY,SAAS,EAAC,UAAU;IAAAC,QAAA,eACvBb,OAAA,CAACL,YAAY;MAACmB,MAAM,EAAEL,UAAW;MAACM,IAAI,EAAE,EAAG;MAACH,SAAS,EAAC,KAAK;MAAAC,QAAA,gBACzDb,OAAA,CAACJ,SAAS;QAACoB,GAAG,EAAC;MAAoD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAGrEhB,KAAK,CAACM,MAAM,GAAG,CAAC,iBAAIV,OAAA,CAACH,QAAQ;QAACwB,SAAS,EAAEjB,KAAM;QAACkB,KAAK,EAAC;MAAM;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAG/DX,UAAU,iBAAIT,OAAA,CAACF,MAAM;QAACyB,QAAQ,EAAEd;MAAW;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAG9CT,QAAQ,iBAAIX,OAAA,CAACF,MAAM;QAACyB,QAAQ,EAAEZ;MAAS;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV,CAAC;AAACI,EAAA,GA3BIvB,OAAO;AA6Bb,eAAeA,OAAO;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}