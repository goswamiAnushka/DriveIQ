{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anush\\\\OneDrive\\\\Desktop\\\\minor project\\\\DriveIQ\\\\DriveIQ\\\\DriveIQ-PWA\\\\src\\\\components\\\\DailyScorePopup\\\\DailyScorePopup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from '../../utils/api'; // Assuming this is your API utility for making requests\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DailyDataComponent = () => {\n  _s();\n  const [dailyData, setDailyData] = useState(null); // Store the API response\n  const [error, setError] = useState(null); // Handle any errors\n  const [loading, setLoading] = useState(true); // Handle the loading state\n\n  // Function to call the /process-daily-data API\n  const fetchDailyData = async () => {\n    const driver_id = localStorage.getItem('driver_id'); // Fetch driver ID from localStorage\n    if (!driver_id) {\n      setError('Driver ID not found. Please log in.');\n      setLoading(false);\n      return;\n    }\n    try {\n      const response = await api.post('/process-daily-data', {\n        driver_id\n      }); // Call API\n      setDailyData(response.data); // Set response to state\n      setError(null); // Clear any errors\n    } catch (err) {\n      console.error('Error fetching daily data:', err);\n      setError('Failed to fetch daily data. Please try again.');\n    } finally {\n      setLoading(false); // Stop loading when request is complete\n    }\n  };\n\n  // Call the function when the component mounts\n  useEffect(() => {\n    fetchDailyData();\n  }, []);\n\n  // Return loading, error or the response content\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"daily-data-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Daily Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading daily data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), dailyData && /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: [JSON.stringify(dailyData, null, 2), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(DailyDataComponent, \"4phnYUCPj8rDZvt0Ck+Lmn82p1E=\");\n_c = DailyDataComponent;\nexport default DailyScore;\nvar _c;\n$RefreshReg$(_c, \"DailyDataComponent\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","DailyDataComponent","_s","dailyData","setDailyData","error","setError","loading","setLoading","fetchDailyData","driver_id","localStorage","getItem","response","post","data","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","_c","DailyScore","$RefreshReg$"],"sources":["C:/Users/anush/OneDrive/Desktop/minor project/DriveIQ/DriveIQ/DriveIQ-PWA/src/components/DailyScorePopup/DailyScorePopup.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport api from '../../utils/api'; // Assuming this is your API utility for making requests\r\n\r\nconst DailyDataComponent = () => {\r\n  const [dailyData, setDailyData] = useState(null);  // Store the API response\r\n  const [error, setError] = useState(null);  // Handle any errors\r\n  const [loading, setLoading] = useState(true);  // Handle the loading state\r\n\r\n  // Function to call the /process-daily-data API\r\n  const fetchDailyData = async () => {\r\n    const driver_id = localStorage.getItem('driver_id');  // Fetch driver ID from localStorage\r\n    if (!driver_id) {\r\n      setError('Driver ID not found. Please log in.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await api.post('/process-daily-data', { driver_id });  // Call API\r\n      setDailyData(response.data);  // Set response to state\r\n      setError(null);  // Clear any errors\r\n    } catch (err) {\r\n      console.error('Error fetching daily data:', err);\r\n      setError('Failed to fetch daily data. Please try again.');\r\n    } finally {\r\n      setLoading(false);  // Stop loading when request is complete\r\n    }\r\n  };\r\n\r\n  // Call the function when the component mounts\r\n  useEffect(() => {\r\n    fetchDailyData();\r\n  }, []);\r\n\r\n  // Return loading, error or the response content\r\n  return (\r\n    <div className=\"daily-data-container\">\r\n      <h2>Daily Data</h2>\r\n\r\n      {/* Display loading state */}\r\n      {loading && <p>Loading daily data...</p>}\r\n\r\n      {/* Display error if present */}\r\n      {error && <p className=\"error\">{error}</p>}\r\n\r\n      {/* Display daily data once fetched */}\r\n      {dailyData && (\r\n        <pre>\r\n          {JSON.stringify(dailyData, null, 2)}  {/* Pretty print the JSON data */}\r\n        </pre>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DailyScore;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;EACnD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;EAC3C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;;EAE/C;EACA,MAAMa,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAE;IACtD,IAAI,CAACF,SAAS,EAAE;MACdJ,QAAQ,CAAC,qCAAqC,CAAC;MAC/CE,UAAU,CAAC,KAAK,CAAC;MACjB;IACF;IAEA,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMf,GAAG,CAACgB,IAAI,CAAC,qBAAqB,EAAE;QAAEJ;MAAU,CAAC,CAAC,CAAC,CAAE;MACxEN,YAAY,CAACS,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAE;MAC9BT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;IACnB,CAAC,CAAC,OAAOU,GAAG,EAAE;MACZC,OAAO,CAACZ,KAAK,CAAC,4BAA4B,EAAEW,GAAG,CAAC;MAChDV,QAAQ,CAAC,+CAA+C,CAAC;IAC3D,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC,CAAC,CAAE;IACtB;EACF,CAAC;;EAED;EACAX,SAAS,CAAC,MAAM;IACdY,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,oBACET,OAAA;IAAKkB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnCnB,OAAA;MAAAmB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAGlBhB,OAAO,iBAAIP,OAAA;MAAAmB,QAAA,EAAG;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAGvClB,KAAK,iBAAIL,OAAA;MAAGkB,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEd;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAGzCpB,SAAS,iBACRH,OAAA;MAAAmB,QAAA,GACGK,IAAI,CAACC,SAAS,CAACtB,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC,EAAC,IAAE;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrB,EAAA,CAlDID,kBAAkB;AAAAyB,EAAA,GAAlBzB,kBAAkB;AAoDxB,eAAe0B,UAAU;AAAC,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}